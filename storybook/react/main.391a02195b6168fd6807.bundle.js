(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{114:function(module,exports,__webpack_require__){module.exports={button:"Button_button__2cZ5P button_hds-button__3_P2f",label:"Button_label__1ay92 button_hds-button__label__bZPG9",fullWidth:"Button_fullWidth__1WosL button_hds-button--fullwidth__ED0a0","size-small":"Button_size-small__ykRVq button_hds-button--small__1SNNl",icon:"Button_icon__3rDp9 button_hds-icon__3LIVu",primary:"Button_primary__1pAFz button_hds-button--primary__3I6qa",secondary:"Button_secondary__39Xzd button_hds-button--secondary__RXWJI",supplementary:"Button_supplementary__3V2td button_hds-button--supplementary__3E8Ah",success:"Button_success__2O7gy button_hds-button--success__2RX60",danger:"Button_danger__yCLGL button_hds-button--danger__MZTXu","theme-coat":"Button_theme-coat__1NJYD button_hds-button--theme-coat__2aRM3","theme-black":"Button_theme-black__1cpNu button_hds-button--theme-black__23K7p"}},115:function(module,exports,__webpack_require__){module.exports={wrapper:"ImageWithCard_wrapper__1Gv_S",image:"ImageWithCard_image__ufFV2",cardContainer:"ImageWithCard_cardContainer__2hAWA",card:"ImageWithCard_card__oAOn4 helpers_text-body__2wZWC",rightAlignment:"ImageWithCard_rightAlignment__2kIYl",leftAlignment:"ImageWithCard_leftAlignment__IAiHE",splitLayout:"ImageWithCard_splitLayout__138PC",hoverLayout:"ImageWithCard_hoverLayout__1Lphm",fullWidth:"ImageWithCard_fullWidth__G8hLq",primary:"ImageWithCard_primary__2JKY2",secondary:"ImageWithCard_secondary__3FK80",tertiary:"ImageWithCard_tertiary__1sEud"}},128:function(module,__webpack_exports__,__webpack_require__){"use strict";var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_utils_classNames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(31),_Notification_module_css__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(85),_Notification_module_css__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_Notification_module_css__WEBPACK_IMPORTED_MODULE_2__),_icons__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(43),icons={notification:react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_icons__WEBPACK_IMPORTED_MODULE_3__.e,{className:_Notification_module_css__WEBPACK_IMPORTED_MODULE_2___default.a.iconInfo}),error:react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_icons__WEBPACK_IMPORTED_MODULE_3__.i,{className:_Notification_module_css__WEBPACK_IMPORTED_MODULE_2___default.a.iconWarning}),warning:react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_icons__WEBPACK_IMPORTED_MODULE_3__.b,{className:_Notification_module_css__WEBPACK_IMPORTED_MODULE_2___default.a.iconAttention}),success:react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_icons__WEBPACK_IMPORTED_MODULE_3__.c,{className:_Notification_module_css__WEBPACK_IMPORTED_MODULE_2___default.a.iconCheck})},Notification=function(_ref){var _ref$children=_ref.children,children=void 0===_ref$children?null:_ref$children,labelText=_ref.labelText,_ref$type=_ref.type,type=void 0===_ref$type?"notification":_ref$type;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{className:Object(_utils_classNames__WEBPACK_IMPORTED_MODULE_1__.a)(_Notification_module_css__WEBPACK_IMPORTED_MODULE_2___default.a.notification,_Notification_module_css__WEBPACK_IMPORTED_MODULE_2___default.a[type])},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{className:_Notification_module_css__WEBPACK_IMPORTED_MODULE_2___default.a.label},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span",{className:_Notification_module_css__WEBPACK_IMPORTED_MODULE_2___default.a.icon,"aria-hidden":"true"},icons[type]),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span",{className:_Notification_module_css__WEBPACK_IMPORTED_MODULE_2___default.a.labelText},labelText)),children&&react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{className:_Notification_module_css__WEBPACK_IMPORTED_MODULE_2___default.a.bodyText},children))};Notification.displayName="Notification",Notification.__docgenInfo={description:"",methods:[],displayName:"Notification",props:{children:{defaultValue:{value:"null",computed:!1},required:!1},type:{defaultValue:{value:"'notification'",computed:!1},required:!1}}},__webpack_exports__.a=Notification,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/notification/Notification.tsx"]={name:"Notification",docgenInfo:Notification.__docgenInfo,path:"src/components/notification/Notification.tsx"})},1527:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(2),__webpack_require__(57),__webpack_require__(50),__webpack_require__(81),__webpack_require__(47),__webpack_require__(1528),__webpack_require__(1529),__webpack_require__(8),__webpack_require__(51);var _clientApi=__webpack_require__(56),_clientLogger=__webpack_require__(52),_configFilename=__webpack_require__(1530);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(_configFilename.args||_configFilename.argTypes)&&_clientLogger.logger.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify({args:_configFilename.args,argTypes:_configFilename.argTypes})),_configFilename.decorators&&_configFilename.decorators.forEach((function(decorator){return(0,_clientApi.addDecorator)(decorator)})),(_configFilename.parameters||_configFilename.globalArgs||_configFilename.globalArgTypes)&&(0,_clientApi.addParameters)(function _objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null!=arguments[i]?arguments[i]:{},i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}));return target}({},_configFilename.parameters,{globalArgs:_configFilename.globalArgs,globalArgTypes:_configFilename.globalArgTypes})),_configFilename.argTypesEnhancers&&_configFilename.argTypesEnhancers.forEach((function(enhancer){return(0,_clientApi.addArgTypesEnhancer)(enhancer)}))},1530:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(60),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__),_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(14),_storybook_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(148),_storybook_addon_viewport__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(566),viewports=(__webpack_require__(1532),Object(_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)(Object(_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.a)({},_storybook_addon_viewport__WEBPACK_IMPORTED_MODULE_4__.INITIAL_VIEWPORTS),{},{narrow:{name:"Narrow full-height (320px)",styles:{width:"320px",height:"100%"}}})),_ref=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_2__.Title,null,"Props"),_ref2=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_2__.Props,null),_ref3=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_2__.Stories,{title:"Examples",includePrimary:!0});Object(_storybook_react__WEBPACK_IMPORTED_MODULE_3__.addParameters)({options:{storySort:function storySort(a,b){return a[1].kind===b[1].kind?0:a[1].id.localeCompare(b[1].id,void 0,{numeric:!0})}},viewport:{viewports:viewports},docs:{page:function page(){return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,_ref,_ref2,_ref3)}},backgrounds:[{name:"White",value:"#fff",default:!0},{name:"Black",value:"#111"}]})},1532:function(module,exports,__webpack_require__){},1533:function(module,exports,__webpack_require__){"use strict";(function(module){var _framework=__webpack_require__(148);module._StorybookPreserveDecorators=!0,(0,_framework.configure)([__webpack_require__(1534)],module)}).call(this,__webpack_require__(90)(module))},1534:function(module,exports,__webpack_require__){var map={"./components/button/Button.stories.tsx":1535,"./components/checkbox/Checkbox.stories.tsx":1552,"./components/imagewithcard/ImageWithCard.stories.tsx":1536,"./components/koros/Koros.stories.tsx":1537,"./components/notification/DismissableNotification.stories.tsx":1550,"./components/notification/Notification.stories.tsx":1538,"./components/radiobutton/RadioButton.stories.tsx":1548,"./components/section/Section.stories.tsx":1539,"./components/textinput/TextArea.stories.tsx":1547,"./components/textinput/TextInput.stories.tsx":1540,"./examples/ExampleViews.stories.tsx":1551,"./icons/icons.stories.tsx":1541};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1534},1535:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Primary",(function(){return Primary})),__webpack_require__.d(__webpack_exports__,"Secondary",(function(){return Secondary})),__webpack_require__.d(__webpack_exports__,"Supplementary",(function(){return Supplementary})),__webpack_require__.d(__webpack_exports__,"Small",(function(){return Small})),__webpack_require__.d(__webpack_exports__,"FullWidth",(function(){return FullWidth})),__webpack_require__.d(__webpack_exports__,"Icons",(function(){return Icons})),__webpack_require__.d(__webpack_exports__,"Playground",(function(){return Playground}));var _parameters,_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(17),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(149),_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(1),_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(14),_Button__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(54),_icons__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(43),onClick=Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("button-click"),_ref=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_4__.Title,null,"Props"),_ref2=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_4__.Subtitle,null,"Props, which are not mentioned below, are passed to the native element"),_ref3=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_4__.Props,null),_ref4=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_4__.Stories,{title:"Examples",includePrimary:!0});__webpack_exports__.default={component:_Button__WEBPACK_IMPORTED_MODULE_5__.a,title:"Components/Button",decorators:[_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.withKnobs],parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import React from \'react\';\\nimport { action } from \'@storybook/addon-actions\';\\nimport { boolean, radios, text, withKnobs } from \'@storybook/addon-knobs\';\\nimport { Props, Stories, Subtitle, Title } from \'@storybook/addon-docs/dist/blocks\';\\n\\nimport Button from \'./Button\';\\nimport { IconShare, IconAngleRight, IconSmile } from \'../../icons\';\\n\\nconst onClick = action(\'button-click\');\\n\\nexport default {\\n  component: Button,\\n  title: \'Components/Button\',\\n  decorators: [withKnobs],\\n  parameters: {\\n    docs: {\\n      page: () => (\\n        <>\\n          <Title>Props</Title>\\n          <Subtitle>Props, which are not mentioned below, are passed to the native element</Subtitle>\\n          <Props />\\n          <Stories title=\\"Examples\\" includePrimary />\\n        </>\\n      ),\\n    },\\n  },\\n};\\n\\nexport const Primary = () => <Button onClick={onClick}>Button</Button>;\\n\\nexport const Secondary = () => (\\n  <Button onClick={onClick} variant=\\"secondary\\">\\n    Button\\n  </Button>\\n);\\n\\nexport const Supplementary = () => (\\n  <Button onClick={onClick} variant=\\"supplementary\\">\\n    Button\\n  </Button>\\n);\\n\\nexport const Small = () => (\\n  <Button onClick={onClick} size=\\"small\\">\\n    Button\\n  </Button>\\n);\\n\\nexport const FullWidth = () => (\\n  <Button onClick={onClick} fullWidth>\\n    Button\\n  </Button>\\n);\\n\\nFullWidth.story = {\\n  name: \'Full width\',\\n};\\n\\nexport const Icons = () => (\\n  <>\\n    <Button onClick={onClick} iconLeft={<IconShare />}>\\n      Button\\n    </Button>\\n\\n    <br />\\n    <br />\\n\\n    <Button onClick={onClick} iconRight={<IconAngleRight />}>\\n      Button\\n    </Button>\\n\\n    <br />\\n    <br />\\n\\n    <Button onClick={onClick} iconLeft={<IconShare />} iconRight={<IconAngleRight />}>\\n      Button\\n    </Button>\\n  </>\\n);\\n\\nexport const Playground = () => {\\n  const label = text(\'Label\', \'Button\');\\n  const variant = radios(\\n    \'Variant\',\\n    {\\n      primary: \'primary\',\\n      secondary: \'secondary\',\\n      supplementary: \'supplementary\',\\n      success: \'success\',\\n      danger: \'danger\',\\n    },\\n    \'primary\',\\n  );\\n  const theme = radios(\\n    \'Theme\',\\n    {\\n      default: \'default\',\\n      coat: \'coat\',\\n      black: \'black\',\\n    },\\n    \'default\',\\n  );\\n  const size = radios(\'Size\', { default: \'default\', small: \'small\' }, \'default\');\\n  const disabled = boolean(\'Disabled\', false);\\n  const fullWidth = boolean(\'Full width\', false);\\n  const iconLeft = boolean(\'Icon left\', false);\\n  const iconRight = boolean(\'Icon right\', false);\\n\\n  return (\\n    <Button\\n      variant={variant}\\n      theme={theme}\\n      disabled={disabled}\\n      fullWidth={fullWidth}\\n      size={size}\\n      iconLeft={iconLeft ? <IconSmile /> : null}\\n      iconRight={iconRight ? <IconSmile /> : null}\\n    >\\n      {label}\\n    </Button>\\n  );\\n};\\n\\nPlayground.story = {\\n  parameters: {\\n    previewTabs: {\\n      \'storybook/docs/panel\': {\\n        hidden: true,\\n      },\\n    },\\n    docs: {\\n      disable: true,\\n    },\\n  },\\n};\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"components-button--primary":{"startLoc":{"col":23,"line":29},"endLoc":{"col":70,"line":29},"startBody":{"col":23,"line":29},"endBody":{"col":70,"line":29}},"components-button--secondary":{"startLoc":{"col":25,"line":31},"endLoc":{"col":1,"line":35},"startBody":{"col":25,"line":31},"endBody":{"col":1,"line":35}},"components-button--supplementary":{"startLoc":{"col":29,"line":37},"endLoc":{"col":1,"line":41},"startBody":{"col":29,"line":37},"endBody":{"col":1,"line":41}},"components-button--small":{"startLoc":{"col":21,"line":43},"endLoc":{"col":1,"line":47},"startBody":{"col":21,"line":43},"endBody":{"col":1,"line":47}},"components-button--full-width":{"startLoc":{"col":25,"line":49},"endLoc":{"col":1,"line":53},"startBody":{"col":25,"line":49},"endBody":{"col":1,"line":53}},"components-button--icons":{"startLoc":{"col":21,"line":59},"endLoc":{"col":1,"line":79},"startBody":{"col":21,"line":59},"endBody":{"col":1,"line":79}},"components-button--playground":{"startLoc":{"col":26,"line":81},"endLoc":{"col":1,"line":122},"startBody":{"col":26,"line":81},"endBody":{"col":1,"line":122}}};\n    \nimport React from \'react\';\nimport { action } from \'@storybook/addon-actions\';\nimport { boolean, radios, text, withKnobs } from \'@storybook/addon-knobs\';\nimport { Props, Stories, Subtitle, Title } from \'@storybook/addon-docs/dist/blocks\';\n\nimport Button from \'./Button\';\nimport { IconShare, IconAngleRight, IconSmile } from \'../../icons\';\n\nconst onClick = action(\'button-click\');\n\nexport default {\n  component: Button,\n  title: \'Components/Button\',\n  decorators: [withKnobs],\n  parameters: {"storySource":{"source":"import React from \'react\';\\nimport { action } from \'@storybook/addon-actions\';\\nimport { boolean, radios, text, withKnobs } from \'@storybook/addon-knobs\';\\nimport { Props, Stories, Subtitle, Title } from \'@storybook/addon-docs/dist/blocks\';\\n\\nimport Button from \'./Button\';\\nimport { IconShare, IconAngleRight, IconSmile } from \'../../icons\';\\n\\nconst onClick = action(\'button-click\');\\n\\nexport default {\\n  component: Button,\\n  title: \'Components/Button\',\\n  decorators: [withKnobs],\\n  parameters: {\\n    docs: {\\n      page: () => (\\n        <>\\n          <Title>Props</Title>\\n          <Subtitle>Props, which are not mentioned below, are passed to the native element</Subtitle>\\n          <Props />\\n          <Stories title=\\"Examples\\" includePrimary />\\n        </>\\n      ),\\n    },\\n  },\\n};\\n\\nexport const Primary = () => <Button onClick={onClick}>Button</Button>;\\n\\nexport const Secondary = () => (\\n  <Button onClick={onClick} variant=\\"secondary\\">\\n    Button\\n  </Button>\\n);\\n\\nexport const Supplementary = () => (\\n  <Button onClick={onClick} variant=\\"supplementary\\">\\n    Button\\n  </Button>\\n);\\n\\nexport const Small = () => (\\n  <Button onClick={onClick} size=\\"small\\">\\n    Button\\n  </Button>\\n);\\n\\nexport const FullWidth = () => (\\n  <Button onClick={onClick} fullWidth>\\n    Button\\n  </Button>\\n);\\n\\nFullWidth.story = {\\n  name: \'Full width\',\\n};\\n\\nexport const Icons = () => (\\n  <>\\n    <Button onClick={onClick} iconLeft={<IconShare />}>\\n      Button\\n    </Button>\\n\\n    <br />\\n    <br />\\n\\n    <Button onClick={onClick} iconRight={<IconAngleRight />}>\\n      Button\\n    </Button>\\n\\n    <br />\\n    <br />\\n\\n    <Button onClick={onClick} iconLeft={<IconShare />} iconRight={<IconAngleRight />}>\\n      Button\\n    </Button>\\n  </>\\n);\\n\\nexport const Playground = () => {\\n  const label = text(\'Label\', \'Button\');\\n  const variant = radios(\\n    \'Variant\',\\n    {\\n      primary: \'primary\',\\n      secondary: \'secondary\',\\n      supplementary: \'supplementary\',\\n      success: \'success\',\\n      danger: \'danger\',\\n    },\\n    \'primary\',\\n  );\\n  const theme = radios(\\n    \'Theme\',\\n    {\\n      default: \'default\',\\n      coat: \'coat\',\\n      black: \'black\',\\n    },\\n    \'default\',\\n  );\\n  const size = radios(\'Size\', { default: \'default\', small: \'small\' }, \'default\');\\n  const disabled = boolean(\'Disabled\', false);\\n  const fullWidth = boolean(\'Full width\', false);\\n  const iconLeft = boolean(\'Icon left\', false);\\n  const iconRight = boolean(\'Icon right\', false);\\n\\n  return (\\n    <Button\\n      variant={variant}\\n      theme={theme}\\n      disabled={disabled}\\n      fullWidth={fullWidth}\\n      size={size}\\n      iconLeft={iconLeft ? <IconSmile /> : null}\\n      iconRight={iconRight ? <IconSmile /> : null}\\n    >\\n      {label}\\n    </Button>\\n  );\\n};\\n\\nPlayground.story = {\\n  parameters: {\\n    previewTabs: {\\n      \'storybook/docs/panel\': {\\n        hidden: true,\\n      },\\n    },\\n    docs: {\\n      disable: true,\\n    },\\n  },\\n};\\n","locationsMap":{"components-button--primary":{"startLoc":{"col":23,"line":29},"endLoc":{"col":70,"line":29},"startBody":{"col":23,"line":29},"endBody":{"col":70,"line":29}},"components-button--secondary":{"startLoc":{"col":25,"line":31},"endLoc":{"col":1,"line":35},"startBody":{"col":25,"line":31},"endBody":{"col":1,"line":35}},"components-button--supplementary":{"startLoc":{"col":29,"line":37},"endLoc":{"col":1,"line":41},"startBody":{"col":29,"line":37},"endBody":{"col":1,"line":41}},"components-button--small":{"startLoc":{"col":21,"line":43},"endLoc":{"col":1,"line":47},"startBody":{"col":21,"line":43},"endBody":{"col":1,"line":47}},"components-button--full-width":{"startLoc":{"col":25,"line":49},"endLoc":{"col":1,"line":53},"startBody":{"col":25,"line":49},"endBody":{"col":1,"line":53}},"components-button--icons":{"startLoc":{"col":21,"line":59},"endLoc":{"col":1,"line":79},"startBody":{"col":21,"line":59},"endBody":{"col":1,"line":79}},"components-button--playground":{"startLoc":{"col":26,"line":81},"endLoc":{"col":1,"line":122},"startBody":{"col":26,"line":81},"endBody":{"col":1,"line":122}}}},\n    docs: {\n      page: () => (\n        <>\n          <Title>Props</Title>\n          <Subtitle>Props, which are not mentioned below, are passed to the native element</Subtitle>\n          <Props />\n          <Stories title="Examples" includePrimary />\n        </>\n      ),\n    },\n  },\n};\n\nexport const Primary = () => <Button onClick={onClick}>Button</Button>;;\n\nexport const Secondary = () => (\n  <Button onClick={onClick} variant="secondary">\n    Button\n  </Button>\n);;\n\nexport const Supplementary = () => (\n  <Button onClick={onClick} variant="supplementary">\n    Button\n  </Button>\n);;\n\nexport const Small = () => (\n  <Button onClick={onClick} size="small">\n    Button\n  </Button>\n);;\n\nexport const FullWidth = () => (\n  <Button onClick={onClick} fullWidth>\n    Button\n  </Button>\n);;\n\nFullWidth.story = {\n  name: \'Full width\',\n};\n\nexport const Icons = () => (\n  <>\n    <Button onClick={onClick} iconLeft={<IconShare />}>\n      Button\n    </Button>\n\n    <br />\n    <br />\n\n    <Button onClick={onClick} iconRight={<IconAngleRight />}>\n      Button\n    </Button>\n\n    <br />\n    <br />\n\n    <Button onClick={onClick} iconLeft={<IconShare />} iconRight={<IconAngleRight />}>\n      Button\n    </Button>\n  </>\n);;\n\nexport const Playground = () => {\n  const label = text(\'Label\', \'Button\');\n  const variant = radios(\n    \'Variant\',\n    {\n      primary: \'primary\',\n      secondary: \'secondary\',\n      supplementary: \'supplementary\',\n      success: \'success\',\n      danger: \'danger\',\n    },\n    \'primary\',\n  );\n  const theme = radios(\n    \'Theme\',\n    {\n      default: \'default\',\n      coat: \'coat\',\n      black: \'black\',\n    },\n    \'default\',\n  );\n  const size = radios(\'Size\', { default: \'default\', small: \'small\' }, \'default\');\n  const disabled = boolean(\'Disabled\', false);\n  const fullWidth = boolean(\'Full width\', false);\n  const iconLeft = boolean(\'Icon left\', false);\n  const iconRight = boolean(\'Icon right\', false);\n\n  return (\n    <Button\n      variant={variant}\n      theme={theme}\n      disabled={disabled}\n      fullWidth={fullWidth}\n      size={size}\n      iconLeft={iconLeft ? <IconSmile /> : null}\n      iconRight={iconRight ? <IconSmile /> : null}\n    >\n      {label}\n    </Button>\n  );\n};\n\nPlayground.story = {\n  parameters: {\n    previewTabs: {\n      \'storybook/docs/panel\': {\n        hidden: true,\n      },\n    },\n    docs: {\n      disable: true,\n    },\n  },\n};\n',locationsMap:{"components-button--primary":{startLoc:{col:23,line:37},endLoc:{col:70,line:37},startBody:{col:23,line:37},endBody:{col:70,line:37}},"components-button--secondary":{startLoc:{col:25,line:39},endLoc:{col:1,line:43},startBody:{col:25,line:39},endBody:{col:1,line:43}},"components-button--supplementary":{startLoc:{col:29,line:45},endLoc:{col:1,line:49},startBody:{col:29,line:45},endBody:{col:1,line:49}},"components-button--small":{startLoc:{col:21,line:51},endLoc:{col:1,line:55},startBody:{col:21,line:51},endBody:{col:1,line:55}},"components-button--full-width":{startLoc:{col:25,line:57},endLoc:{col:1,line:61},startBody:{col:25,line:57},endBody:{col:1,line:61}},"components-button--icons":{startLoc:{col:21,line:67},endLoc:{col:1,line:87},startBody:{col:21,line:67},endBody:{col:1,line:87}},"components-button--playground":{startLoc:{col:26,line:89},endLoc:{col:1,line:130},startBody:{col:26,line:89},endBody:{col:1,line:130}}}}},Object(_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__.a)(_parameters,"storySource",{source:"import React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { boolean, radios, text, withKnobs } from '@storybook/addon-knobs';\nimport { Props, Stories, Subtitle, Title } from '@storybook/addon-docs/dist/blocks';\n\nimport Button from './Button';\nimport { IconShare, IconAngleRight, IconSmile } from '../../icons';\n\nconst onClick = action('button-click');\n\nexport default {\n  component: Button,\n  title: 'Components/Button',\n  decorators: [withKnobs],\n  parameters: {\n    docs: {\n      page: () => (\n        <>\n          <Title>Props</Title>\n          <Subtitle>Props, which are not mentioned below, are passed to the native element</Subtitle>\n          <Props />\n          <Stories title=\"Examples\" includePrimary />\n        </>\n      ),\n    },\n  },\n};\n\nexport const Primary = () => <Button onClick={onClick}>Button</Button>;\n\nexport const Secondary = () => (\n  <Button onClick={onClick} variant=\"secondary\">\n    Button\n  </Button>\n);\n\nexport const Supplementary = () => (\n  <Button onClick={onClick} variant=\"supplementary\">\n    Button\n  </Button>\n);\n\nexport const Small = () => (\n  <Button onClick={onClick} size=\"small\">\n    Button\n  </Button>\n);\n\nexport const FullWidth = () => (\n  <Button onClick={onClick} fullWidth>\n    Button\n  </Button>\n);\n\nFullWidth.story = {\n  name: 'Full width',\n};\n\nexport const Icons = () => (\n  <>\n    <Button onClick={onClick} iconLeft={<IconShare />}>\n      Button\n    </Button>\n\n    <br />\n    <br />\n\n    <Button onClick={onClick} iconRight={<IconAngleRight />}>\n      Button\n    </Button>\n\n    <br />\n    <br />\n\n    <Button onClick={onClick} iconLeft={<IconShare />} iconRight={<IconAngleRight />}>\n      Button\n    </Button>\n  </>\n);\n\nexport const Playground = () => {\n  const label = text('Label', 'Button');\n  const variant = radios(\n    'Variant',\n    {\n      primary: 'primary',\n      secondary: 'secondary',\n      supplementary: 'supplementary',\n      success: 'success',\n      danger: 'danger',\n    },\n    'primary',\n  );\n  const theme = radios(\n    'Theme',\n    {\n      default: 'default',\n      coat: 'coat',\n      black: 'black',\n    },\n    'default',\n  );\n  const size = radios('Size', { default: 'default', small: 'small' }, 'default');\n  const disabled = boolean('Disabled', false);\n  const fullWidth = boolean('Full width', false);\n  const iconLeft = boolean('Icon left', false);\n  const iconRight = boolean('Icon right', false);\n\n  return (\n    <Button\n      variant={variant}\n      theme={theme}\n      disabled={disabled}\n      fullWidth={fullWidth}\n      size={size}\n      iconLeft={iconLeft ? <IconSmile /> : null}\n      iconRight={iconRight ? <IconSmile /> : null}\n    >\n      {label}\n    </Button>\n  );\n};\n\nPlayground.story = {\n  parameters: {\n    previewTabs: {\n      'storybook/docs/panel': {\n        hidden: true,\n      },\n    },\n    docs: {\n      disable: true,\n    },\n  },\n};\n",locationsMap:{"components-button--primary":{startLoc:{col:23,line:29},endLoc:{col:70,line:29},startBody:{col:23,line:29},endBody:{col:70,line:29}},"components-button--secondary":{startLoc:{col:25,line:31},endLoc:{col:1,line:35},startBody:{col:25,line:31},endBody:{col:1,line:35}},"components-button--supplementary":{startLoc:{col:29,line:37},endLoc:{col:1,line:41},startBody:{col:29,line:37},endBody:{col:1,line:41}},"components-button--small":{startLoc:{col:21,line:43},endLoc:{col:1,line:47},startBody:{col:21,line:43},endBody:{col:1,line:47}},"components-button--full-width":{startLoc:{col:25,line:49},endLoc:{col:1,line:53},startBody:{col:25,line:49},endBody:{col:1,line:53}},"components-button--icons":{startLoc:{col:21,line:59},endLoc:{col:1,line:79},startBody:{col:21,line:59},endBody:{col:1,line:79}},"components-button--playground":{startLoc:{col:26,line:81},endLoc:{col:1,line:122},startBody:{col:26,line:81},endBody:{col:1,line:122}}}}),Object(_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__.a)(_parameters,"docs",{page:function page(){return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,_ref,_ref2,_ref3,_ref4)}}),_parameters)};var _ref5=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_5__.a,{onClick:onClick},"Button"),Primary=function(){return _ref5};Primary.displayName="Primary";var _ref6=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_5__.a,{onClick:onClick,variant:"secondary"},"Button"),Secondary=function(){return _ref6};Secondary.displayName="Secondary";var _ref7=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_5__.a,{onClick:onClick,variant:"supplementary"},"Button"),Supplementary=function(){return _ref7};Supplementary.displayName="Supplementary";var _ref8=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_5__.a,{onClick:onClick,size:"small"},"Button"),Small=function(){return _ref8};Small.displayName="Small";var _ref9=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_5__.a,{onClick:onClick,fullWidth:!0},"Button"),FullWidth=function(){return _ref9};FullWidth.displayName="FullWidth",FullWidth.story={name:"Full width"};var _ref10=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_5__.a,{onClick:onClick,iconLeft:react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_icons__WEBPACK_IMPORTED_MODULE_6__.f,null)},"Button"),_ref11=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("br",null),_ref12=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("br",null),_ref13=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_5__.a,{onClick:onClick,iconRight:react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_icons__WEBPACK_IMPORTED_MODULE_6__.a,null)},"Button"),_ref14=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("br",null),_ref15=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("br",null),_ref16=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_5__.a,{onClick:onClick,iconLeft:react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_icons__WEBPACK_IMPORTED_MODULE_6__.f,null),iconRight:react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_icons__WEBPACK_IMPORTED_MODULE_6__.a,null)},"Button"),Icons=function(){return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,_ref10,_ref11,_ref12,_ref13,_ref14,_ref15,_ref16)},_ref17=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_icons__WEBPACK_IMPORTED_MODULE_6__.g,null),_ref18=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_icons__WEBPACK_IMPORTED_MODULE_6__.g,null),Playground=function(){var label=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.text)("Label","Button"),variant=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.radios)("Variant",{primary:"primary",secondary:"secondary",supplementary:"supplementary",success:"success",danger:"danger"},"primary"),theme=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.radios)("Theme",{default:"default",coat:"coat",black:"black"},"default"),size=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.radios)("Size",{default:"default",small:"small"},"default"),disabled=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.boolean)("Disabled",!1),fullWidth=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.boolean)("Full width",!1),iconLeft=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.boolean)("Icon left",!1),iconRight=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.boolean)("Icon right",!1);return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_5__.a,{variant:variant,theme:theme,disabled:disabled,fullWidth:fullWidth,size:size,iconLeft:iconLeft?_ref17:null,iconRight:iconRight?_ref18:null},label)};Playground.displayName="Playground",Playground.story={parameters:{previewTabs:{"storybook/docs/panel":{hidden:!0}},docs:{disable:!0}}},Primary.__docgenInfo={description:"",methods:[],displayName:"Primary"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/button/Button.stories.tsx"]={name:"Primary",docgenInfo:Primary.__docgenInfo,path:"src/components/button/Button.stories.tsx"}),Secondary.__docgenInfo={description:"",methods:[],displayName:"Secondary"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/button/Button.stories.tsx"]={name:"Secondary",docgenInfo:Secondary.__docgenInfo,path:"src/components/button/Button.stories.tsx"}),Supplementary.__docgenInfo={description:"",methods:[],displayName:"Supplementary"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/button/Button.stories.tsx"]={name:"Supplementary",docgenInfo:Supplementary.__docgenInfo,path:"src/components/button/Button.stories.tsx"}),Small.__docgenInfo={description:"",methods:[],displayName:"Small"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/button/Button.stories.tsx"]={name:"Small",docgenInfo:Small.__docgenInfo,path:"src/components/button/Button.stories.tsx"}),FullWidth.__docgenInfo={description:"",methods:[],displayName:"FullWidth"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/button/Button.stories.tsx"]={name:"FullWidth",docgenInfo:FullWidth.__docgenInfo,path:"src/components/button/Button.stories.tsx"}),Icons.__docgenInfo={description:"",methods:[],displayName:"Icons"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/button/Button.stories.tsx"]={name:"Icons",docgenInfo:Icons.__docgenInfo,path:"src/components/button/Button.stories.tsx"}),Playground.__docgenInfo={description:"",methods:[],displayName:"Playground"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/button/Button.stories.tsx"]={name:"Playground",docgenInfo:Playground.__docgenInfo,path:"src/components/button/Button.stories.tsx"})},1536:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"Hover",(function(){return Hover})),__webpack_require__.d(__webpack_exports__,"HoverFullWidth",(function(){return HoverFullWidth})),__webpack_require__.d(__webpack_exports__,"Split",(function(){return Split})),__webpack_require__.d(__webpack_exports__,"SplitFullWidth",(function(){return SplitFullWidth})),__webpack_require__.d(__webpack_exports__,"Playground",(function(){return Playground}));var _parameters,_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(17),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__),_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(1),_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(14),_ImageWithCard__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(74),_assets_img_placeholder_1920x1080_jpg__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(83),_assets_img_placeholder_1920x1080_jpg__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_assets_img_placeholder_1920x1080_jpg__WEBPACK_IMPORTED_MODULE_5__),contentText="Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint obcaecat cupiditat non proident.",content=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("h2",null,"Lorem ipsum"),react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("p",null,contentText)),_ref=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_3__.Title,null,"Props"),_ref2=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_3__.Props,null);__webpack_exports__.default={component:_ImageWithCard__WEBPACK_IMPORTED_MODULE_4__.a,title:"Components/ImageWithCard",decorators:[_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.withKnobs],parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import React from \'react\';\\nimport { boolean, radios, text, withKnobs } from \'@storybook/addon-knobs\';\\nimport { Props, Title } from \'@storybook/addon-docs/dist/blocks\';\\n\\nimport ImageWithCard from \'./ImageWithCard\';\\nimport imageFile from \'../../assets/img/placeholder_1920x1080.jpg\';\\n\\nconst contentTitle = \'Lorem ipsum\';\\nconst contentText =\\n  \'Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint obcaecat cupiditat non proident.\';\\n\\nconst content = (\\n  <>\\n    <h2>{contentTitle}</h2>\\n    <p>{contentText}</p>\\n  </>\\n);\\n\\nexport default {\\n  component: ImageWithCard,\\n  title: \'Components/ImageWithCard\',\\n  decorators: [withKnobs],\\n  parameters: {\\n    layout: \'fullscreen\',\\n    docs: {\\n      page: () => (\\n        <>\\n          <Title>Props</Title>\\n          <Props />\\n        </>\\n      ),\\n    },\\n  },\\n};\\n\\nexport const Default = () => <ImageWithCard src={imageFile}>{content}</ImageWithCard>;\\n\\nexport const Hover = () => (\\n  <ImageWithCard cardLayout=\\"hover\\" src={imageFile}>\\n    {content}\\n  </ImageWithCard>\\n);\\n\\nexport const HoverFullWidth = () => (\\n  <ImageWithCard cardLayout=\\"hover\\" fullWidth src={imageFile}>\\n    {content}\\n  </ImageWithCard>\\n);\\n\\nHoverFullWidth.story = {\\n  name: \'Hover full width\',\\n};\\n\\nexport const Split = () => (\\n  <ImageWithCard cardLayout=\\"split\\" src={imageFile}>\\n    {content}\\n  </ImageWithCard>\\n);\\n\\nexport const SplitFullWidth = () => (\\n  <ImageWithCard cardLayout=\\"split\\" fullWidth src={imageFile}>\\n    {content}\\n  </ImageWithCard>\\n);\\n\\nSplitFullWidth.story = {\\n  name: \'Split full width\',\\n};\\n\\nexport const Playground = () => {\\n  const cardTitle = text(\'Title\', contentTitle);\\n  const cardText = text(\'Text\', contentText);\\n  const color = radios(\\n    \'Color\',\\n    { plain: \'plain\', primary: \'primary\', secondary: \'secondary\', tertiary: \'tertiary\' },\\n    \'plain\',\\n  );\\n  const fullWidth = boolean(\'Full width\', false);\\n  const cardAlignment = radios(\'Card alignment\', { left: \'left\', right: \'right\' }, \'left\');\\n  const cardLayout = radios(\'Card layout\', { hover: \'hover\', split: \'split\' }, null);\\n\\n  return (\\n    <ImageWithCard\\n      color={color}\\n      cardAlignment={cardAlignment}\\n      fullWidth={fullWidth}\\n      cardLayout={cardLayout}\\n      src={imageFile}\\n    >\\n      <h2>{cardTitle}</h2>\\n      <p>{cardText}</p>\\n    </ImageWithCard>\\n  );\\n};\\n\\nPlayground.story = {\\n  parameters: {\\n    previewTabs: {\\n      \'storybook/docs/panel\': {\\n        hidden: true,\\n      },\\n    },\\n    docs: {\\n      disable: true,\\n    },\\n  },\\n};\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"components-imagewithcard--default":{"startLoc":{"col":23,"line":36},"endLoc":{"col":85,"line":36},"startBody":{"col":23,"line":36},"endBody":{"col":85,"line":36}},"components-imagewithcard--hover":{"startLoc":{"col":21,"line":38},"endLoc":{"col":1,"line":42},"startBody":{"col":21,"line":38},"endBody":{"col":1,"line":42}},"components-imagewithcard--hover-full-width":{"startLoc":{"col":30,"line":44},"endLoc":{"col":1,"line":48},"startBody":{"col":30,"line":44},"endBody":{"col":1,"line":48}},"components-imagewithcard--split":{"startLoc":{"col":21,"line":54},"endLoc":{"col":1,"line":58},"startBody":{"col":21,"line":54},"endBody":{"col":1,"line":58}},"components-imagewithcard--split-full-width":{"startLoc":{"col":30,"line":60},"endLoc":{"col":1,"line":64},"startBody":{"col":30,"line":60},"endBody":{"col":1,"line":64}},"components-imagewithcard--playground":{"startLoc":{"col":26,"line":70},"endLoc":{"col":1,"line":94},"startBody":{"col":26,"line":70},"endBody":{"col":1,"line":94}}};\n    \nimport React from \'react\';\nimport { boolean, radios, text, withKnobs } from \'@storybook/addon-knobs\';\nimport { Props, Title } from \'@storybook/addon-docs/dist/blocks\';\n\nimport ImageWithCard from \'./ImageWithCard\';\nimport imageFile from \'../../assets/img/placeholder_1920x1080.jpg\';\n\nconst contentTitle = \'Lorem ipsum\';\nconst contentText =\n  \'Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint obcaecat cupiditat non proident.\';\n\nconst content = (\n  <>\n    <h2>{contentTitle}</h2>\n    <p>{contentText}</p>\n  </>\n);\n\nexport default {\n  component: ImageWithCard,\n  title: \'Components/ImageWithCard\',\n  decorators: [withKnobs],\n  parameters: {"storySource":{"source":"import React from \'react\';\\nimport { boolean, radios, text, withKnobs } from \'@storybook/addon-knobs\';\\nimport { Props, Title } from \'@storybook/addon-docs/dist/blocks\';\\n\\nimport ImageWithCard from \'./ImageWithCard\';\\nimport imageFile from \'../../assets/img/placeholder_1920x1080.jpg\';\\n\\nconst contentTitle = \'Lorem ipsum\';\\nconst contentText =\\n  \'Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint obcaecat cupiditat non proident.\';\\n\\nconst content = (\\n  <>\\n    <h2>{contentTitle}</h2>\\n    <p>{contentText}</p>\\n  </>\\n);\\n\\nexport default {\\n  component: ImageWithCard,\\n  title: \'Components/ImageWithCard\',\\n  decorators: [withKnobs],\\n  parameters: {\\n    layout: \'fullscreen\',\\n    docs: {\\n      page: () => (\\n        <>\\n          <Title>Props</Title>\\n          <Props />\\n        </>\\n      ),\\n    },\\n  },\\n};\\n\\nexport const Default = () => <ImageWithCard src={imageFile}>{content}</ImageWithCard>;\\n\\nexport const Hover = () => (\\n  <ImageWithCard cardLayout=\\"hover\\" src={imageFile}>\\n    {content}\\n  </ImageWithCard>\\n);\\n\\nexport const HoverFullWidth = () => (\\n  <ImageWithCard cardLayout=\\"hover\\" fullWidth src={imageFile}>\\n    {content}\\n  </ImageWithCard>\\n);\\n\\nHoverFullWidth.story = {\\n  name: \'Hover full width\',\\n};\\n\\nexport const Split = () => (\\n  <ImageWithCard cardLayout=\\"split\\" src={imageFile}>\\n    {content}\\n  </ImageWithCard>\\n);\\n\\nexport const SplitFullWidth = () => (\\n  <ImageWithCard cardLayout=\\"split\\" fullWidth src={imageFile}>\\n    {content}\\n  </ImageWithCard>\\n);\\n\\nSplitFullWidth.story = {\\n  name: \'Split full width\',\\n};\\n\\nexport const Playground = () => {\\n  const cardTitle = text(\'Title\', contentTitle);\\n  const cardText = text(\'Text\', contentText);\\n  const color = radios(\\n    \'Color\',\\n    { plain: \'plain\', primary: \'primary\', secondary: \'secondary\', tertiary: \'tertiary\' },\\n    \'plain\',\\n  );\\n  const fullWidth = boolean(\'Full width\', false);\\n  const cardAlignment = radios(\'Card alignment\', { left: \'left\', right: \'right\' }, \'left\');\\n  const cardLayout = radios(\'Card layout\', { hover: \'hover\', split: \'split\' }, null);\\n\\n  return (\\n    <ImageWithCard\\n      color={color}\\n      cardAlignment={cardAlignment}\\n      fullWidth={fullWidth}\\n      cardLayout={cardLayout}\\n      src={imageFile}\\n    >\\n      <h2>{cardTitle}</h2>\\n      <p>{cardText}</p>\\n    </ImageWithCard>\\n  );\\n};\\n\\nPlayground.story = {\\n  parameters: {\\n    previewTabs: {\\n      \'storybook/docs/panel\': {\\n        hidden: true,\\n      },\\n    },\\n    docs: {\\n      disable: true,\\n    },\\n  },\\n};\\n","locationsMap":{"components-imagewithcard--default":{"startLoc":{"col":23,"line":36},"endLoc":{"col":85,"line":36},"startBody":{"col":23,"line":36},"endBody":{"col":85,"line":36}},"components-imagewithcard--hover":{"startLoc":{"col":21,"line":38},"endLoc":{"col":1,"line":42},"startBody":{"col":21,"line":38},"endBody":{"col":1,"line":42}},"components-imagewithcard--hover-full-width":{"startLoc":{"col":30,"line":44},"endLoc":{"col":1,"line":48},"startBody":{"col":30,"line":44},"endBody":{"col":1,"line":48}},"components-imagewithcard--split":{"startLoc":{"col":21,"line":54},"endLoc":{"col":1,"line":58},"startBody":{"col":21,"line":54},"endBody":{"col":1,"line":58}},"components-imagewithcard--split-full-width":{"startLoc":{"col":30,"line":60},"endLoc":{"col":1,"line":64},"startBody":{"col":30,"line":60},"endBody":{"col":1,"line":64}},"components-imagewithcard--playground":{"startLoc":{"col":26,"line":70},"endLoc":{"col":1,"line":94},"startBody":{"col":26,"line":70},"endBody":{"col":1,"line":94}}}},\n    layout: \'fullscreen\',\n    docs: {\n      page: () => (\n        <>\n          <Title>Props</Title>\n          <Props />\n        </>\n      ),\n    },\n  },\n};\n\nexport const Default = () => <ImageWithCard src={imageFile}>{content}</ImageWithCard>;;\n\nexport const Hover = () => (\n  <ImageWithCard cardLayout="hover" src={imageFile}>\n    {content}\n  </ImageWithCard>\n);;\n\nexport const HoverFullWidth = () => (\n  <ImageWithCard cardLayout="hover" fullWidth src={imageFile}>\n    {content}\n  </ImageWithCard>\n);;\n\nHoverFullWidth.story = {\n  name: \'Hover full width\',\n};\n\nexport const Split = () => (\n  <ImageWithCard cardLayout="split" src={imageFile}>\n    {content}\n  </ImageWithCard>\n);;\n\nexport const SplitFullWidth = () => (\n  <ImageWithCard cardLayout="split" fullWidth src={imageFile}>\n    {content}\n  </ImageWithCard>\n);;\n\nSplitFullWidth.story = {\n  name: \'Split full width\',\n};\n\nexport const Playground = () => {\n  const cardTitle = text(\'Title\', contentTitle);\n  const cardText = text(\'Text\', contentText);\n  const color = radios(\n    \'Color\',\n    { plain: \'plain\', primary: \'primary\', secondary: \'secondary\', tertiary: \'tertiary\' },\n    \'plain\',\n  );\n  const fullWidth = boolean(\'Full width\', false);\n  const cardAlignment = radios(\'Card alignment\', { left: \'left\', right: \'right\' }, \'left\');\n  const cardLayout = radios(\'Card layout\', { hover: \'hover\', split: \'split\' }, null);\n\n  return (\n    <ImageWithCard\n      color={color}\n      cardAlignment={cardAlignment}\n      fullWidth={fullWidth}\n      cardLayout={cardLayout}\n      src={imageFile}\n    >\n      <h2>{cardTitle}</h2>\n      <p>{cardText}</p>\n    </ImageWithCard>\n  );\n};\n\nPlayground.story = {\n  parameters: {\n    previewTabs: {\n      \'storybook/docs/panel\': {\n        hidden: true,\n      },\n    },\n    docs: {\n      disable: true,\n    },\n  },\n};\n',locationsMap:{"components-imagewithcard--default":{startLoc:{col:23,line:44},endLoc:{col:85,line:44},startBody:{col:23,line:44},endBody:{col:85,line:44}},"components-imagewithcard--hover":{startLoc:{col:21,line:46},endLoc:{col:1,line:50},startBody:{col:21,line:46},endBody:{col:1,line:50}},"components-imagewithcard--hover-full-width":{startLoc:{col:30,line:52},endLoc:{col:1,line:56},startBody:{col:30,line:52},endBody:{col:1,line:56}},"components-imagewithcard--split":{startLoc:{col:21,line:62},endLoc:{col:1,line:66},startBody:{col:21,line:62},endBody:{col:1,line:66}},"components-imagewithcard--split-full-width":{startLoc:{col:30,line:68},endLoc:{col:1,line:72},startBody:{col:30,line:68},endBody:{col:1,line:72}},"components-imagewithcard--playground":{startLoc:{col:26,line:78},endLoc:{col:1,line:102},startBody:{col:26,line:78},endBody:{col:1,line:102}}}}},Object(_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__.a)(_parameters,"storySource",{source:"import React from 'react';\nimport { boolean, radios, text, withKnobs } from '@storybook/addon-knobs';\nimport { Props, Title } from '@storybook/addon-docs/dist/blocks';\n\nimport ImageWithCard from './ImageWithCard';\nimport imageFile from '../../assets/img/placeholder_1920x1080.jpg';\n\nconst contentTitle = 'Lorem ipsum';\nconst contentText =\n  'Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint obcaecat cupiditat non proident.';\n\nconst content = (\n  <>\n    <h2>{contentTitle}</h2>\n    <p>{contentText}</p>\n  </>\n);\n\nexport default {\n  component: ImageWithCard,\n  title: 'Components/ImageWithCard',\n  decorators: [withKnobs],\n  parameters: {\n    layout: 'fullscreen',\n    docs: {\n      page: () => (\n        <>\n          <Title>Props</Title>\n          <Props />\n        </>\n      ),\n    },\n  },\n};\n\nexport const Default = () => <ImageWithCard src={imageFile}>{content}</ImageWithCard>;\n\nexport const Hover = () => (\n  <ImageWithCard cardLayout=\"hover\" src={imageFile}>\n    {content}\n  </ImageWithCard>\n);\n\nexport const HoverFullWidth = () => (\n  <ImageWithCard cardLayout=\"hover\" fullWidth src={imageFile}>\n    {content}\n  </ImageWithCard>\n);\n\nHoverFullWidth.story = {\n  name: 'Hover full width',\n};\n\nexport const Split = () => (\n  <ImageWithCard cardLayout=\"split\" src={imageFile}>\n    {content}\n  </ImageWithCard>\n);\n\nexport const SplitFullWidth = () => (\n  <ImageWithCard cardLayout=\"split\" fullWidth src={imageFile}>\n    {content}\n  </ImageWithCard>\n);\n\nSplitFullWidth.story = {\n  name: 'Split full width',\n};\n\nexport const Playground = () => {\n  const cardTitle = text('Title', contentTitle);\n  const cardText = text('Text', contentText);\n  const color = radios(\n    'Color',\n    { plain: 'plain', primary: 'primary', secondary: 'secondary', tertiary: 'tertiary' },\n    'plain',\n  );\n  const fullWidth = boolean('Full width', false);\n  const cardAlignment = radios('Card alignment', { left: 'left', right: 'right' }, 'left');\n  const cardLayout = radios('Card layout', { hover: 'hover', split: 'split' }, null);\n\n  return (\n    <ImageWithCard\n      color={color}\n      cardAlignment={cardAlignment}\n      fullWidth={fullWidth}\n      cardLayout={cardLayout}\n      src={imageFile}\n    >\n      <h2>{cardTitle}</h2>\n      <p>{cardText}</p>\n    </ImageWithCard>\n  );\n};\n\nPlayground.story = {\n  parameters: {\n    previewTabs: {\n      'storybook/docs/panel': {\n        hidden: true,\n      },\n    },\n    docs: {\n      disable: true,\n    },\n  },\n};\n",locationsMap:{"components-imagewithcard--default":{startLoc:{col:23,line:36},endLoc:{col:85,line:36},startBody:{col:23,line:36},endBody:{col:85,line:36}},"components-imagewithcard--hover":{startLoc:{col:21,line:38},endLoc:{col:1,line:42},startBody:{col:21,line:38},endBody:{col:1,line:42}},"components-imagewithcard--hover-full-width":{startLoc:{col:30,line:44},endLoc:{col:1,line:48},startBody:{col:30,line:44},endBody:{col:1,line:48}},"components-imagewithcard--split":{startLoc:{col:21,line:54},endLoc:{col:1,line:58},startBody:{col:21,line:54},endBody:{col:1,line:58}},"components-imagewithcard--split-full-width":{startLoc:{col:30,line:60},endLoc:{col:1,line:64},startBody:{col:30,line:60},endBody:{col:1,line:64}},"components-imagewithcard--playground":{startLoc:{col:26,line:70},endLoc:{col:1,line:94},startBody:{col:26,line:70},endBody:{col:1,line:94}}}}),Object(_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__.a)(_parameters,"layout","fullscreen"),Object(_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__.a)(_parameters,"docs",{page:function page(){return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,_ref,_ref2)}}),_parameters)};var _ref3=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_ImageWithCard__WEBPACK_IMPORTED_MODULE_4__.a,{src:_assets_img_placeholder_1920x1080_jpg__WEBPACK_IMPORTED_MODULE_5___default.a},content),Default=function(){return _ref3};Default.displayName="Default";var _ref4=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_ImageWithCard__WEBPACK_IMPORTED_MODULE_4__.a,{cardLayout:"hover",src:_assets_img_placeholder_1920x1080_jpg__WEBPACK_IMPORTED_MODULE_5___default.a},content),Hover=function(){return _ref4};Hover.displayName="Hover";var _ref5=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_ImageWithCard__WEBPACK_IMPORTED_MODULE_4__.a,{cardLayout:"hover",fullWidth:!0,src:_assets_img_placeholder_1920x1080_jpg__WEBPACK_IMPORTED_MODULE_5___default.a},content),HoverFullWidth=function(){return _ref5};HoverFullWidth.displayName="HoverFullWidth",HoverFullWidth.story={name:"Hover full width"};var _ref6=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_ImageWithCard__WEBPACK_IMPORTED_MODULE_4__.a,{cardLayout:"split",src:_assets_img_placeholder_1920x1080_jpg__WEBPACK_IMPORTED_MODULE_5___default.a},content),Split=function(){return _ref6};Split.displayName="Split";var _ref7=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_ImageWithCard__WEBPACK_IMPORTED_MODULE_4__.a,{cardLayout:"split",fullWidth:!0,src:_assets_img_placeholder_1920x1080_jpg__WEBPACK_IMPORTED_MODULE_5___default.a},content),SplitFullWidth=function(){return _ref7};SplitFullWidth.displayName="SplitFullWidth",SplitFullWidth.story={name:"Split full width"};var Playground=function(){var cardTitle=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.text)("Title","Lorem ipsum"),cardText=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.text)("Text",contentText),color=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.radios)("Color",{plain:"plain",primary:"primary",secondary:"secondary",tertiary:"tertiary"},"plain"),fullWidth=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.boolean)("Full width",!1),cardAlignment=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.radios)("Card alignment",{left:"left",right:"right"},"left"),cardLayout=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.radios)("Card layout",{hover:"hover",split:"split"},null);return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_ImageWithCard__WEBPACK_IMPORTED_MODULE_4__.a,{color:color,cardAlignment:cardAlignment,fullWidth:fullWidth,cardLayout:cardLayout,src:_assets_img_placeholder_1920x1080_jpg__WEBPACK_IMPORTED_MODULE_5___default.a},react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("h2",null,cardTitle),react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("p",null,cardText))};Playground.displayName="Playground",Playground.story={parameters:{previewTabs:{"storybook/docs/panel":{hidden:!0}},docs:{disable:!0}}},Default.__docgenInfo={description:"",methods:[],displayName:"Default"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/imagewithcard/ImageWithCard.stories.tsx"]={name:"Default",docgenInfo:Default.__docgenInfo,path:"src/components/imagewithcard/ImageWithCard.stories.tsx"}),Hover.__docgenInfo={description:"",methods:[],displayName:"Hover"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/imagewithcard/ImageWithCard.stories.tsx"]={name:"Hover",docgenInfo:Hover.__docgenInfo,path:"src/components/imagewithcard/ImageWithCard.stories.tsx"}),HoverFullWidth.__docgenInfo={description:"",methods:[],displayName:"HoverFullWidth"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/imagewithcard/ImageWithCard.stories.tsx"]={name:"HoverFullWidth",docgenInfo:HoverFullWidth.__docgenInfo,path:"src/components/imagewithcard/ImageWithCard.stories.tsx"}),Split.__docgenInfo={description:"",methods:[],displayName:"Split"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/imagewithcard/ImageWithCard.stories.tsx"]={name:"Split",docgenInfo:Split.__docgenInfo,path:"src/components/imagewithcard/ImageWithCard.stories.tsx"}),SplitFullWidth.__docgenInfo={description:"",methods:[],displayName:"SplitFullWidth"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/imagewithcard/ImageWithCard.stories.tsx"]={name:"SplitFullWidth",docgenInfo:SplitFullWidth.__docgenInfo,path:"src/components/imagewithcard/ImageWithCard.stories.tsx"}),Playground.__docgenInfo={description:"",methods:[],displayName:"Playground"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/imagewithcard/ImageWithCard.stories.tsx"]={name:"Playground",docgenInfo:Playground.__docgenInfo,path:"src/components/imagewithcard/ImageWithCard.stories.tsx"})},1537:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return Basic})),__webpack_require__.d(__webpack_exports__,"Beat",(function(){return Beat})),__webpack_require__.d(__webpack_exports__,"Pulse",(function(){return Pulse})),__webpack_require__.d(__webpack_exports__,"Wave",(function(){return Wave})),__webpack_require__.d(__webpack_exports__,"Storm",(function(){return Storm})),__webpack_require__.d(__webpack_exports__,"Flipped",(function(){return Flipped})),__webpack_require__.d(__webpack_exports__,"Playground",(function(){return Playground}));var _parameters,_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(17),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__),_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(1),_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(14),_Koros__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(75),_ref=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_3__.Title,null,"Props"),_ref2=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_3__.Props,null),_ref3=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_3__.Stories,{title:"Examples",includePrimary:!0});__webpack_exports__.default={component:_Koros__WEBPACK_IMPORTED_MODULE_4__.a,title:"Components/Koros",decorators:[_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.withKnobs],parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import React from \'react\';\\nimport { boolean, radios, withKnobs } from \'@storybook/addon-knobs\';\\nimport { Props, Stories, Title } from \'@storybook/addon-docs/dist/blocks\';\\n\\nimport Koros from \'./Koros\';\\n\\nexport default {\\n  component: Koros,\\n  title: \'Components/Koros\',\\n  decorators: [withKnobs],\\n  parameters: {\\n    docs: {\\n      page: () => (\\n        <>\\n          <Title>Props</Title>\\n          <Props />\\n          <Stories title=\\"Examples\\" includePrimary />\\n        </>\\n      ),\\n    },\\n  },\\n};\\n\\nexport const Basic = () => <Koros />;\\n\\nexport const Beat = () => <Koros type=\\"beat\\" />;\\n\\nexport const Pulse = () => <Koros type=\\"pulse\\" />;\\n\\nexport const Wave = () => <Koros type=\\"wave\\" />;\\n\\nexport const Storm = () => <Koros type=\\"storm\\" />;\\n\\nexport const Flipped = () => <Koros flipHorizontal />;\\n\\nexport const Playground = () => {\\n  const type = radios(\'Type\', { basic: \'basic\', beat: \'beat\', pulse: \'pulse\', wave: \'wave\', storm: \'storm\' }, \'basic\');\\n  const flipped = boolean(\'Flip horizontal\', false);\\n\\n  return <Koros type={type} flipHorizontal={flipped} />;\\n};\\n\\nPlayground.story = {\\n  parameters: {\\n    previewTabs: {\\n      \'storybook/docs/panel\': {\\n        hidden: true,\\n      },\\n    },\\n    docs: {\\n      disable: true,\\n    },\\n  },\\n};\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"components-koros--basic":{"startLoc":{"col":21,"line":24},"endLoc":{"col":36,"line":24},"startBody":{"col":21,"line":24},"endBody":{"col":36,"line":24}},"components-koros--beat":{"startLoc":{"col":20,"line":26},"endLoc":{"col":47,"line":26},"startBody":{"col":20,"line":26},"endBody":{"col":47,"line":26}},"components-koros--pulse":{"startLoc":{"col":21,"line":28},"endLoc":{"col":49,"line":28},"startBody":{"col":21,"line":28},"endBody":{"col":49,"line":28}},"components-koros--wave":{"startLoc":{"col":20,"line":30},"endLoc":{"col":47,"line":30},"startBody":{"col":20,"line":30},"endBody":{"col":47,"line":30}},"components-koros--storm":{"startLoc":{"col":21,"line":32},"endLoc":{"col":49,"line":32},"startBody":{"col":21,"line":32},"endBody":{"col":49,"line":32}},"components-koros--flipped":{"startLoc":{"col":23,"line":34},"endLoc":{"col":53,"line":34},"startBody":{"col":23,"line":34},"endBody":{"col":53,"line":34}},"components-koros--playground":{"startLoc":{"col":26,"line":36},"endLoc":{"col":1,"line":41},"startBody":{"col":26,"line":36},"endBody":{"col":1,"line":41}}};\n    \nimport React from \'react\';\nimport { boolean, radios, withKnobs } from \'@storybook/addon-knobs\';\nimport { Props, Stories, Title } from \'@storybook/addon-docs/dist/blocks\';\n\nimport Koros from \'./Koros\';\n\nexport default {\n  component: Koros,\n  title: \'Components/Koros\',\n  decorators: [withKnobs],\n  parameters: {"storySource":{"source":"import React from \'react\';\\nimport { boolean, radios, withKnobs } from \'@storybook/addon-knobs\';\\nimport { Props, Stories, Title } from \'@storybook/addon-docs/dist/blocks\';\\n\\nimport Koros from \'./Koros\';\\n\\nexport default {\\n  component: Koros,\\n  title: \'Components/Koros\',\\n  decorators: [withKnobs],\\n  parameters: {\\n    docs: {\\n      page: () => (\\n        <>\\n          <Title>Props</Title>\\n          <Props />\\n          <Stories title=\\"Examples\\" includePrimary />\\n        </>\\n      ),\\n    },\\n  },\\n};\\n\\nexport const Basic = () => <Koros />;\\n\\nexport const Beat = () => <Koros type=\\"beat\\" />;\\n\\nexport const Pulse = () => <Koros type=\\"pulse\\" />;\\n\\nexport const Wave = () => <Koros type=\\"wave\\" />;\\n\\nexport const Storm = () => <Koros type=\\"storm\\" />;\\n\\nexport const Flipped = () => <Koros flipHorizontal />;\\n\\nexport const Playground = () => {\\n  const type = radios(\'Type\', { basic: \'basic\', beat: \'beat\', pulse: \'pulse\', wave: \'wave\', storm: \'storm\' }, \'basic\');\\n  const flipped = boolean(\'Flip horizontal\', false);\\n\\n  return <Koros type={type} flipHorizontal={flipped} />;\\n};\\n\\nPlayground.story = {\\n  parameters: {\\n    previewTabs: {\\n      \'storybook/docs/panel\': {\\n        hidden: true,\\n      },\\n    },\\n    docs: {\\n      disable: true,\\n    },\\n  },\\n};\\n","locationsMap":{"components-koros--basic":{"startLoc":{"col":21,"line":24},"endLoc":{"col":36,"line":24},"startBody":{"col":21,"line":24},"endBody":{"col":36,"line":24}},"components-koros--beat":{"startLoc":{"col":20,"line":26},"endLoc":{"col":47,"line":26},"startBody":{"col":20,"line":26},"endBody":{"col":47,"line":26}},"components-koros--pulse":{"startLoc":{"col":21,"line":28},"endLoc":{"col":49,"line":28},"startBody":{"col":21,"line":28},"endBody":{"col":49,"line":28}},"components-koros--wave":{"startLoc":{"col":20,"line":30},"endLoc":{"col":47,"line":30},"startBody":{"col":20,"line":30},"endBody":{"col":47,"line":30}},"components-koros--storm":{"startLoc":{"col":21,"line":32},"endLoc":{"col":49,"line":32},"startBody":{"col":21,"line":32},"endBody":{"col":49,"line":32}},"components-koros--flipped":{"startLoc":{"col":23,"line":34},"endLoc":{"col":53,"line":34},"startBody":{"col":23,"line":34},"endBody":{"col":53,"line":34}},"components-koros--playground":{"startLoc":{"col":26,"line":36},"endLoc":{"col":1,"line":41},"startBody":{"col":26,"line":36},"endBody":{"col":1,"line":41}}}},\n    docs: {\n      page: () => (\n        <>\n          <Title>Props</Title>\n          <Props />\n          <Stories title="Examples" includePrimary />\n        </>\n      ),\n    },\n  },\n};\n\nexport const Basic = () => <Koros />;;\n\nexport const Beat = () => <Koros type="beat" />;;\n\nexport const Pulse = () => <Koros type="pulse" />;;\n\nexport const Wave = () => <Koros type="wave" />;;\n\nexport const Storm = () => <Koros type="storm" />;;\n\nexport const Flipped = () => <Koros flipHorizontal />;;\n\nexport const Playground = () => {\n  const type = radios(\'Type\', { basic: \'basic\', beat: \'beat\', pulse: \'pulse\', wave: \'wave\', storm: \'storm\' }, \'basic\');\n  const flipped = boolean(\'Flip horizontal\', false);\n\n  return <Koros type={type} flipHorizontal={flipped} />;\n};\n\nPlayground.story = {\n  parameters: {\n    previewTabs: {\n      \'storybook/docs/panel\': {\n        hidden: true,\n      },\n    },\n    docs: {\n      disable: true,\n    },\n  },\n};\n',locationsMap:{"components-koros--basic":{startLoc:{col:21,line:32},endLoc:{col:36,line:32},startBody:{col:21,line:32},endBody:{col:36,line:32}},"components-koros--beat":{startLoc:{col:20,line:34},endLoc:{col:47,line:34},startBody:{col:20,line:34},endBody:{col:47,line:34}},"components-koros--pulse":{startLoc:{col:21,line:36},endLoc:{col:49,line:36},startBody:{col:21,line:36},endBody:{col:49,line:36}},"components-koros--wave":{startLoc:{col:20,line:38},endLoc:{col:47,line:38},startBody:{col:20,line:38},endBody:{col:47,line:38}},"components-koros--storm":{startLoc:{col:21,line:40},endLoc:{col:49,line:40},startBody:{col:21,line:40},endBody:{col:49,line:40}},"components-koros--flipped":{startLoc:{col:23,line:42},endLoc:{col:53,line:42},startBody:{col:23,line:42},endBody:{col:53,line:42}},"components-koros--playground":{startLoc:{col:26,line:44},endLoc:{col:1,line:49},startBody:{col:26,line:44},endBody:{col:1,line:49}}}}},Object(_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__.a)(_parameters,"storySource",{source:"import React from 'react';\nimport { boolean, radios, withKnobs } from '@storybook/addon-knobs';\nimport { Props, Stories, Title } from '@storybook/addon-docs/dist/blocks';\n\nimport Koros from './Koros';\n\nexport default {\n  component: Koros,\n  title: 'Components/Koros',\n  decorators: [withKnobs],\n  parameters: {\n    docs: {\n      page: () => (\n        <>\n          <Title>Props</Title>\n          <Props />\n          <Stories title=\"Examples\" includePrimary />\n        </>\n      ),\n    },\n  },\n};\n\nexport const Basic = () => <Koros />;\n\nexport const Beat = () => <Koros type=\"beat\" />;\n\nexport const Pulse = () => <Koros type=\"pulse\" />;\n\nexport const Wave = () => <Koros type=\"wave\" />;\n\nexport const Storm = () => <Koros type=\"storm\" />;\n\nexport const Flipped = () => <Koros flipHorizontal />;\n\nexport const Playground = () => {\n  const type = radios('Type', { basic: 'basic', beat: 'beat', pulse: 'pulse', wave: 'wave', storm: 'storm' }, 'basic');\n  const flipped = boolean('Flip horizontal', false);\n\n  return <Koros type={type} flipHorizontal={flipped} />;\n};\n\nPlayground.story = {\n  parameters: {\n    previewTabs: {\n      'storybook/docs/panel': {\n        hidden: true,\n      },\n    },\n    docs: {\n      disable: true,\n    },\n  },\n};\n",locationsMap:{"components-koros--basic":{startLoc:{col:21,line:24},endLoc:{col:36,line:24},startBody:{col:21,line:24},endBody:{col:36,line:24}},"components-koros--beat":{startLoc:{col:20,line:26},endLoc:{col:47,line:26},startBody:{col:20,line:26},endBody:{col:47,line:26}},"components-koros--pulse":{startLoc:{col:21,line:28},endLoc:{col:49,line:28},startBody:{col:21,line:28},endBody:{col:49,line:28}},"components-koros--wave":{startLoc:{col:20,line:30},endLoc:{col:47,line:30},startBody:{col:20,line:30},endBody:{col:47,line:30}},"components-koros--storm":{startLoc:{col:21,line:32},endLoc:{col:49,line:32},startBody:{col:21,line:32},endBody:{col:49,line:32}},"components-koros--flipped":{startLoc:{col:23,line:34},endLoc:{col:53,line:34},startBody:{col:23,line:34},endBody:{col:53,line:34}},"components-koros--playground":{startLoc:{col:26,line:36},endLoc:{col:1,line:41},startBody:{col:26,line:36},endBody:{col:1,line:41}}}}),Object(_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__.a)(_parameters,"docs",{page:function page(){return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,_ref,_ref2,_ref3)}}),_parameters)};var _ref4=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Koros__WEBPACK_IMPORTED_MODULE_4__.a,null),Basic=function(){return _ref4};Basic.displayName="Basic";var _ref5=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Koros__WEBPACK_IMPORTED_MODULE_4__.a,{type:"beat"}),Beat=function(){return _ref5};Beat.displayName="Beat";var _ref6=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Koros__WEBPACK_IMPORTED_MODULE_4__.a,{type:"pulse"}),Pulse=function(){return _ref6};Pulse.displayName="Pulse";var _ref7=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Koros__WEBPACK_IMPORTED_MODULE_4__.a,{type:"wave"}),Wave=function(){return _ref7};Wave.displayName="Wave";var _ref8=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Koros__WEBPACK_IMPORTED_MODULE_4__.a,{type:"storm"}),Storm=function(){return _ref8};Storm.displayName="Storm";var _ref9=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Koros__WEBPACK_IMPORTED_MODULE_4__.a,{flipHorizontal:!0}),Flipped=function(){return _ref9};Flipped.displayName="Flipped";var Playground=function(){var type=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.radios)("Type",{basic:"basic",beat:"beat",pulse:"pulse",wave:"wave",storm:"storm"},"basic"),flipped=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.boolean)("Flip horizontal",!1);return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Koros__WEBPACK_IMPORTED_MODULE_4__.a,{type:type,flipHorizontal:flipped})};Playground.displayName="Playground",Playground.story={parameters:{previewTabs:{"storybook/docs/panel":{hidden:!0}},docs:{disable:!0}}},Basic.__docgenInfo={description:"",methods:[],displayName:"Basic"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/koros/Koros.stories.tsx"]={name:"Basic",docgenInfo:Basic.__docgenInfo,path:"src/components/koros/Koros.stories.tsx"}),Beat.__docgenInfo={description:"",methods:[],displayName:"Beat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/koros/Koros.stories.tsx"]={name:"Beat",docgenInfo:Beat.__docgenInfo,path:"src/components/koros/Koros.stories.tsx"}),Pulse.__docgenInfo={description:"",methods:[],displayName:"Pulse"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/koros/Koros.stories.tsx"]={name:"Pulse",docgenInfo:Pulse.__docgenInfo,path:"src/components/koros/Koros.stories.tsx"}),Wave.__docgenInfo={description:"",methods:[],displayName:"Wave"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/koros/Koros.stories.tsx"]={name:"Wave",docgenInfo:Wave.__docgenInfo,path:"src/components/koros/Koros.stories.tsx"}),Storm.__docgenInfo={description:"",methods:[],displayName:"Storm"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/koros/Koros.stories.tsx"]={name:"Storm",docgenInfo:Storm.__docgenInfo,path:"src/components/koros/Koros.stories.tsx"}),Flipped.__docgenInfo={description:"",methods:[],displayName:"Flipped"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/koros/Koros.stories.tsx"]={name:"Flipped",docgenInfo:Flipped.__docgenInfo,path:"src/components/koros/Koros.stories.tsx"}),Playground.__docgenInfo={description:"",methods:[],displayName:"Playground"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/koros/Koros.stories.tsx"]={name:"Playground",docgenInfo:Playground.__docgenInfo,path:"src/components/koros/Koros.stories.tsx"})},1538:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"Warning",(function(){return Warning})),__webpack_require__.d(__webpack_exports__,"Error",(function(){return Error})),__webpack_require__.d(__webpack_exports__,"Success",(function(){return Success}));var _home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(17),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__),_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(1),_Notification__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(128);__webpack_exports__.default={parameters:Object(_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__.a)({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import React from \'react\';\\nimport { withKnobs } from \'@storybook/addon-knobs\';\\n\\nimport Notification from \'./Notification\';\\n\\nconst content =\\n  \'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris.\';\\n\\nexport default {\\n  component: Notification,\\n  title: \'Components/Notification\',\\n  decorators: [withKnobs, (storyFn) => <div style={{ maxWidth: \'400px\' }}>{storyFn()}</div>],\\n};\\n\\nexport const Default = () => <Notification labelText=\\"label\\">{content}</Notification>;\\n\\nexport const Warning = () => (\\n  <Notification labelText=\\"label\\" type=\\"warning\\">\\n    {content}\\n  </Notification>\\n);\\n\\nexport const Error = () => (\\n  <Notification labelText=\\"label\\" type=\\"error\\">\\n    {content}\\n  </Notification>\\n);\\n\\nexport const Success = () => (\\n  <Notification labelText=\\"label\\" type=\\"success\\">\\n    {content}\\n  </Notification>\\n);\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"components-notification--default":{"startLoc":{"col":23,"line":15},"endLoc":{"col":85,"line":15},"startBody":{"col":23,"line":15},"endBody":{"col":85,"line":15}},"components-notification--warning":{"startLoc":{"col":23,"line":17},"endLoc":{"col":1,"line":21},"startBody":{"col":23,"line":17},"endBody":{"col":1,"line":21}},"components-notification--error":{"startLoc":{"col":21,"line":23},"endLoc":{"col":1,"line":27},"startBody":{"col":21,"line":23},"endBody":{"col":1,"line":27}},"components-notification--success":{"startLoc":{"col":23,"line":29},"endLoc":{"col":1,"line":33},"startBody":{"col":23,"line":29},"endBody":{"col":1,"line":33}}};\n    \nimport React from \'react\';\nimport { withKnobs } from \'@storybook/addon-knobs\';\n\nimport Notification from \'./Notification\';\n\nconst content =\n  \'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris.\';\n\nexport default {parameters: {"storySource":{"source":"import React from \'react\';\\nimport { withKnobs } from \'@storybook/addon-knobs\';\\n\\nimport Notification from \'./Notification\';\\n\\nconst content =\\n  \'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris.\';\\n\\nexport default {\\n  component: Notification,\\n  title: \'Components/Notification\',\\n  decorators: [withKnobs, (storyFn) => <div style={{ maxWidth: \'400px\' }}>{storyFn()}</div>],\\n};\\n\\nexport const Default = () => <Notification labelText=\\"label\\">{content}</Notification>;\\n\\nexport const Warning = () => (\\n  <Notification labelText=\\"label\\" type=\\"warning\\">\\n    {content}\\n  </Notification>\\n);\\n\\nexport const Error = () => (\\n  <Notification labelText=\\"label\\" type=\\"error\\">\\n    {content}\\n  </Notification>\\n);\\n\\nexport const Success = () => (\\n  <Notification labelText=\\"label\\" type=\\"success\\">\\n    {content}\\n  </Notification>\\n);\\n","locationsMap":{"components-notification--default":{"startLoc":{"col":23,"line":15},"endLoc":{"col":85,"line":15},"startBody":{"col":23,"line":15},"endBody":{"col":85,"line":15}},"components-notification--warning":{"startLoc":{"col":23,"line":17},"endLoc":{"col":1,"line":21},"startBody":{"col":23,"line":17},"endBody":{"col":1,"line":21}},"components-notification--error":{"startLoc":{"col":21,"line":23},"endLoc":{"col":1,"line":27},"startBody":{"col":21,"line":23},"endBody":{"col":1,"line":27}},"components-notification--success":{"startLoc":{"col":23,"line":29},"endLoc":{"col":1,"line":33},"startBody":{"col":23,"line":29},"endBody":{"col":1,"line":33}}}},},\n  component: Notification,\n  title: \'Components/Notification\',\n  decorators: [withKnobs, (storyFn) => <div style={{ maxWidth: \'400px\' }}>{storyFn()}</div>],\n};\n\nexport const Default = () => <Notification labelText="label">{content}</Notification>;;\n\nexport const Warning = () => (\n  <Notification labelText="label" type="warning">\n    {content}\n  </Notification>\n);;\n\nexport const Error = () => (\n  <Notification labelText="label" type="error">\n    {content}\n  </Notification>\n);;\n\nexport const Success = () => (\n  <Notification labelText="label" type="success">\n    {content}\n  </Notification>\n);\n',locationsMap:{"components-notification--default":{startLoc:{col:23,line:23},endLoc:{col:85,line:23},startBody:{col:23,line:23},endBody:{col:85,line:23}},"components-notification--warning":{startLoc:{col:23,line:25},endLoc:{col:1,line:29},startBody:{col:23,line:25},endBody:{col:1,line:29}},"components-notification--error":{startLoc:{col:21,line:31},endLoc:{col:1,line:35},startBody:{col:21,line:31},endBody:{col:1,line:35}},"components-notification--success":{startLoc:{col:23,line:37},endLoc:{col:1,line:41},startBody:{col:23,line:37},endBody:{col:1,line:41}}}}},"storySource",{source:'import React from \'react\';\nimport { withKnobs } from \'@storybook/addon-knobs\';\n\nimport Notification from \'./Notification\';\n\nconst content =\n  \'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris.\';\n\nexport default {\n  component: Notification,\n  title: \'Components/Notification\',\n  decorators: [withKnobs, (storyFn) => <div style={{ maxWidth: \'400px\' }}>{storyFn()}</div>],\n};\n\nexport const Default = () => <Notification labelText="label">{content}</Notification>;\n\nexport const Warning = () => (\n  <Notification labelText="label" type="warning">\n    {content}\n  </Notification>\n);\n\nexport const Error = () => (\n  <Notification labelText="label" type="error">\n    {content}\n  </Notification>\n);\n\nexport const Success = () => (\n  <Notification labelText="label" type="success">\n    {content}\n  </Notification>\n);\n',locationsMap:{"components-notification--default":{startLoc:{col:23,line:15},endLoc:{col:85,line:15},startBody:{col:23,line:15},endBody:{col:85,line:15}},"components-notification--warning":{startLoc:{col:23,line:17},endLoc:{col:1,line:21},startBody:{col:23,line:17},endBody:{col:1,line:21}},"components-notification--error":{startLoc:{col:21,line:23},endLoc:{col:1,line:27},startBody:{col:21,line:23},endBody:{col:1,line:27}},"components-notification--success":{startLoc:{col:23,line:29},endLoc:{col:1,line:33},startBody:{col:23,line:29},endBody:{col:1,line:33}}}}),component:_Notification__WEBPACK_IMPORTED_MODULE_3__.a,title:"Components/Notification",decorators:[_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.withKnobs,function(storyFn){return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div",{style:{maxWidth:"400px"}},storyFn())}]};var _ref=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Notification__WEBPACK_IMPORTED_MODULE_3__.a,{labelText:"label"},"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris."),Default=function(){return _ref};Default.displayName="Default";var _ref2=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Notification__WEBPACK_IMPORTED_MODULE_3__.a,{labelText:"label",type:"warning"},"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris."),Warning=function(){return _ref2};Warning.displayName="Warning";var _ref3=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Notification__WEBPACK_IMPORTED_MODULE_3__.a,{labelText:"label",type:"error"},"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris."),Error=function(){return _ref3};Error.displayName="Error";var _ref4=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Notification__WEBPACK_IMPORTED_MODULE_3__.a,{labelText:"label",type:"success"},"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris."),Success=function(){return _ref4};Success.displayName="Success",Default.__docgenInfo={description:"",methods:[],displayName:"Default"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/notification/Notification.stories.tsx"]={name:"Default",docgenInfo:Default.__docgenInfo,path:"src/components/notification/Notification.stories.tsx"}),Warning.__docgenInfo={description:"",methods:[],displayName:"Warning"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/notification/Notification.stories.tsx"]={name:"Warning",docgenInfo:Warning.__docgenInfo,path:"src/components/notification/Notification.stories.tsx"}),Error.__docgenInfo={description:"",methods:[],displayName:"Error"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/notification/Notification.stories.tsx"]={name:"Error",docgenInfo:Error.__docgenInfo,path:"src/components/notification/Notification.stories.tsx"}),Success.__docgenInfo={description:"",methods:[],displayName:"Success"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/notification/Notification.stories.tsx"]={name:"Success",docgenInfo:Success.__docgenInfo,path:"src/components/notification/Notification.stories.tsx"})},1539:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Plain",(function(){return Plain})),__webpack_require__.d(__webpack_exports__,"Primary",(function(){return Primary})),__webpack_require__.d(__webpack_exports__,"Secondary",(function(){return Secondary})),__webpack_require__.d(__webpack_exports__,"Tertiary",(function(){return Tertiary})),__webpack_require__.d(__webpack_exports__,"WithKoros",(function(){return WithKoros})),__webpack_require__.d(__webpack_exports__,"Multiple",(function(){return Multiple})),__webpack_require__.d(__webpack_exports__,"Playground",(function(){return Playground}));var _parameters,_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(17),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__),_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(14),_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(1),_Section__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(36),_assets_img_placeholder_1920x1080_jpg__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(83),_assets_img_placeholder_1920x1080_jpg__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_assets_img_placeholder_1920x1080_jpg__WEBPACK_IMPORTED_MODULE_5__),placeholderText="Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua.",placeholderImg=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("img",{src:_assets_img_placeholder_1920x1080_jpg__WEBPACK_IMPORTED_MODULE_5___default.a,alt:"",style:{display:"block",width:"100%"}}),_ref=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_2__.Title,null,"Props"),_ref2=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_2__.Props,null);__webpack_exports__.default={component:_Section__WEBPACK_IMPORTED_MODULE_4__.a,title:"Components/Section",parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import React from \'react\';\\nimport { Props, Title } from \'@storybook/addon-docs/dist/blocks\';\\nimport { radios, text } from \'@storybook/addon-knobs\';\\n\\nimport Section from \'./Section\';\\nimport imageFile from \'../../assets/img/placeholder_1920x1080.jpg\';\\n\\nconst placeholderTitle = \'Lorem ipsum\';\\nconst placeholderText =\\n  \'Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua.\';\\nconst placeholderImg = <img src={imageFile} alt=\\"\\" style={{ display: \'block\', width: \'100%\' }} />;\\n\\nexport default {\\n  component: Section,\\n  title: \'Components/Section\',\\n  parameters: {\\n    layout: \'fullscreen\',\\n    docs: {\\n      page: () => (\\n        <>\\n          <Title>Props</Title>\\n          <Props />\\n        </>\\n      ),\\n    },\\n  },\\n};\\n\\nexport const Plain = () => (\\n  <Section>\\n    <h1>{placeholderTitle}</h1>\\n    {placeholderText}\\n  </Section>\\n);\\n\\nexport const Primary = () => (\\n  <Section color=\\"primary\\">\\n    <h1>{placeholderTitle}</h1>\\n    {placeholderText}\\n  </Section>\\n);\\n\\nexport const Secondary = () => (\\n  <Section color=\\"secondary\\">\\n    <h1>{placeholderTitle}</h1>\\n    {placeholderText}\\n  </Section>\\n);\\n\\nexport const Tertiary = () => (\\n  <Section color=\\"tertiary\\">\\n    <h1>{placeholderTitle}</h1>\\n    {placeholderText}\\n  </Section>\\n);\\n\\nexport const WithKoros = () => (\\n  <Section color=\\"primary\\" korosType=\\"basic\\">\\n    <h1>{placeholderTitle}</h1>\\n    {placeholderText}\\n  </Section>\\n);\\n\\nWithKoros.story = {\\n  name: \'With koros\',\\n};\\n\\nexport const Multiple = () => (\\n  <>\\n    <Section color=\\"secondary\\" korosType=\\"basic\\">\\n      <h1>{placeholderTitle}</h1>\\n      {placeholderText}\\n    </Section>\\n    {placeholderImg}\\n    <Section color=\\"primary\\">\\n      <h2>No Koros</h2>\\n      This section does not have any koros.\\n    </Section>\\n    <Section korosType=\\"pulse\\">\\n      <h2>Pulse</h2>\\n      {placeholderText}\\n    </Section>\\n    <Section color=\\"secondary\\">Secondary non-koros section</Section>\\n    <Section color=\\"tertiary\\" korosType=\\"beat\\">\\n      <h2>secondary Beat</h2>\\n      {placeholderText}\\n    </Section>\\n    <Section />\\n    <Section color=\\"secondary\\" korosType=\\"wave\\">\\n      <h2>Wave</h2>\\n      {placeholderText}\\n    </Section>\\n    <Section />\\n    <Section color=\\"primary\\" korosType=\\"beat\\">\\n      <h2>primary Beat</h2>\\n      {placeholderText}\\n    </Section>\\n    <Section color=\\"tertiary\\" />\\n    <Section color=\\"secondary\\" korosType=\\"storm\\">\\n      <h2>Storm</h2>\\n      {placeholderText}\\n    </Section>\\n    <Section>This section has neither a heading or a koros.</Section>\\n  </>\\n);\\n\\nMultiple.story = {\\n  name: \'Multiple sections\',\\n};\\n\\nexport const Playground = () => {\\n  const sectionTitle = text(\'Title\', placeholderTitle);\\n  const sectionText = text(\'Text\', placeholderText);\\n  const color = radios(\\n    \'Color\',\\n    { plain: \'plain\', primary: \'primary\', secondary: \'secondary\', tertiary: \'tertiary\' },\\n    \'plain\',\\n  );\\n  const korosType = radios(\\n    \'Koros\',\\n    { none: null, basic: \'basic\', beat: \'beat\', pulse: \'pulse\', wave: \'wave\', storm: \'storm\' },\\n    null,\\n  );\\n\\n  return (\\n    <Section color={color} korosType={korosType}>\\n      <h1>{sectionTitle}</h1>\\n      <p>{sectionText}</p>\\n    </Section>\\n  );\\n};\\n\\nPlayground.story = {\\n  parameters: {\\n    previewTabs: {\\n      \'storybook/docs/panel\': {\\n        hidden: true,\\n      },\\n    },\\n    docs: {\\n      disable: true,\\n    },\\n  },\\n};\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"components-section--plain":{"startLoc":{"col":21,"line":29},"endLoc":{"col":1,"line":34},"startBody":{"col":21,"line":29},"endBody":{"col":1,"line":34}},"components-section--primary":{"startLoc":{"col":23,"line":36},"endLoc":{"col":1,"line":41},"startBody":{"col":23,"line":36},"endBody":{"col":1,"line":41}},"components-section--secondary":{"startLoc":{"col":25,"line":43},"endLoc":{"col":1,"line":48},"startBody":{"col":25,"line":43},"endBody":{"col":1,"line":48}},"components-section--tertiary":{"startLoc":{"col":24,"line":50},"endLoc":{"col":1,"line":55},"startBody":{"col":24,"line":50},"endBody":{"col":1,"line":55}},"components-section--with-koros":{"startLoc":{"col":25,"line":57},"endLoc":{"col":1,"line":62},"startBody":{"col":25,"line":57},"endBody":{"col":1,"line":62}},"components-section--multiple":{"startLoc":{"col":24,"line":68},"endLoc":{"col":1,"line":105},"startBody":{"col":24,"line":68},"endBody":{"col":1,"line":105}},"components-section--playground":{"startLoc":{"col":26,"line":111},"endLoc":{"col":1,"line":131},"startBody":{"col":26,"line":111},"endBody":{"col":1,"line":131}}};\n    \nimport React from \'react\';\nimport { Props, Title } from \'@storybook/addon-docs/dist/blocks\';\nimport { radios, text } from \'@storybook/addon-knobs\';\n\nimport Section from \'./Section\';\nimport imageFile from \'../../assets/img/placeholder_1920x1080.jpg\';\n\nconst placeholderTitle = \'Lorem ipsum\';\nconst placeholderText =\n  \'Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua.\';\nconst placeholderImg = <img src={imageFile} alt="" style={{ display: \'block\', width: \'100%\' }} />;\n\nexport default {\n  component: Section,\n  title: \'Components/Section\',\n  parameters: {"storySource":{"source":"import React from \'react\';\\nimport { Props, Title } from \'@storybook/addon-docs/dist/blocks\';\\nimport { radios, text } from \'@storybook/addon-knobs\';\\n\\nimport Section from \'./Section\';\\nimport imageFile from \'../../assets/img/placeholder_1920x1080.jpg\';\\n\\nconst placeholderTitle = \'Lorem ipsum\';\\nconst placeholderText =\\n  \'Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua.\';\\nconst placeholderImg = <img src={imageFile} alt=\\"\\" style={{ display: \'block\', width: \'100%\' }} />;\\n\\nexport default {\\n  component: Section,\\n  title: \'Components/Section\',\\n  parameters: {\\n    layout: \'fullscreen\',\\n    docs: {\\n      page: () => (\\n        <>\\n          <Title>Props</Title>\\n          <Props />\\n        </>\\n      ),\\n    },\\n  },\\n};\\n\\nexport const Plain = () => (\\n  <Section>\\n    <h1>{placeholderTitle}</h1>\\n    {placeholderText}\\n  </Section>\\n);\\n\\nexport const Primary = () => (\\n  <Section color=\\"primary\\">\\n    <h1>{placeholderTitle}</h1>\\n    {placeholderText}\\n  </Section>\\n);\\n\\nexport const Secondary = () => (\\n  <Section color=\\"secondary\\">\\n    <h1>{placeholderTitle}</h1>\\n    {placeholderText}\\n  </Section>\\n);\\n\\nexport const Tertiary = () => (\\n  <Section color=\\"tertiary\\">\\n    <h1>{placeholderTitle}</h1>\\n    {placeholderText}\\n  </Section>\\n);\\n\\nexport const WithKoros = () => (\\n  <Section color=\\"primary\\" korosType=\\"basic\\">\\n    <h1>{placeholderTitle}</h1>\\n    {placeholderText}\\n  </Section>\\n);\\n\\nWithKoros.story = {\\n  name: \'With koros\',\\n};\\n\\nexport const Multiple = () => (\\n  <>\\n    <Section color=\\"secondary\\" korosType=\\"basic\\">\\n      <h1>{placeholderTitle}</h1>\\n      {placeholderText}\\n    </Section>\\n    {placeholderImg}\\n    <Section color=\\"primary\\">\\n      <h2>No Koros</h2>\\n      This section does not have any koros.\\n    </Section>\\n    <Section korosType=\\"pulse\\">\\n      <h2>Pulse</h2>\\n      {placeholderText}\\n    </Section>\\n    <Section color=\\"secondary\\">Secondary non-koros section</Section>\\n    <Section color=\\"tertiary\\" korosType=\\"beat\\">\\n      <h2>secondary Beat</h2>\\n      {placeholderText}\\n    </Section>\\n    <Section />\\n    <Section color=\\"secondary\\" korosType=\\"wave\\">\\n      <h2>Wave</h2>\\n      {placeholderText}\\n    </Section>\\n    <Section />\\n    <Section color=\\"primary\\" korosType=\\"beat\\">\\n      <h2>primary Beat</h2>\\n      {placeholderText}\\n    </Section>\\n    <Section color=\\"tertiary\\" />\\n    <Section color=\\"secondary\\" korosType=\\"storm\\">\\n      <h2>Storm</h2>\\n      {placeholderText}\\n    </Section>\\n    <Section>This section has neither a heading or a koros.</Section>\\n  </>\\n);\\n\\nMultiple.story = {\\n  name: \'Multiple sections\',\\n};\\n\\nexport const Playground = () => {\\n  const sectionTitle = text(\'Title\', placeholderTitle);\\n  const sectionText = text(\'Text\', placeholderText);\\n  const color = radios(\\n    \'Color\',\\n    { plain: \'plain\', primary: \'primary\', secondary: \'secondary\', tertiary: \'tertiary\' },\\n    \'plain\',\\n  );\\n  const korosType = radios(\\n    \'Koros\',\\n    { none: null, basic: \'basic\', beat: \'beat\', pulse: \'pulse\', wave: \'wave\', storm: \'storm\' },\\n    null,\\n  );\\n\\n  return (\\n    <Section color={color} korosType={korosType}>\\n      <h1>{sectionTitle}</h1>\\n      <p>{sectionText}</p>\\n    </Section>\\n  );\\n};\\n\\nPlayground.story = {\\n  parameters: {\\n    previewTabs: {\\n      \'storybook/docs/panel\': {\\n        hidden: true,\\n      },\\n    },\\n    docs: {\\n      disable: true,\\n    },\\n  },\\n};\\n","locationsMap":{"components-section--plain":{"startLoc":{"col":21,"line":29},"endLoc":{"col":1,"line":34},"startBody":{"col":21,"line":29},"endBody":{"col":1,"line":34}},"components-section--primary":{"startLoc":{"col":23,"line":36},"endLoc":{"col":1,"line":41},"startBody":{"col":23,"line":36},"endBody":{"col":1,"line":41}},"components-section--secondary":{"startLoc":{"col":25,"line":43},"endLoc":{"col":1,"line":48},"startBody":{"col":25,"line":43},"endBody":{"col":1,"line":48}},"components-section--tertiary":{"startLoc":{"col":24,"line":50},"endLoc":{"col":1,"line":55},"startBody":{"col":24,"line":50},"endBody":{"col":1,"line":55}},"components-section--with-koros":{"startLoc":{"col":25,"line":57},"endLoc":{"col":1,"line":62},"startBody":{"col":25,"line":57},"endBody":{"col":1,"line":62}},"components-section--multiple":{"startLoc":{"col":24,"line":68},"endLoc":{"col":1,"line":105},"startBody":{"col":24,"line":68},"endBody":{"col":1,"line":105}},"components-section--playground":{"startLoc":{"col":26,"line":111},"endLoc":{"col":1,"line":131},"startBody":{"col":26,"line":111},"endBody":{"col":1,"line":131}}}},\n    layout: \'fullscreen\',\n    docs: {\n      page: () => (\n        <>\n          <Title>Props</Title>\n          <Props />\n        </>\n      ),\n    },\n  },\n};\n\nexport const Plain = () => (\n  <Section>\n    <h1>{placeholderTitle}</h1>\n    {placeholderText}\n  </Section>\n);;\n\nexport const Primary = () => (\n  <Section color="primary">\n    <h1>{placeholderTitle}</h1>\n    {placeholderText}\n  </Section>\n);;\n\nexport const Secondary = () => (\n  <Section color="secondary">\n    <h1>{placeholderTitle}</h1>\n    {placeholderText}\n  </Section>\n);;\n\nexport const Tertiary = () => (\n  <Section color="tertiary">\n    <h1>{placeholderTitle}</h1>\n    {placeholderText}\n  </Section>\n);;\n\nexport const WithKoros = () => (\n  <Section color="primary" korosType="basic">\n    <h1>{placeholderTitle}</h1>\n    {placeholderText}\n  </Section>\n);;\n\nWithKoros.story = {\n  name: \'With koros\',\n};\n\nexport const Multiple = () => (\n  <>\n    <Section color="secondary" korosType="basic">\n      <h1>{placeholderTitle}</h1>\n      {placeholderText}\n    </Section>\n    {placeholderImg}\n    <Section color="primary">\n      <h2>No Koros</h2>\n      This section does not have any koros.\n    </Section>\n    <Section korosType="pulse">\n      <h2>Pulse</h2>\n      {placeholderText}\n    </Section>\n    <Section color="secondary">Secondary non-koros section</Section>\n    <Section color="tertiary" korosType="beat">\n      <h2>secondary Beat</h2>\n      {placeholderText}\n    </Section>\n    <Section />\n    <Section color="secondary" korosType="wave">\n      <h2>Wave</h2>\n      {placeholderText}\n    </Section>\n    <Section />\n    <Section color="primary" korosType="beat">\n      <h2>primary Beat</h2>\n      {placeholderText}\n    </Section>\n    <Section color="tertiary" />\n    <Section color="secondary" korosType="storm">\n      <h2>Storm</h2>\n      {placeholderText}\n    </Section>\n    <Section>This section has neither a heading or a koros.</Section>\n  </>\n);;\n\nMultiple.story = {\n  name: \'Multiple sections\',\n};\n\nexport const Playground = () => {\n  const sectionTitle = text(\'Title\', placeholderTitle);\n  const sectionText = text(\'Text\', placeholderText);\n  const color = radios(\n    \'Color\',\n    { plain: \'plain\', primary: \'primary\', secondary: \'secondary\', tertiary: \'tertiary\' },\n    \'plain\',\n  );\n  const korosType = radios(\n    \'Koros\',\n    { none: null, basic: \'basic\', beat: \'beat\', pulse: \'pulse\', wave: \'wave\', storm: \'storm\' },\n    null,\n  );\n\n  return (\n    <Section color={color} korosType={korosType}>\n      <h1>{sectionTitle}</h1>\n      <p>{sectionText}</p>\n    </Section>\n  );\n};\n\nPlayground.story = {\n  parameters: {\n    previewTabs: {\n      \'storybook/docs/panel\': {\n        hidden: true,\n      },\n    },\n    docs: {\n      disable: true,\n    },\n  },\n};\n',locationsMap:{"components-section--plain":{startLoc:{col:21,line:37},endLoc:{col:1,line:42},startBody:{col:21,line:37},endBody:{col:1,line:42}},"components-section--primary":{startLoc:{col:23,line:44},endLoc:{col:1,line:49},startBody:{col:23,line:44},endBody:{col:1,line:49}},"components-section--secondary":{startLoc:{col:25,line:51},endLoc:{col:1,line:56},startBody:{col:25,line:51},endBody:{col:1,line:56}},"components-section--tertiary":{startLoc:{col:24,line:58},endLoc:{col:1,line:63},startBody:{col:24,line:58},endBody:{col:1,line:63}},"components-section--with-koros":{startLoc:{col:25,line:65},endLoc:{col:1,line:70},startBody:{col:25,line:65},endBody:{col:1,line:70}},"components-section--multiple":{startLoc:{col:24,line:76},endLoc:{col:1,line:113},startBody:{col:24,line:76},endBody:{col:1,line:113}},"components-section--playground":{startLoc:{col:26,line:119},endLoc:{col:1,line:139},startBody:{col:26,line:119},endBody:{col:1,line:139}}}}},Object(_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__.a)(_parameters,"storySource",{source:"import React from 'react';\nimport { Props, Title } from '@storybook/addon-docs/dist/blocks';\nimport { radios, text } from '@storybook/addon-knobs';\n\nimport Section from './Section';\nimport imageFile from '../../assets/img/placeholder_1920x1080.jpg';\n\nconst placeholderTitle = 'Lorem ipsum';\nconst placeholderText =\n  'Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua.';\nconst placeholderImg = <img src={imageFile} alt=\"\" style={{ display: 'block', width: '100%' }} />;\n\nexport default {\n  component: Section,\n  title: 'Components/Section',\n  parameters: {\n    layout: 'fullscreen',\n    docs: {\n      page: () => (\n        <>\n          <Title>Props</Title>\n          <Props />\n        </>\n      ),\n    },\n  },\n};\n\nexport const Plain = () => (\n  <Section>\n    <h1>{placeholderTitle}</h1>\n    {placeholderText}\n  </Section>\n);\n\nexport const Primary = () => (\n  <Section color=\"primary\">\n    <h1>{placeholderTitle}</h1>\n    {placeholderText}\n  </Section>\n);\n\nexport const Secondary = () => (\n  <Section color=\"secondary\">\n    <h1>{placeholderTitle}</h1>\n    {placeholderText}\n  </Section>\n);\n\nexport const Tertiary = () => (\n  <Section color=\"tertiary\">\n    <h1>{placeholderTitle}</h1>\n    {placeholderText}\n  </Section>\n);\n\nexport const WithKoros = () => (\n  <Section color=\"primary\" korosType=\"basic\">\n    <h1>{placeholderTitle}</h1>\n    {placeholderText}\n  </Section>\n);\n\nWithKoros.story = {\n  name: 'With koros',\n};\n\nexport const Multiple = () => (\n  <>\n    <Section color=\"secondary\" korosType=\"basic\">\n      <h1>{placeholderTitle}</h1>\n      {placeholderText}\n    </Section>\n    {placeholderImg}\n    <Section color=\"primary\">\n      <h2>No Koros</h2>\n      This section does not have any koros.\n    </Section>\n    <Section korosType=\"pulse\">\n      <h2>Pulse</h2>\n      {placeholderText}\n    </Section>\n    <Section color=\"secondary\">Secondary non-koros section</Section>\n    <Section color=\"tertiary\" korosType=\"beat\">\n      <h2>secondary Beat</h2>\n      {placeholderText}\n    </Section>\n    <Section />\n    <Section color=\"secondary\" korosType=\"wave\">\n      <h2>Wave</h2>\n      {placeholderText}\n    </Section>\n    <Section />\n    <Section color=\"primary\" korosType=\"beat\">\n      <h2>primary Beat</h2>\n      {placeholderText}\n    </Section>\n    <Section color=\"tertiary\" />\n    <Section color=\"secondary\" korosType=\"storm\">\n      <h2>Storm</h2>\n      {placeholderText}\n    </Section>\n    <Section>This section has neither a heading or a koros.</Section>\n  </>\n);\n\nMultiple.story = {\n  name: 'Multiple sections',\n};\n\nexport const Playground = () => {\n  const sectionTitle = text('Title', placeholderTitle);\n  const sectionText = text('Text', placeholderText);\n  const color = radios(\n    'Color',\n    { plain: 'plain', primary: 'primary', secondary: 'secondary', tertiary: 'tertiary' },\n    'plain',\n  );\n  const korosType = radios(\n    'Koros',\n    { none: null, basic: 'basic', beat: 'beat', pulse: 'pulse', wave: 'wave', storm: 'storm' },\n    null,\n  );\n\n  return (\n    <Section color={color} korosType={korosType}>\n      <h1>{sectionTitle}</h1>\n      <p>{sectionText}</p>\n    </Section>\n  );\n};\n\nPlayground.story = {\n  parameters: {\n    previewTabs: {\n      'storybook/docs/panel': {\n        hidden: true,\n      },\n    },\n    docs: {\n      disable: true,\n    },\n  },\n};\n",locationsMap:{"components-section--plain":{startLoc:{col:21,line:29},endLoc:{col:1,line:34},startBody:{col:21,line:29},endBody:{col:1,line:34}},"components-section--primary":{startLoc:{col:23,line:36},endLoc:{col:1,line:41},startBody:{col:23,line:36},endBody:{col:1,line:41}},"components-section--secondary":{startLoc:{col:25,line:43},endLoc:{col:1,line:48},startBody:{col:25,line:43},endBody:{col:1,line:48}},"components-section--tertiary":{startLoc:{col:24,line:50},endLoc:{col:1,line:55},startBody:{col:24,line:50},endBody:{col:1,line:55}},"components-section--with-koros":{startLoc:{col:25,line:57},endLoc:{col:1,line:62},startBody:{col:25,line:57},endBody:{col:1,line:62}},"components-section--multiple":{startLoc:{col:24,line:68},endLoc:{col:1,line:105},startBody:{col:24,line:68},endBody:{col:1,line:105}},"components-section--playground":{startLoc:{col:26,line:111},endLoc:{col:1,line:131},startBody:{col:26,line:111},endBody:{col:1,line:131}}}}),Object(_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__.a)(_parameters,"layout","fullscreen"),Object(_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__.a)(_parameters,"docs",{page:function page(){return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,_ref,_ref2)}}),_parameters)};var _ref3=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Section__WEBPACK_IMPORTED_MODULE_4__.a,null,react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("h1",null,"Lorem ipsum"),placeholderText),Plain=function(){return _ref3};Plain.displayName="Plain";var _ref4=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Section__WEBPACK_IMPORTED_MODULE_4__.a,{color:"primary"},react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("h1",null,"Lorem ipsum"),placeholderText),Primary=function(){return _ref4};Primary.displayName="Primary";var _ref5=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Section__WEBPACK_IMPORTED_MODULE_4__.a,{color:"secondary"},react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("h1",null,"Lorem ipsum"),placeholderText),Secondary=function(){return _ref5};Secondary.displayName="Secondary";var _ref6=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Section__WEBPACK_IMPORTED_MODULE_4__.a,{color:"tertiary"},react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("h1",null,"Lorem ipsum"),placeholderText),Tertiary=function(){return _ref6};Tertiary.displayName="Tertiary";var _ref7=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Section__WEBPACK_IMPORTED_MODULE_4__.a,{color:"primary",korosType:"basic"},react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("h1",null,"Lorem ipsum"),placeholderText),WithKoros=function(){return _ref7};WithKoros.displayName="WithKoros",WithKoros.story={name:"With koros"};var _ref8=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Section__WEBPACK_IMPORTED_MODULE_4__.a,{color:"secondary",korosType:"basic"},react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("h1",null,"Lorem ipsum"),placeholderText),_ref9=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Section__WEBPACK_IMPORTED_MODULE_4__.a,{color:"primary"},react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("h2",null,"No Koros"),"This section does not have any koros."),_ref10=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Section__WEBPACK_IMPORTED_MODULE_4__.a,{korosType:"pulse"},react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("h2",null,"Pulse"),placeholderText),_ref11=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Section__WEBPACK_IMPORTED_MODULE_4__.a,{color:"secondary"},"Secondary non-koros section"),_ref12=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Section__WEBPACK_IMPORTED_MODULE_4__.a,{color:"tertiary",korosType:"beat"},react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("h2",null,"secondary Beat"),placeholderText),_ref13=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Section__WEBPACK_IMPORTED_MODULE_4__.a,null),_ref14=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Section__WEBPACK_IMPORTED_MODULE_4__.a,{color:"secondary",korosType:"wave"},react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("h2",null,"Wave"),placeholderText),_ref15=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Section__WEBPACK_IMPORTED_MODULE_4__.a,null),_ref16=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Section__WEBPACK_IMPORTED_MODULE_4__.a,{color:"primary",korosType:"beat"},react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("h2",null,"primary Beat"),placeholderText),_ref17=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Section__WEBPACK_IMPORTED_MODULE_4__.a,{color:"tertiary"}),_ref18=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Section__WEBPACK_IMPORTED_MODULE_4__.a,{color:"secondary",korosType:"storm"},react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("h2",null,"Storm"),placeholderText),_ref19=react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Section__WEBPACK_IMPORTED_MODULE_4__.a,null,"This section has neither a heading or a koros."),Multiple=function(){return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,_ref8,placeholderImg,_ref9,_ref10,_ref11,_ref12,_ref13,_ref14,_ref15,_ref16,_ref17,_ref18,_ref19)};Multiple.story={name:"Multiple sections"};var Playground=function(){var sectionTitle=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.text)("Title","Lorem ipsum"),sectionText=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.text)("Text",placeholderText),color=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.radios)("Color",{plain:"plain",primary:"primary",secondary:"secondary",tertiary:"tertiary"},"plain"),korosType=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.radios)("Koros",{none:null,basic:"basic",beat:"beat",pulse:"pulse",wave:"wave",storm:"storm"},null);return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Section__WEBPACK_IMPORTED_MODULE_4__.a,{color:color,korosType:korosType},react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("h1",null,sectionTitle),react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("p",null,sectionText))};Playground.displayName="Playground",Playground.story={parameters:{previewTabs:{"storybook/docs/panel":{hidden:!0}},docs:{disable:!0}}},Plain.__docgenInfo={description:"",methods:[],displayName:"Plain"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/section/Section.stories.tsx"]={name:"Plain",docgenInfo:Plain.__docgenInfo,path:"src/components/section/Section.stories.tsx"}),Primary.__docgenInfo={description:"",methods:[],displayName:"Primary"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/section/Section.stories.tsx"]={name:"Primary",docgenInfo:Primary.__docgenInfo,path:"src/components/section/Section.stories.tsx"}),Secondary.__docgenInfo={description:"",methods:[],displayName:"Secondary"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/section/Section.stories.tsx"]={name:"Secondary",docgenInfo:Secondary.__docgenInfo,path:"src/components/section/Section.stories.tsx"}),Tertiary.__docgenInfo={description:"",methods:[],displayName:"Tertiary"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/section/Section.stories.tsx"]={name:"Tertiary",docgenInfo:Tertiary.__docgenInfo,path:"src/components/section/Section.stories.tsx"}),WithKoros.__docgenInfo={description:"",methods:[],displayName:"WithKoros"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/section/Section.stories.tsx"]={name:"WithKoros",docgenInfo:WithKoros.__docgenInfo,path:"src/components/section/Section.stories.tsx"}),Multiple.__docgenInfo={description:"",methods:[],displayName:"Multiple"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/section/Section.stories.tsx"]={name:"Multiple",docgenInfo:Multiple.__docgenInfo,path:"src/components/section/Section.stories.tsx"}),Playground.__docgenInfo={description:"",methods:[],displayName:"Playground"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/section/Section.stories.tsx"]={name:"Playground",docgenInfo:Playground.__docgenInfo,path:"src/components/section/Section.stories.tsx"})},1540:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"ReadOnly",(function(){return ReadOnly})),__webpack_require__.d(__webpack_exports__,"Disabled",(function(){return Disabled})),__webpack_require__.d(__webpack_exports__,"Invalid",(function(){return Invalid})),__webpack_require__.d(__webpack_exports__,"WithLabelHidden",(function(){return WithLabelHidden})),__webpack_require__.d(__webpack_exports__,"WithTooltip",(function(){return WithTooltip})),__webpack_require__.d(__webpack_exports__,"NumberInput",(function(){return NumberInput})),__webpack_require__.d(__webpack_exports__,"UsingRef",(function(){return UsingRef})),__webpack_require__.d(__webpack_exports__,"Playground",(function(){return Playground}));__webpack_require__(3);var _parameters,_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(17),react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__),_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(1),_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(14),_TextInput__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(67),_button_Button__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(54),textInputProps={helperText:"Assistive text",id:"hdsInput",labelText:"Label",placeholder:"Placeholder"},_ref=react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_4__.Title,null,"Props"),_ref2=react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_4__.Subtitle,null,"Props, which are not mentioned below, are passed to the native element"),_ref3=react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_4__.Props,null),_ref4=react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_storybook_addon_docs_dist_blocks__WEBPACK_IMPORTED_MODULE_4__.Stories,{title:"Examples",includePrimary:!0});__webpack_exports__.default={component:_TextInput__WEBPACK_IMPORTED_MODULE_5__.a,title:"Components/TextInput",decorators:[_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.withKnobs,function(storyFn){return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div",{style:{maxWidth:"400px"}},storyFn())}],parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import React, { useRef } from \'react\';\\nimport { boolean, text, withKnobs } from \'@storybook/addon-knobs\';\\nimport { Props, Stories, Subtitle, Title } from \'@storybook/addon-docs/dist/blocks\';\\n\\nimport TextInput from \'./TextInput\';\\nimport Button from \'../button/Button\';\\n\\nconst textInputProps = {\\n  helperText: \'Assistive text\',\\n  id: \'hdsInput\',\\n  labelText: \'Label\',\\n  placeholder: \'Placeholder\',\\n};\\n\\nexport default {\\n  component: TextInput,\\n  title: \'Components/TextInput\',\\n  decorators: [withKnobs, (storyFn) => <div style={{ maxWidth: \'400px\' }}>{storyFn()}</div>],\\n  parameters: {\\n    docs: {\\n      page: () => (\\n        <>\\n          <Title>Props</Title>\\n          <Subtitle>Props, which are not mentioned below, are passed to the native element</Subtitle>\\n          <Props />\\n          <Stories title=\\"Examples\\" includePrimary />\\n        </>\\n      ),\\n    },\\n  },\\n};\\n\\nexport const Default = () => <TextInput {...textInputProps} />;\\n\\nexport const ReadOnly = () => <TextInput {...textInputProps} readOnly defaultValue=\\"Text input value\\" />;\\n\\nReadOnly.story = {\\n  name: \'Read-only\',\\n};\\n\\nexport const Disabled = () => <TextInput {...textInputProps} disabled defaultValue=\\"Text input value\\" />;\\n\\nexport const Invalid = () => <TextInput {...textInputProps} invalid helperText=\\"Error text\\" />;\\n\\nexport const WithLabelHidden = () => <TextInput {...textInputProps} hideLabel />;\\n\\nWithLabelHidden.story = {\\n  name: \'With label hidden\',\\n};\\n\\nexport const WithTooltip = () => (\\n  <TextInput\\n    {...textInputProps}\\n    tooltipLabel=\\"tooltip label\\"\\n    tooltipText=\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\\"\\n    tooltipOpenButtonLabelText=\\"show tooltip\\"\\n    tooltipCloseButtonLabelText=\\"close tooltip\\"\\n  />\\n);\\n\\nWithTooltip.story = {\\n  name: \'With tooltip\',\\n};\\n\\nexport const NumberInput = () => <TextInput {...textInputProps} type=\\"number\\" />;\\n\\nexport const UsingRef = () => {\\n  const ref = useRef(null);\\n\\n  return (\\n    <>\\n      <Button onClick={() => ref?.current?.focus()} style={{ marginBottom: \'1rem\' }} theme=\\"black\\" size=\\"small\\">\\n        Focus input\\n      </Button>\\n      <TextInput {...textInputProps} ref={ref} />\\n    </>\\n  );\\n};\\n\\nUsingRef.story = {\\n  name: \'Using ref\',\\n};\\n\\nexport const Playground = () => {\\n  const groupGeneral = \'General\';\\n  const groupTooltip = \'Tooltip\';\\n\\n  const label = text(\'Label\', textInputProps.labelText, groupGeneral);\\n  const placeholder = text(\'Placeholder\', textInputProps.placeholder, groupGeneral);\\n  const helperText = text(\'Helper text\', textInputProps.helperText, groupGeneral);\\n  const type = text(\'Type\', \'text\', groupGeneral);\\n  const disabled = boolean(\'Disabled\', false, groupGeneral);\\n  const readOnly = boolean(\'Read-only\', false, groupGeneral);\\n  const invalid = boolean(\'Invalid\', false, groupGeneral);\\n  const hideLabel = boolean(\'Hide label\', false, groupGeneral);\\n\\n  const tooltipLabel = text(\'Tooltip label\', \'Tooltip label\', groupTooltip);\\n  const tooltipText = text(\\n    \'Tooltip text\',\\n    \'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\',\\n    groupTooltip,\\n  );\\n  const tooltipOpenButtonLabelText = text(\'Tooltip open label\', \'Show tooltip\', groupTooltip);\\n  const tooltipCloseButtonLabelText = text(\'Tooltip close label\', \'Close tooltip\', groupTooltip);\\n\\n  return (\\n    <TextInput\\n      {...textInputProps}\\n      type={type}\\n      labelText={label}\\n      helperText={helperText}\\n      placeholder={placeholder}\\n      readOnly={readOnly}\\n      disabled={disabled}\\n      invalid={invalid}\\n      hideLabel={hideLabel}\\n      tooltipLabel={tooltipLabel}\\n      tooltipText={tooltipText}\\n      tooltipOpenButtonLabelText={tooltipOpenButtonLabelText}\\n      tooltipCloseButtonLabelText={tooltipCloseButtonLabelText}\\n    />\\n  );\\n};\\n\\nPlayground.story = {\\n  parameters: {\\n    previewTabs: {\\n      \'storybook/docs/panel\': {\\n        hidden: true,\\n      },\\n    },\\n    docs: {\\n      disable: true,\\n    },\\n  },\\n};\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"components-textinput--default":{"startLoc":{"col":23,"line":33},"endLoc":{"col":62,"line":33},"startBody":{"col":23,"line":33},"endBody":{"col":62,"line":33}},"components-textinput--read-only":{"startLoc":{"col":24,"line":35},"endLoc":{"col":104,"line":35},"startBody":{"col":24,"line":35},"endBody":{"col":104,"line":35}},"components-textinput--disabled":{"startLoc":{"col":24,"line":41},"endLoc":{"col":104,"line":41},"startBody":{"col":24,"line":41},"endBody":{"col":104,"line":41}},"components-textinput--invalid":{"startLoc":{"col":23,"line":43},"endLoc":{"col":94,"line":43},"startBody":{"col":23,"line":43},"endBody":{"col":94,"line":43}},"components-textinput--with-label-hidden":{"startLoc":{"col":31,"line":45},"endLoc":{"col":80,"line":45},"startBody":{"col":31,"line":45},"endBody":{"col":80,"line":45}},"components-textinput--with-tooltip":{"startLoc":{"col":27,"line":51},"endLoc":{"col":1,"line":59},"startBody":{"col":27,"line":51},"endBody":{"col":1,"line":59}},"components-textinput--number-input":{"startLoc":{"col":27,"line":65},"endLoc":{"col":80,"line":65},"startBody":{"col":27,"line":65},"endBody":{"col":80,"line":65}},"components-textinput--using-ref":{"startLoc":{"col":24,"line":67},"endLoc":{"col":1,"line":78},"startBody":{"col":24,"line":67},"endBody":{"col":1,"line":78}},"components-textinput--playground":{"startLoc":{"col":26,"line":84},"endLoc":{"col":1,"line":123},"startBody":{"col":26,"line":84},"endBody":{"col":1,"line":123}}};\n    \nimport React, { useRef } from \'react\';\nimport { boolean, text, withKnobs } from \'@storybook/addon-knobs\';\nimport { Props, Stories, Subtitle, Title } from \'@storybook/addon-docs/dist/blocks\';\n\nimport TextInput from \'./TextInput\';\nimport Button from \'../button/Button\';\n\nconst textInputProps = {\n  helperText: \'Assistive text\',\n  id: \'hdsInput\',\n  labelText: \'Label\',\n  placeholder: \'Placeholder\',\n};\n\nexport default {\n  component: TextInput,\n  title: \'Components/TextInput\',\n  decorators: [withKnobs, (storyFn) => <div style={{ maxWidth: \'400px\' }}>{storyFn()}</div>],\n  parameters: {"storySource":{"source":"import React, { useRef } from \'react\';\\nimport { boolean, text, withKnobs } from \'@storybook/addon-knobs\';\\nimport { Props, Stories, Subtitle, Title } from \'@storybook/addon-docs/dist/blocks\';\\n\\nimport TextInput from \'./TextInput\';\\nimport Button from \'../button/Button\';\\n\\nconst textInputProps = {\\n  helperText: \'Assistive text\',\\n  id: \'hdsInput\',\\n  labelText: \'Label\',\\n  placeholder: \'Placeholder\',\\n};\\n\\nexport default {\\n  component: TextInput,\\n  title: \'Components/TextInput\',\\n  decorators: [withKnobs, (storyFn) => <div style={{ maxWidth: \'400px\' }}>{storyFn()}</div>],\\n  parameters: {\\n    docs: {\\n      page: () => (\\n        <>\\n          <Title>Props</Title>\\n          <Subtitle>Props, which are not mentioned below, are passed to the native element</Subtitle>\\n          <Props />\\n          <Stories title=\\"Examples\\" includePrimary />\\n        </>\\n      ),\\n    },\\n  },\\n};\\n\\nexport const Default = () => <TextInput {...textInputProps} />;\\n\\nexport const ReadOnly = () => <TextInput {...textInputProps} readOnly defaultValue=\\"Text input value\\" />;\\n\\nReadOnly.story = {\\n  name: \'Read-only\',\\n};\\n\\nexport const Disabled = () => <TextInput {...textInputProps} disabled defaultValue=\\"Text input value\\" />;\\n\\nexport const Invalid = () => <TextInput {...textInputProps} invalid helperText=\\"Error text\\" />;\\n\\nexport const WithLabelHidden = () => <TextInput {...textInputProps} hideLabel />;\\n\\nWithLabelHidden.story = {\\n  name: \'With label hidden\',\\n};\\n\\nexport const WithTooltip = () => (\\n  <TextInput\\n    {...textInputProps}\\n    tooltipLabel=\\"tooltip label\\"\\n    tooltipText=\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\\"\\n    tooltipOpenButtonLabelText=\\"show tooltip\\"\\n    tooltipCloseButtonLabelText=\\"close tooltip\\"\\n  />\\n);\\n\\nWithTooltip.story = {\\n  name: \'With tooltip\',\\n};\\n\\nexport const NumberInput = () => <TextInput {...textInputProps} type=\\"number\\" />;\\n\\nexport const UsingRef = () => {\\n  const ref = useRef(null);\\n\\n  return (\\n    <>\\n      <Button onClick={() => ref?.current?.focus()} style={{ marginBottom: \'1rem\' }} theme=\\"black\\" size=\\"small\\">\\n        Focus input\\n      </Button>\\n      <TextInput {...textInputProps} ref={ref} />\\n    </>\\n  );\\n};\\n\\nUsingRef.story = {\\n  name: \'Using ref\',\\n};\\n\\nexport const Playground = () => {\\n  const groupGeneral = \'General\';\\n  const groupTooltip = \'Tooltip\';\\n\\n  const label = text(\'Label\', textInputProps.labelText, groupGeneral);\\n  const placeholder = text(\'Placeholder\', textInputProps.placeholder, groupGeneral);\\n  const helperText = text(\'Helper text\', textInputProps.helperText, groupGeneral);\\n  const type = text(\'Type\', \'text\', groupGeneral);\\n  const disabled = boolean(\'Disabled\', false, groupGeneral);\\n  const readOnly = boolean(\'Read-only\', false, groupGeneral);\\n  const invalid = boolean(\'Invalid\', false, groupGeneral);\\n  const hideLabel = boolean(\'Hide label\', false, groupGeneral);\\n\\n  const tooltipLabel = text(\'Tooltip label\', \'Tooltip label\', groupTooltip);\\n  const tooltipText = text(\\n    \'Tooltip text\',\\n    \'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\',\\n    groupTooltip,\\n  );\\n  const tooltipOpenButtonLabelText = text(\'Tooltip open label\', \'Show tooltip\', groupTooltip);\\n  const tooltipCloseButtonLabelText = text(\'Tooltip close label\', \'Close tooltip\', groupTooltip);\\n\\n  return (\\n    <TextInput\\n      {...textInputProps}\\n      type={type}\\n      labelText={label}\\n      helperText={helperText}\\n      placeholder={placeholder}\\n      readOnly={readOnly}\\n      disabled={disabled}\\n      invalid={invalid}\\n      hideLabel={hideLabel}\\n      tooltipLabel={tooltipLabel}\\n      tooltipText={tooltipText}\\n      tooltipOpenButtonLabelText={tooltipOpenButtonLabelText}\\n      tooltipCloseButtonLabelText={tooltipCloseButtonLabelText}\\n    />\\n  );\\n};\\n\\nPlayground.story = {\\n  parameters: {\\n    previewTabs: {\\n      \'storybook/docs/panel\': {\\n        hidden: true,\\n      },\\n    },\\n    docs: {\\n      disable: true,\\n    },\\n  },\\n};\\n","locationsMap":{"components-textinput--default":{"startLoc":{"col":23,"line":33},"endLoc":{"col":62,"line":33},"startBody":{"col":23,"line":33},"endBody":{"col":62,"line":33}},"components-textinput--read-only":{"startLoc":{"col":24,"line":35},"endLoc":{"col":104,"line":35},"startBody":{"col":24,"line":35},"endBody":{"col":104,"line":35}},"components-textinput--disabled":{"startLoc":{"col":24,"line":41},"endLoc":{"col":104,"line":41},"startBody":{"col":24,"line":41},"endBody":{"col":104,"line":41}},"components-textinput--invalid":{"startLoc":{"col":23,"line":43},"endLoc":{"col":94,"line":43},"startBody":{"col":23,"line":43},"endBody":{"col":94,"line":43}},"components-textinput--with-label-hidden":{"startLoc":{"col":31,"line":45},"endLoc":{"col":80,"line":45},"startBody":{"col":31,"line":45},"endBody":{"col":80,"line":45}},"components-textinput--with-tooltip":{"startLoc":{"col":27,"line":51},"endLoc":{"col":1,"line":59},"startBody":{"col":27,"line":51},"endBody":{"col":1,"line":59}},"components-textinput--number-input":{"startLoc":{"col":27,"line":65},"endLoc":{"col":80,"line":65},"startBody":{"col":27,"line":65},"endBody":{"col":80,"line":65}},"components-textinput--using-ref":{"startLoc":{"col":24,"line":67},"endLoc":{"col":1,"line":78},"startBody":{"col":24,"line":67},"endBody":{"col":1,"line":78}},"components-textinput--playground":{"startLoc":{"col":26,"line":84},"endLoc":{"col":1,"line":123},"startBody":{"col":26,"line":84},"endBody":{"col":1,"line":123}}}},\n    docs: {\n      page: () => (\n        <>\n          <Title>Props</Title>\n          <Subtitle>Props, which are not mentioned below, are passed to the native element</Subtitle>\n          <Props />\n          <Stories title="Examples" includePrimary />\n        </>\n      ),\n    },\n  },\n};\n\nexport const Default = () => <TextInput {...textInputProps} />;;\n\nexport const ReadOnly = () => <TextInput {...textInputProps} readOnly defaultValue="Text input value" />;;\n\nReadOnly.story = {\n  name: \'Read-only\',\n};\n\nexport const Disabled = () => <TextInput {...textInputProps} disabled defaultValue="Text input value" />;;\n\nexport const Invalid = () => <TextInput {...textInputProps} invalid helperText="Error text" />;;\n\nexport const WithLabelHidden = () => <TextInput {...textInputProps} hideLabel />;;\n\nWithLabelHidden.story = {\n  name: \'With label hidden\',\n};\n\nexport const WithTooltip = () => (\n  <TextInput\n    {...textInputProps}\n    tooltipLabel="tooltip label"\n    tooltipText="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris"\n    tooltipOpenButtonLabelText="show tooltip"\n    tooltipCloseButtonLabelText="close tooltip"\n  />\n);;\n\nWithTooltip.story = {\n  name: \'With tooltip\',\n};\n\nexport const NumberInput = () => <TextInput {...textInputProps} type="number" />;;\n\nexport const UsingRef = () => {\n  const ref = useRef(null);\n\n  return (\n    <>\n      <Button onClick={() => ref?.current?.focus()} style={{ marginBottom: \'1rem\' }} theme="black" size="small">\n        Focus input\n      </Button>\n      <TextInput {...textInputProps} ref={ref} />\n    </>\n  );\n};;\n\nUsingRef.story = {\n  name: \'Using ref\',\n};\n\nexport const Playground = () => {\n  const groupGeneral = \'General\';\n  const groupTooltip = \'Tooltip\';\n\n  const label = text(\'Label\', textInputProps.labelText, groupGeneral);\n  const placeholder = text(\'Placeholder\', textInputProps.placeholder, groupGeneral);\n  const helperText = text(\'Helper text\', textInputProps.helperText, groupGeneral);\n  const type = text(\'Type\', \'text\', groupGeneral);\n  const disabled = boolean(\'Disabled\', false, groupGeneral);\n  const readOnly = boolean(\'Read-only\', false, groupGeneral);\n  const invalid = boolean(\'Invalid\', false, groupGeneral);\n  const hideLabel = boolean(\'Hide label\', false, groupGeneral);\n\n  const tooltipLabel = text(\'Tooltip label\', \'Tooltip label\', groupTooltip);\n  const tooltipText = text(\n    \'Tooltip text\',\n    \'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\',\n    groupTooltip,\n  );\n  const tooltipOpenButtonLabelText = text(\'Tooltip open label\', \'Show tooltip\', groupTooltip);\n  const tooltipCloseButtonLabelText = text(\'Tooltip close label\', \'Close tooltip\', groupTooltip);\n\n  return (\n    <TextInput\n      {...textInputProps}\n      type={type}\n      labelText={label}\n      helperText={helperText}\n      placeholder={placeholder}\n      readOnly={readOnly}\n      disabled={disabled}\n      invalid={invalid}\n      hideLabel={hideLabel}\n      tooltipLabel={tooltipLabel}\n      tooltipText={tooltipText}\n      tooltipOpenButtonLabelText={tooltipOpenButtonLabelText}\n      tooltipCloseButtonLabelText={tooltipCloseButtonLabelText}\n    />\n  );\n};\n\nPlayground.story = {\n  parameters: {\n    previewTabs: {\n      \'storybook/docs/panel\': {\n        hidden: true,\n      },\n    },\n    docs: {\n      disable: true,\n    },\n  },\n};\n',locationsMap:{"components-textinput--default":{startLoc:{col:23,line:41},endLoc:{col:62,line:41},startBody:{col:23,line:41},endBody:{col:62,line:41}},"components-textinput--read-only":{startLoc:{col:24,line:43},endLoc:{col:104,line:43},startBody:{col:24,line:43},endBody:{col:104,line:43}},"components-textinput--disabled":{startLoc:{col:24,line:49},endLoc:{col:104,line:49},startBody:{col:24,line:49},endBody:{col:104,line:49}},"components-textinput--invalid":{startLoc:{col:23,line:51},endLoc:{col:94,line:51},startBody:{col:23,line:51},endBody:{col:94,line:51}},"components-textinput--with-label-hidden":{startLoc:{col:31,line:53},endLoc:{col:80,line:53},startBody:{col:31,line:53},endBody:{col:80,line:53}},"components-textinput--with-tooltip":{startLoc:{col:27,line:59},endLoc:{col:1,line:67},startBody:{col:27,line:59},endBody:{col:1,line:67}},"components-textinput--number-input":{startLoc:{col:27,line:73},endLoc:{col:80,line:73},startBody:{col:27,line:73},endBody:{col:80,line:73}},"components-textinput--using-ref":{startLoc:{col:24,line:75},endLoc:{col:1,line:86},startBody:{col:24,line:75},endBody:{col:1,line:86}},"components-textinput--playground":{startLoc:{col:26,line:92},endLoc:{col:1,line:131},startBody:{col:26,line:92},endBody:{col:1,line:131}}}}},Object(_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__.a)(_parameters,"storySource",{source:"import React, { useRef } from 'react';\nimport { boolean, text, withKnobs } from '@storybook/addon-knobs';\nimport { Props, Stories, Subtitle, Title } from '@storybook/addon-docs/dist/blocks';\n\nimport TextInput from './TextInput';\nimport Button from '../button/Button';\n\nconst textInputProps = {\n  helperText: 'Assistive text',\n  id: 'hdsInput',\n  labelText: 'Label',\n  placeholder: 'Placeholder',\n};\n\nexport default {\n  component: TextInput,\n  title: 'Components/TextInput',\n  decorators: [withKnobs, (storyFn) => <div style={{ maxWidth: '400px' }}>{storyFn()}</div>],\n  parameters: {\n    docs: {\n      page: () => (\n        <>\n          <Title>Props</Title>\n          <Subtitle>Props, which are not mentioned below, are passed to the native element</Subtitle>\n          <Props />\n          <Stories title=\"Examples\" includePrimary />\n        </>\n      ),\n    },\n  },\n};\n\nexport const Default = () => <TextInput {...textInputProps} />;\n\nexport const ReadOnly = () => <TextInput {...textInputProps} readOnly defaultValue=\"Text input value\" />;\n\nReadOnly.story = {\n  name: 'Read-only',\n};\n\nexport const Disabled = () => <TextInput {...textInputProps} disabled defaultValue=\"Text input value\" />;\n\nexport const Invalid = () => <TextInput {...textInputProps} invalid helperText=\"Error text\" />;\n\nexport const WithLabelHidden = () => <TextInput {...textInputProps} hideLabel />;\n\nWithLabelHidden.story = {\n  name: 'With label hidden',\n};\n\nexport const WithTooltip = () => (\n  <TextInput\n    {...textInputProps}\n    tooltipLabel=\"tooltip label\"\n    tooltipText=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\"\n    tooltipOpenButtonLabelText=\"show tooltip\"\n    tooltipCloseButtonLabelText=\"close tooltip\"\n  />\n);\n\nWithTooltip.story = {\n  name: 'With tooltip',\n};\n\nexport const NumberInput = () => <TextInput {...textInputProps} type=\"number\" />;\n\nexport const UsingRef = () => {\n  const ref = useRef(null);\n\n  return (\n    <>\n      <Button onClick={() => ref?.current?.focus()} style={{ marginBottom: '1rem' }} theme=\"black\" size=\"small\">\n        Focus input\n      </Button>\n      <TextInput {...textInputProps} ref={ref} />\n    </>\n  );\n};\n\nUsingRef.story = {\n  name: 'Using ref',\n};\n\nexport const Playground = () => {\n  const groupGeneral = 'General';\n  const groupTooltip = 'Tooltip';\n\n  const label = text('Label', textInputProps.labelText, groupGeneral);\n  const placeholder = text('Placeholder', textInputProps.placeholder, groupGeneral);\n  const helperText = text('Helper text', textInputProps.helperText, groupGeneral);\n  const type = text('Type', 'text', groupGeneral);\n  const disabled = boolean('Disabled', false, groupGeneral);\n  const readOnly = boolean('Read-only', false, groupGeneral);\n  const invalid = boolean('Invalid', false, groupGeneral);\n  const hideLabel = boolean('Hide label', false, groupGeneral);\n\n  const tooltipLabel = text('Tooltip label', 'Tooltip label', groupTooltip);\n  const tooltipText = text(\n    'Tooltip text',\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\n    groupTooltip,\n  );\n  const tooltipOpenButtonLabelText = text('Tooltip open label', 'Show tooltip', groupTooltip);\n  const tooltipCloseButtonLabelText = text('Tooltip close label', 'Close tooltip', groupTooltip);\n\n  return (\n    <TextInput\n      {...textInputProps}\n      type={type}\n      labelText={label}\n      helperText={helperText}\n      placeholder={placeholder}\n      readOnly={readOnly}\n      disabled={disabled}\n      invalid={invalid}\n      hideLabel={hideLabel}\n      tooltipLabel={tooltipLabel}\n      tooltipText={tooltipText}\n      tooltipOpenButtonLabelText={tooltipOpenButtonLabelText}\n      tooltipCloseButtonLabelText={tooltipCloseButtonLabelText}\n    />\n  );\n};\n\nPlayground.story = {\n  parameters: {\n    previewTabs: {\n      'storybook/docs/panel': {\n        hidden: true,\n      },\n    },\n    docs: {\n      disable: true,\n    },\n  },\n};\n",locationsMap:{"components-textinput--default":{startLoc:{col:23,line:33},endLoc:{col:62,line:33},startBody:{col:23,line:33},endBody:{col:62,line:33}},"components-textinput--read-only":{startLoc:{col:24,line:35},endLoc:{col:104,line:35},startBody:{col:24,line:35},endBody:{col:104,line:35}},"components-textinput--disabled":{startLoc:{col:24,line:41},endLoc:{col:104,line:41},startBody:{col:24,line:41},endBody:{col:104,line:41}},"components-textinput--invalid":{startLoc:{col:23,line:43},endLoc:{col:94,line:43},startBody:{col:23,line:43},endBody:{col:94,line:43}},"components-textinput--with-label-hidden":{startLoc:{col:31,line:45},endLoc:{col:80,line:45},startBody:{col:31,line:45},endBody:{col:80,line:45}},"components-textinput--with-tooltip":{startLoc:{col:27,line:51},endLoc:{col:1,line:59},startBody:{col:27,line:51},endBody:{col:1,line:59}},"components-textinput--number-input":{startLoc:{col:27,line:65},endLoc:{col:80,line:65},startBody:{col:27,line:65},endBody:{col:80,line:65}},"components-textinput--using-ref":{startLoc:{col:24,line:67},endLoc:{col:1,line:78},startBody:{col:24,line:67},endBody:{col:1,line:78}},"components-textinput--playground":{startLoc:{col:26,line:84},endLoc:{col:1,line:123},startBody:{col:26,line:84},endBody:{col:1,line:123}}}}),Object(_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__.a)(_parameters,"docs",{page:function page(){return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment,null,_ref,_ref2,_ref3,_ref4)}}),_parameters)};var Default=function(){return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_TextInput__WEBPACK_IMPORTED_MODULE_5__.a,textInputProps)};Default.displayName="Default";var ReadOnly=function(){return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_TextInput__WEBPACK_IMPORTED_MODULE_5__.a,Object.assign({},textInputProps,{readOnly:!0,defaultValue:"Text input value"}))};ReadOnly.displayName="ReadOnly",ReadOnly.story={name:"Read-only"};var Disabled=function(){return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_TextInput__WEBPACK_IMPORTED_MODULE_5__.a,Object.assign({},textInputProps,{disabled:!0,defaultValue:"Text input value"}))};Disabled.displayName="Disabled";var Invalid=function(){return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_TextInput__WEBPACK_IMPORTED_MODULE_5__.a,Object.assign({},textInputProps,{invalid:!0,helperText:"Error text"}))};Invalid.displayName="Invalid";var WithLabelHidden=function(){return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_TextInput__WEBPACK_IMPORTED_MODULE_5__.a,Object.assign({},textInputProps,{hideLabel:!0}))};WithLabelHidden.displayName="WithLabelHidden",WithLabelHidden.story={name:"With label hidden"};var WithTooltip=function(){return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_TextInput__WEBPACK_IMPORTED_MODULE_5__.a,Object.assign({},textInputProps,{tooltipLabel:"tooltip label",tooltipText:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris",tooltipOpenButtonLabelText:"show tooltip",tooltipCloseButtonLabelText:"close tooltip"}))};WithTooltip.displayName="WithTooltip",WithTooltip.story={name:"With tooltip"};var NumberInput=function(){return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_TextInput__WEBPACK_IMPORTED_MODULE_5__.a,Object.assign({},textInputProps,{type:"number"}))};NumberInput.displayName="NumberInput";var UsingRef=function(){var ref=Object(react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment,null,react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_button_Button__WEBPACK_IMPORTED_MODULE_6__.a,{onClick:function onClick(){var _ref$current;return null==ref||null===(_ref$current=ref.current)||void 0===_ref$current?void 0:_ref$current.focus()},style:{marginBottom:"1rem"},theme:"black",size:"small"},"Focus input"),react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_TextInput__WEBPACK_IMPORTED_MODULE_5__.a,Object.assign({},textInputProps,{ref:ref})))};UsingRef.story={name:"Using ref"};var Playground=function(){var label=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.text)("Label",textInputProps.labelText,"General"),placeholder=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.text)("Placeholder",textInputProps.placeholder,"General"),helperText=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.text)("Helper text",textInputProps.helperText,"General"),type=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.text)("Type","text","General"),disabled=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.boolean)("Disabled",!1,"General"),readOnly=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.boolean)("Read-only",!1,"General"),invalid=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.boolean)("Invalid",!1,"General"),hideLabel=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.boolean)("Hide label",!1,"General"),tooltipLabel=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.text)("Tooltip label","Tooltip label","Tooltip"),tooltipText=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.text)("Tooltip text","Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.","Tooltip"),tooltipOpenButtonLabelText=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.text)("Tooltip open label","Show tooltip","Tooltip"),tooltipCloseButtonLabelText=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_3__.text)("Tooltip close label","Close tooltip","Tooltip");return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_TextInput__WEBPACK_IMPORTED_MODULE_5__.a,Object.assign({},textInputProps,{type:type,labelText:label,helperText:helperText,placeholder:placeholder,readOnly:readOnly,disabled:disabled,invalid:invalid,hideLabel:hideLabel,tooltipLabel:tooltipLabel,tooltipText:tooltipText,tooltipOpenButtonLabelText:tooltipOpenButtonLabelText,tooltipCloseButtonLabelText:tooltipCloseButtonLabelText}))};Playground.displayName="Playground",Playground.story={parameters:{previewTabs:{"storybook/docs/panel":{hidden:!0}},docs:{disable:!0}}},Default.__docgenInfo={description:"",methods:[],displayName:"Default"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/textinput/TextInput.stories.tsx"]={name:"Default",docgenInfo:Default.__docgenInfo,path:"src/components/textinput/TextInput.stories.tsx"}),ReadOnly.__docgenInfo={description:"",methods:[],displayName:"ReadOnly"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/textinput/TextInput.stories.tsx"]={name:"ReadOnly",docgenInfo:ReadOnly.__docgenInfo,path:"src/components/textinput/TextInput.stories.tsx"}),Disabled.__docgenInfo={description:"",methods:[],displayName:"Disabled"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/textinput/TextInput.stories.tsx"]={name:"Disabled",docgenInfo:Disabled.__docgenInfo,path:"src/components/textinput/TextInput.stories.tsx"}),Invalid.__docgenInfo={description:"",methods:[],displayName:"Invalid"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/textinput/TextInput.stories.tsx"]={name:"Invalid",docgenInfo:Invalid.__docgenInfo,path:"src/components/textinput/TextInput.stories.tsx"}),WithLabelHidden.__docgenInfo={description:"",methods:[],displayName:"WithLabelHidden"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/textinput/TextInput.stories.tsx"]={name:"WithLabelHidden",docgenInfo:WithLabelHidden.__docgenInfo,path:"src/components/textinput/TextInput.stories.tsx"}),WithTooltip.__docgenInfo={description:"",methods:[],displayName:"WithTooltip"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/textinput/TextInput.stories.tsx"]={name:"WithTooltip",docgenInfo:WithTooltip.__docgenInfo,path:"src/components/textinput/TextInput.stories.tsx"}),NumberInput.__docgenInfo={description:"",methods:[],displayName:"NumberInput"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/textinput/TextInput.stories.tsx"]={name:"NumberInput",docgenInfo:NumberInput.__docgenInfo,path:"src/components/textinput/TextInput.stories.tsx"}),UsingRef.__docgenInfo={description:"",methods:[],displayName:"UsingRef"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/textinput/TextInput.stories.tsx"]={name:"UsingRef",docgenInfo:UsingRef.__docgenInfo,path:"src/components/textinput/TextInput.stories.tsx"}),Playground.__docgenInfo={description:"",methods:[],displayName:"Playground"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/textinput/TextInput.stories.tsx"]={name:"Playground",docgenInfo:Playground.__docgenInfo,path:"src/components/textinput/TextInput.stories.tsx"})},1541:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){__webpack_require__(50),__webpack_require__(16),__webpack_require__(10),__webpack_require__(51),__webpack_require__(22);var _home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(60),path__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(571),path__WEBPACK_IMPORTED_MODULE_6___default=__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_6__),react__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_7___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_7__),_storybook_react__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(148),__STORY__="import path from 'path';\n\nimport React from 'react';\nimport { storiesOf } from '@storybook/react';\n\nconst Wrapper = ({ children, size }) => (\n  <div\n    style={{\n      margin: '10px',\n      width: size,\n      height: size,\n      display: 'inline-block',\n      verticalAlign: 'middle',\n    }}\n  >\n    {children}\n  </div>\n);\n\nconst stories = storiesOf('Components/Icons', module);\n\nconst makeSvgStyleRules = (color: string) => ({\n  fill: color,\n  padding: '10px',\n});\n\nconst req = require.context('.', false, /^.\\/Icon.*.tsx$/);\nreq.keys().forEach((fileName, index) => {\n  const Component = req(fileName).default;\n  const componentName = path.basename(fileName, '.tsx');\n  Component.displayName = componentName;\n\n  if (index === 0) {\n    stories.addParameters({\n      component: Component,\n      docs: {\n        disable: true,\n      },\n    });\n  }\n\n  stories.add(componentName, () => (\n    <>\n      <div style={makeSvgStyleRules('#111')}>\n        <Wrapper size=\"200px\">\n          <Component />\n        </Wrapper>\n        <Wrapper size=\"100px\">\n          <Component />\n        </Wrapper>\n        <Wrapper size=\"50px\">\n          <Component />\n        </Wrapper>\n        <Wrapper size=\"25px\">\n          <Component />\n        </Wrapper>\n      </div>\n      <div style={{ background: '#111', ...makeSvgStyleRules('#fff') }}>\n        <Wrapper size=\"200px\">\n          <Component />\n        </Wrapper>\n        <Wrapper size=\"100px\">\n          <Component />\n        </Wrapper>\n        <Wrapper size=\"50px\">\n          <Component />\n        </Wrapper>\n        <Wrapper size=\"25px\">\n          <Component />\n        </Wrapper>\n      </div>\n    </>\n  ));\n});\n",__LOCATIONS_MAP__={},Wrapper=function(_ref){var children=_ref.children,size=_ref.size;return react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("div",{style:{margin:"10px",width:size,height:size,display:"inline-block",verticalAlign:"middle"}},children)};Wrapper.displayName="Wrapper";var stories=Object(_storybook_react__WEBPACK_IMPORTED_MODULE_8__.storiesOf)("Components/Icons",module).addParameters({storySource:{source:__STORY__,locationsMap:__LOCATIONS_MAP__}}).addParameters({storySource:{source:__STORY__,locationsMap:__LOCATIONS_MAP__}}),makeSvgStyleRules=function(color){return{fill:color,padding:"10px"}},req=__webpack_require__(1543);req.keys().forEach((function(fileName,index){var Component=req(fileName).default,componentName=path__WEBPACK_IMPORTED_MODULE_6___default.a.basename(fileName,".tsx");Component.displayName=componentName,0===index&&stories.addParameters({component:Component,docs:{disable:!0}});var _ref2=react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Wrapper,{size:"200px"},react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Component,null)),_ref3=react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Wrapper,{size:"100px"},react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Component,null)),_ref4=react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Wrapper,{size:"50px"},react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Component,null)),_ref5=react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Wrapper,{size:"25px"},react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Component,null)),_ref6=react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Wrapper,{size:"200px"},react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Component,null)),_ref7=react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Wrapper,{size:"100px"},react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Component,null)),_ref8=react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Wrapper,{size:"50px"},react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Component,null)),_ref9=react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Wrapper,{size:"25px"},react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(Component,null));stories.add(componentName,(function(){return react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_7___default.a.Fragment,null,react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("div",{style:makeSvgStyleRules("#111")},_ref2,_ref3,_ref4,_ref5),react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement("div",{style:Object(_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_5__.a)({background:"#111"},makeSvgStyleRules("#fff"))},_ref6,_ref7,_ref8,_ref9))}))}))}.call(this,__webpack_require__(1542)(module))},1543:function(module,exports,__webpack_require__){var map={"./IconAngleDown.tsx":349,"./IconAngleLeft.tsx":350,"./IconAngleRight.tsx":351,"./IconAngleUp.tsx":352,"./IconArrowLeft.tsx":353,"./IconArrowRight.tsx":354,"./IconAttention.tsx":355,"./IconBoots.tsx":356,"./IconCalendar.tsx":357,"./IconCalendarAdd.tsx":358,"./IconCheck.tsx":359,"./IconClose.tsx":360,"./IconDirections.tsx":361,"./IconDoubleLike.tsx":362,"./IconFemale.tsx":363,"./IconFill.tsx":364,"./IconFood.tsx":365,"./IconHouse.tsx":366,"./IconInfo.tsx":367,"./IconLanguage.tsx":368,"./IconLips.tsx":369,"./IconLocation.tsx":370,"./IconLock.tsx":371,"./IconMenu.tsx":372,"./IconPerson.tsx":373,"./IconRead.tsx":374,"./IconSearch.tsx":375,"./IconShare.tsx":376,"./IconSmile.tsx":377,"./IconTicket.tsx":378,"./IconTooltip.tsx":379,"./IconTree.tsx":380,"./IconVolume.tsx":381,"./IconWarning.tsx":382,"./IconWine.tsx":383};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1543},1547:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"Disabled",(function(){return Disabled})),__webpack_require__.d(__webpack_exports__,"Invalid",(function(){return Invalid})),__webpack_require__.d(__webpack_exports__,"WithLabelHidden",(function(){return WithLabelHidden})),__webpack_require__.d(__webpack_exports__,"Playground",(function(){return Playground}));__webpack_require__(3);var defineProperty=__webpack_require__(17),react=__webpack_require__(0),react_default=__webpack_require__.n(react),dist=__webpack_require__(1),blocks=__webpack_require__(14),objectWithoutProperties=__webpack_require__(99),TextInput_module=__webpack_require__(84),TextInput_module_default=__webpack_require__.n(TextInput_module),InputWrapper=__webpack_require__(240),TextArea=Object(react.forwardRef)((function(_ref,ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className,_ref$disabled=_ref.disabled,disabled=void 0!==_ref$disabled&&_ref$disabled,defaultValue=_ref.defaultValue,helperText=_ref.helperText,hideLabel=_ref.hideLabel,invalid=_ref.invalid,id=_ref.id,labelText=_ref.labelText,_ref$onChange=_ref.onChange,onChange=void 0===_ref$onChange?function(){return null}:_ref$onChange,style=_ref.style,tooltipLabel=_ref.tooltipLabel,tooltipText=_ref.tooltipText,tooltipOpenButtonLabelText=_ref.tooltipOpenButtonLabelText,tooltipCloseButtonLabelText=_ref.tooltipCloseButtonLabelText,rest=Object(objectWithoutProperties.a)(_ref,["className","disabled","defaultValue","helperText","hideLabel","invalid","id","labelText","onChange","style","tooltipLabel","tooltipText","tooltipOpenButtonLabelText","tooltipCloseButtonLabelText"]);return react_default.a.createElement(InputWrapper.a,Object.assign({id:id},{className:className,helperText:helperText,hideLabel:hideLabel,id:id,invalid:invalid,labelText:labelText,style:style,tooltipLabel:tooltipLabel,tooltipText:tooltipText,tooltipOpenButtonLabelText:tooltipOpenButtonLabelText,tooltipCloseButtonLabelText:tooltipCloseButtonLabelText}),react_default.a.createElement("textarea",Object.assign({className:TextInput_module_default.a.input,defaultValue:defaultValue,disabled:disabled,id:id,onChange:onChange,ref:ref},rest)))}));TextArea.__docgenInfo={description:"",methods:[],displayName:"TextArea",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the textarea"},disabled:{defaultValue:{value:"false",computed:!1},required:!1,tsType:{name:"boolean"},description:"If `true`, the textarea will be disabled"},onChange:{defaultValue:{value:"() => null",computed:!1},required:!1,tsType:{name:"ChangeEventHandler",elements:[{name:"HTMLTextAreaElement"}],raw:"ChangeEventHandler<HTMLTextAreaElement>"},description:"Callback fired when the state is changed"},defaultValue:{required:!1,tsType:{name:"string"},description:"The default textarea element value. Use when the component is not controlled"},helperText:{required:!1,tsType:{name:"string"},description:"The helper text content that will be shown below the textarea"},hideLabel:{required:!1,tsType:{name:"boolean"},description:"Hides the label above the textarea"},id:{required:!0,tsType:{name:"string"},description:"The id of the textarea element"},invalid:{required:!1,tsType:{name:"boolean"},description:"If `true`, the textarea and `helperText` will be displayed in an invalid state."},labelText:{required:!1,tsType:{name:"string"},description:"The label for the textarea"},placeholder:{required:!1,tsType:{name:"string"},description:"Short hint displayed in the textarea before the user enters a value"},style:{required:!1,tsType:{name:"CSSProperties"},description:"Override or extend the styles applied to the component. See text field [tokens](https://city-of-helsinki.github.io/helsinki-design-system/components/text-field#tokens) for available CSS variables"},tooltipLabel:{required:!1,tsType:{name:"string"},description:"The label of the tooltip"},tooltipText:{required:!1,tsType:{name:"string"},description:"The text content of the tooltip"},tooltipOpenButtonLabelText:{required:!1,tsType:{name:"string"},description:"The title for the tooltip open button"},tooltipCloseButtonLabelText:{required:!1,tsType:{name:"string"},description:"The title for the tooltip close button"},value:{required:!1,tsType:{name:"string"},description:"The value of the textarea element, required for a controlled component"},ref:{required:!1,tsType:{name:"RefObject",elements:[{name:"HTMLTextAreaElement"}],raw:"RefObject<HTMLTextAreaElement>"},description:"The `ref` is forwarded to the native textarea element."}}};var textinput_TextArea=TextArea;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/textinput/TextArea.tsx"]={name:"TextArea",docgenInfo:TextArea.__docgenInfo,path:"src/components/textinput/TextArea.tsx"});var _parameters,textAreaProps={helperText:"Assistive text",id:"textArea",labelText:"Label",placeholder:"Placeholder"},value="Lorem ipsum dolor sit amet, consectetur adipiscing elit.",TextArea_stories_ref=react_default.a.createElement(blocks.Title,null,"Props"),_ref2=react_default.a.createElement(blocks.Subtitle,null,"Props, which are not mentioned below, are passed to the native element"),_ref3=react_default.a.createElement(blocks.Props,null),_ref4=react_default.a.createElement(blocks.Stories,{title:"Examples",includePrimary:!0}),Default=(__webpack_exports__.default={component:textinput_TextArea,title:"Components/TextArea",decorators:[dist.withKnobs,function(storyFn){return react_default.a.createElement("div",{style:{maxWidth:"400px"}},storyFn())}],parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import React from \'react\';\\nimport { boolean, text, withKnobs } from \'@storybook/addon-knobs\';\\nimport { Props, Stories, Subtitle, Title } from \'@storybook/addon-docs/dist/blocks\';\\n\\nimport TextArea from \'./TextArea\';\\n\\nconst textAreaProps = {\\n  helperText: \'Assistive text\',\\n  id: \'textArea\',\\n  labelText: \'Label\',\\n  placeholder: \'Placeholder\',\\n};\\nconst value = \'Lorem ipsum dolor sit amet, consectetur adipiscing elit.\';\\n\\nexport default {\\n  component: TextArea,\\n  title: \'Components/TextArea\',\\n  decorators: [withKnobs, (storyFn) => <div style={{ maxWidth: \'400px\' }}>{storyFn()}</div>],\\n  parameters: {\\n    docs: {\\n      page: () => (\\n        <>\\n          <Title>Props</Title>\\n          <Subtitle>Props, which are not mentioned below, are passed to the native element</Subtitle>\\n          <Props />\\n          <Stories title=\\"Examples\\" includePrimary />\\n        </>\\n      ),\\n    },\\n  },\\n};\\n\\nexport const Default = () => <TextArea {...textAreaProps} />;\\n\\nexport const Disabled = () => <TextArea {...textAreaProps} disabled defaultValue={value} />;\\n\\nexport const Invalid = () => <TextArea {...textAreaProps} invalid helperText=\\"Error text\\" defaultValue={value} />;\\n\\nexport const WithLabelHidden = () => <TextArea {...textAreaProps} hideLabel defaultValue={value} />;\\n\\nWithLabelHidden.story = {\\n  name: \'With label hidden\',\\n};\\n\\nexport const Playground = () => {\\n  const groupGeneral = \'General\';\\n  const groupTooltip = \'Tooltip\';\\n\\n  const label = text(\'Label\', textAreaProps.labelText, groupGeneral);\\n  const placeholder = text(\'Placeholder\', textAreaProps.placeholder, groupGeneral);\\n  const helperText = text(\'Helper text\', textAreaProps.helperText, groupGeneral);\\n  const disabled = boolean(\'Disabled\', false, groupGeneral);\\n  const invalid = boolean(\'Invalid\', false, groupGeneral);\\n  const hideLabel = boolean(\'Hide label\', false, groupGeneral);\\n\\n  const tooltipLabel = text(\'Tooltip label\', \'Tooltip label\', groupTooltip);\\n  const tooltipText = text(\\n    \'Tooltip text\',\\n    \'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\',\\n    groupTooltip,\\n  );\\n  const tooltipOpenButtonLabelText = text(\'Tooltip open label\', \'Show tooltip\', groupTooltip);\\n  const tooltipCloseButtonLabelText = text(\'Tooltip close label\', \'Close tooltip\', groupTooltip);\\n\\n  return (\\n    <TextArea\\n      {...textAreaProps}\\n      labelText={label}\\n      helperText={helperText}\\n      placeholder={placeholder}\\n      disabled={disabled}\\n      invalid={invalid}\\n      hideLabel={hideLabel}\\n      tooltipLabel={tooltipLabel}\\n      tooltipText={tooltipText}\\n      tooltipOpenButtonLabelText={tooltipOpenButtonLabelText}\\n      tooltipCloseButtonLabelText={tooltipCloseButtonLabelText}\\n    />\\n  );\\n};\\n\\nPlayground.story = {\\n  parameters: {\\n    previewTabs: {\\n      \'storybook/docs/panel\': {\\n        hidden: true,\\n      },\\n    },\\n    docs: {\\n      disable: true,\\n    },\\n  },\\n};\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"components-textarea--default":{"startLoc":{"col":23,"line":33},"endLoc":{"col":60,"line":33},"startBody":{"col":23,"line":33},"endBody":{"col":60,"line":33}},"components-textarea--disabled":{"startLoc":{"col":24,"line":35},"endLoc":{"col":91,"line":35},"startBody":{"col":24,"line":35},"endBody":{"col":91,"line":35}},"components-textarea--invalid":{"startLoc":{"col":23,"line":37},"endLoc":{"col":113,"line":37},"startBody":{"col":23,"line":37},"endBody":{"col":113,"line":37}},"components-textarea--with-label-hidden":{"startLoc":{"col":31,"line":39},"endLoc":{"col":99,"line":39},"startBody":{"col":31,"line":39},"endBody":{"col":99,"line":39}},"components-textarea--playground":{"startLoc":{"col":26,"line":45},"endLoc":{"col":1,"line":80},"startBody":{"col":26,"line":45},"endBody":{"col":1,"line":80}}};\n    \nimport React from \'react\';\nimport { boolean, text, withKnobs } from \'@storybook/addon-knobs\';\nimport { Props, Stories, Subtitle, Title } from \'@storybook/addon-docs/dist/blocks\';\n\nimport TextArea from \'./TextArea\';\n\nconst textAreaProps = {\n  helperText: \'Assistive text\',\n  id: \'textArea\',\n  labelText: \'Label\',\n  placeholder: \'Placeholder\',\n};\nconst value = \'Lorem ipsum dolor sit amet, consectetur adipiscing elit.\';\n\nexport default {\n  component: TextArea,\n  title: \'Components/TextArea\',\n  decorators: [withKnobs, (storyFn) => <div style={{ maxWidth: \'400px\' }}>{storyFn()}</div>],\n  parameters: {"storySource":{"source":"import React from \'react\';\\nimport { boolean, text, withKnobs } from \'@storybook/addon-knobs\';\\nimport { Props, Stories, Subtitle, Title } from \'@storybook/addon-docs/dist/blocks\';\\n\\nimport TextArea from \'./TextArea\';\\n\\nconst textAreaProps = {\\n  helperText: \'Assistive text\',\\n  id: \'textArea\',\\n  labelText: \'Label\',\\n  placeholder: \'Placeholder\',\\n};\\nconst value = \'Lorem ipsum dolor sit amet, consectetur adipiscing elit.\';\\n\\nexport default {\\n  component: TextArea,\\n  title: \'Components/TextArea\',\\n  decorators: [withKnobs, (storyFn) => <div style={{ maxWidth: \'400px\' }}>{storyFn()}</div>],\\n  parameters: {\\n    docs: {\\n      page: () => (\\n        <>\\n          <Title>Props</Title>\\n          <Subtitle>Props, which are not mentioned below, are passed to the native element</Subtitle>\\n          <Props />\\n          <Stories title=\\"Examples\\" includePrimary />\\n        </>\\n      ),\\n    },\\n  },\\n};\\n\\nexport const Default = () => <TextArea {...textAreaProps} />;\\n\\nexport const Disabled = () => <TextArea {...textAreaProps} disabled defaultValue={value} />;\\n\\nexport const Invalid = () => <TextArea {...textAreaProps} invalid helperText=\\"Error text\\" defaultValue={value} />;\\n\\nexport const WithLabelHidden = () => <TextArea {...textAreaProps} hideLabel defaultValue={value} />;\\n\\nWithLabelHidden.story = {\\n  name: \'With label hidden\',\\n};\\n\\nexport const Playground = () => {\\n  const groupGeneral = \'General\';\\n  const groupTooltip = \'Tooltip\';\\n\\n  const label = text(\'Label\', textAreaProps.labelText, groupGeneral);\\n  const placeholder = text(\'Placeholder\', textAreaProps.placeholder, groupGeneral);\\n  const helperText = text(\'Helper text\', textAreaProps.helperText, groupGeneral);\\n  const disabled = boolean(\'Disabled\', false, groupGeneral);\\n  const invalid = boolean(\'Invalid\', false, groupGeneral);\\n  const hideLabel = boolean(\'Hide label\', false, groupGeneral);\\n\\n  const tooltipLabel = text(\'Tooltip label\', \'Tooltip label\', groupTooltip);\\n  const tooltipText = text(\\n    \'Tooltip text\',\\n    \'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\',\\n    groupTooltip,\\n  );\\n  const tooltipOpenButtonLabelText = text(\'Tooltip open label\', \'Show tooltip\', groupTooltip);\\n  const tooltipCloseButtonLabelText = text(\'Tooltip close label\', \'Close tooltip\', groupTooltip);\\n\\n  return (\\n    <TextArea\\n      {...textAreaProps}\\n      labelText={label}\\n      helperText={helperText}\\n      placeholder={placeholder}\\n      disabled={disabled}\\n      invalid={invalid}\\n      hideLabel={hideLabel}\\n      tooltipLabel={tooltipLabel}\\n      tooltipText={tooltipText}\\n      tooltipOpenButtonLabelText={tooltipOpenButtonLabelText}\\n      tooltipCloseButtonLabelText={tooltipCloseButtonLabelText}\\n    />\\n  );\\n};\\n\\nPlayground.story = {\\n  parameters: {\\n    previewTabs: {\\n      \'storybook/docs/panel\': {\\n        hidden: true,\\n      },\\n    },\\n    docs: {\\n      disable: true,\\n    },\\n  },\\n};\\n","locationsMap":{"components-textarea--default":{"startLoc":{"col":23,"line":33},"endLoc":{"col":60,"line":33},"startBody":{"col":23,"line":33},"endBody":{"col":60,"line":33}},"components-textarea--disabled":{"startLoc":{"col":24,"line":35},"endLoc":{"col":91,"line":35},"startBody":{"col":24,"line":35},"endBody":{"col":91,"line":35}},"components-textarea--invalid":{"startLoc":{"col":23,"line":37},"endLoc":{"col":113,"line":37},"startBody":{"col":23,"line":37},"endBody":{"col":113,"line":37}},"components-textarea--with-label-hidden":{"startLoc":{"col":31,"line":39},"endLoc":{"col":99,"line":39},"startBody":{"col":31,"line":39},"endBody":{"col":99,"line":39}},"components-textarea--playground":{"startLoc":{"col":26,"line":45},"endLoc":{"col":1,"line":80},"startBody":{"col":26,"line":45},"endBody":{"col":1,"line":80}}}},\n    docs: {\n      page: () => (\n        <>\n          <Title>Props</Title>\n          <Subtitle>Props, which are not mentioned below, are passed to the native element</Subtitle>\n          <Props />\n          <Stories title="Examples" includePrimary />\n        </>\n      ),\n    },\n  },\n};\n\nexport const Default = () => <TextArea {...textAreaProps} />;;\n\nexport const Disabled = () => <TextArea {...textAreaProps} disabled defaultValue={value} />;;\n\nexport const Invalid = () => <TextArea {...textAreaProps} invalid helperText="Error text" defaultValue={value} />;;\n\nexport const WithLabelHidden = () => <TextArea {...textAreaProps} hideLabel defaultValue={value} />;;\n\nWithLabelHidden.story = {\n  name: \'With label hidden\',\n};\n\nexport const Playground = () => {\n  const groupGeneral = \'General\';\n  const groupTooltip = \'Tooltip\';\n\n  const label = text(\'Label\', textAreaProps.labelText, groupGeneral);\n  const placeholder = text(\'Placeholder\', textAreaProps.placeholder, groupGeneral);\n  const helperText = text(\'Helper text\', textAreaProps.helperText, groupGeneral);\n  const disabled = boolean(\'Disabled\', false, groupGeneral);\n  const invalid = boolean(\'Invalid\', false, groupGeneral);\n  const hideLabel = boolean(\'Hide label\', false, groupGeneral);\n\n  const tooltipLabel = text(\'Tooltip label\', \'Tooltip label\', groupTooltip);\n  const tooltipText = text(\n    \'Tooltip text\',\n    \'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\',\n    groupTooltip,\n  );\n  const tooltipOpenButtonLabelText = text(\'Tooltip open label\', \'Show tooltip\', groupTooltip);\n  const tooltipCloseButtonLabelText = text(\'Tooltip close label\', \'Close tooltip\', groupTooltip);\n\n  return (\n    <TextArea\n      {...textAreaProps}\n      labelText={label}\n      helperText={helperText}\n      placeholder={placeholder}\n      disabled={disabled}\n      invalid={invalid}\n      hideLabel={hideLabel}\n      tooltipLabel={tooltipLabel}\n      tooltipText={tooltipText}\n      tooltipOpenButtonLabelText={tooltipOpenButtonLabelText}\n      tooltipCloseButtonLabelText={tooltipCloseButtonLabelText}\n    />\n  );\n};\n\nPlayground.story = {\n  parameters: {\n    previewTabs: {\n      \'storybook/docs/panel\': {\n        hidden: true,\n      },\n    },\n    docs: {\n      disable: true,\n    },\n  },\n};\n',locationsMap:{"components-textarea--default":{startLoc:{col:23,line:41},endLoc:{col:60,line:41},startBody:{col:23,line:41},endBody:{col:60,line:41}},"components-textarea--disabled":{startLoc:{col:24,line:43},endLoc:{col:91,line:43},startBody:{col:24,line:43},endBody:{col:91,line:43}},"components-textarea--invalid":{startLoc:{col:23,line:45},endLoc:{col:113,line:45},startBody:{col:23,line:45},endBody:{col:113,line:45}},"components-textarea--with-label-hidden":{startLoc:{col:31,line:47},endLoc:{col:99,line:47},startBody:{col:31,line:47},endBody:{col:99,line:47}},"components-textarea--playground":{startLoc:{col:26,line:53},endLoc:{col:1,line:88},startBody:{col:26,line:53},endBody:{col:1,line:88}}}}},Object(defineProperty.a)(_parameters,"storySource",{source:"import React from 'react';\nimport { boolean, text, withKnobs } from '@storybook/addon-knobs';\nimport { Props, Stories, Subtitle, Title } from '@storybook/addon-docs/dist/blocks';\n\nimport TextArea from './TextArea';\n\nconst textAreaProps = {\n  helperText: 'Assistive text',\n  id: 'textArea',\n  labelText: 'Label',\n  placeholder: 'Placeholder',\n};\nconst value = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.';\n\nexport default {\n  component: TextArea,\n  title: 'Components/TextArea',\n  decorators: [withKnobs, (storyFn) => <div style={{ maxWidth: '400px' }}>{storyFn()}</div>],\n  parameters: {\n    docs: {\n      page: () => (\n        <>\n          <Title>Props</Title>\n          <Subtitle>Props, which are not mentioned below, are passed to the native element</Subtitle>\n          <Props />\n          <Stories title=\"Examples\" includePrimary />\n        </>\n      ),\n    },\n  },\n};\n\nexport const Default = () => <TextArea {...textAreaProps} />;\n\nexport const Disabled = () => <TextArea {...textAreaProps} disabled defaultValue={value} />;\n\nexport const Invalid = () => <TextArea {...textAreaProps} invalid helperText=\"Error text\" defaultValue={value} />;\n\nexport const WithLabelHidden = () => <TextArea {...textAreaProps} hideLabel defaultValue={value} />;\n\nWithLabelHidden.story = {\n  name: 'With label hidden',\n};\n\nexport const Playground = () => {\n  const groupGeneral = 'General';\n  const groupTooltip = 'Tooltip';\n\n  const label = text('Label', textAreaProps.labelText, groupGeneral);\n  const placeholder = text('Placeholder', textAreaProps.placeholder, groupGeneral);\n  const helperText = text('Helper text', textAreaProps.helperText, groupGeneral);\n  const disabled = boolean('Disabled', false, groupGeneral);\n  const invalid = boolean('Invalid', false, groupGeneral);\n  const hideLabel = boolean('Hide label', false, groupGeneral);\n\n  const tooltipLabel = text('Tooltip label', 'Tooltip label', groupTooltip);\n  const tooltipText = text(\n    'Tooltip text',\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\n    groupTooltip,\n  );\n  const tooltipOpenButtonLabelText = text('Tooltip open label', 'Show tooltip', groupTooltip);\n  const tooltipCloseButtonLabelText = text('Tooltip close label', 'Close tooltip', groupTooltip);\n\n  return (\n    <TextArea\n      {...textAreaProps}\n      labelText={label}\n      helperText={helperText}\n      placeholder={placeholder}\n      disabled={disabled}\n      invalid={invalid}\n      hideLabel={hideLabel}\n      tooltipLabel={tooltipLabel}\n      tooltipText={tooltipText}\n      tooltipOpenButtonLabelText={tooltipOpenButtonLabelText}\n      tooltipCloseButtonLabelText={tooltipCloseButtonLabelText}\n    />\n  );\n};\n\nPlayground.story = {\n  parameters: {\n    previewTabs: {\n      'storybook/docs/panel': {\n        hidden: true,\n      },\n    },\n    docs: {\n      disable: true,\n    },\n  },\n};\n",locationsMap:{"components-textarea--default":{startLoc:{col:23,line:33},endLoc:{col:60,line:33},startBody:{col:23,line:33},endBody:{col:60,line:33}},"components-textarea--disabled":{startLoc:{col:24,line:35},endLoc:{col:91,line:35},startBody:{col:24,line:35},endBody:{col:91,line:35}},"components-textarea--invalid":{startLoc:{col:23,line:37},endLoc:{col:113,line:37},startBody:{col:23,line:37},endBody:{col:113,line:37}},"components-textarea--with-label-hidden":{startLoc:{col:31,line:39},endLoc:{col:99,line:39},startBody:{col:31,line:39},endBody:{col:99,line:39}},"components-textarea--playground":{startLoc:{col:26,line:45},endLoc:{col:1,line:80},startBody:{col:26,line:45},endBody:{col:1,line:80}}}}),Object(defineProperty.a)(_parameters,"docs",{page:function page(){return react_default.a.createElement(react_default.a.Fragment,null,TextArea_stories_ref,_ref2,_ref3,_ref4)}}),_parameters)},function(){return react_default.a.createElement(textinput_TextArea,textAreaProps)});Default.displayName="Default";var Disabled=function(){return react_default.a.createElement(textinput_TextArea,Object.assign({},textAreaProps,{disabled:!0,defaultValue:value}))};Disabled.displayName="Disabled";var Invalid=function(){return react_default.a.createElement(textinput_TextArea,Object.assign({},textAreaProps,{invalid:!0,helperText:"Error text",defaultValue:value}))};Invalid.displayName="Invalid";var WithLabelHidden=function(){return react_default.a.createElement(textinput_TextArea,Object.assign({},textAreaProps,{hideLabel:!0,defaultValue:value}))};WithLabelHidden.displayName="WithLabelHidden",WithLabelHidden.story={name:"With label hidden"};var Playground=function(){var label=Object(dist.text)("Label",textAreaProps.labelText,"General"),placeholder=Object(dist.text)("Placeholder",textAreaProps.placeholder,"General"),helperText=Object(dist.text)("Helper text",textAreaProps.helperText,"General"),disabled=Object(dist.boolean)("Disabled",!1,"General"),invalid=Object(dist.boolean)("Invalid",!1,"General"),hideLabel=Object(dist.boolean)("Hide label",!1,"General"),tooltipLabel=Object(dist.text)("Tooltip label","Tooltip label","Tooltip"),tooltipText=Object(dist.text)("Tooltip text","Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.","Tooltip"),tooltipOpenButtonLabelText=Object(dist.text)("Tooltip open label","Show tooltip","Tooltip"),tooltipCloseButtonLabelText=Object(dist.text)("Tooltip close label","Close tooltip","Tooltip");return react_default.a.createElement(textinput_TextArea,Object.assign({},textAreaProps,{labelText:label,helperText:helperText,placeholder:placeholder,disabled:disabled,invalid:invalid,hideLabel:hideLabel,tooltipLabel:tooltipLabel,tooltipText:tooltipText,tooltipOpenButtonLabelText:tooltipOpenButtonLabelText,tooltipCloseButtonLabelText:tooltipCloseButtonLabelText}))};Playground.displayName="Playground",Playground.story={parameters:{previewTabs:{"storybook/docs/panel":{hidden:!0}},docs:{disable:!0}}},Default.__docgenInfo={description:"",methods:[],displayName:"Default"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/textinput/TextArea.stories.tsx"]={name:"Default",docgenInfo:Default.__docgenInfo,path:"src/components/textinput/TextArea.stories.tsx"}),Disabled.__docgenInfo={description:"",methods:[],displayName:"Disabled"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/textinput/TextArea.stories.tsx"]={name:"Disabled",docgenInfo:Disabled.__docgenInfo,path:"src/components/textinput/TextArea.stories.tsx"}),Invalid.__docgenInfo={description:"",methods:[],displayName:"Invalid"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/textinput/TextArea.stories.tsx"]={name:"Invalid",docgenInfo:Invalid.__docgenInfo,path:"src/components/textinput/TextArea.stories.tsx"}),WithLabelHidden.__docgenInfo={description:"",methods:[],displayName:"WithLabelHidden"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/textinput/TextArea.stories.tsx"]={name:"WithLabelHidden",docgenInfo:WithLabelHidden.__docgenInfo,path:"src/components/textinput/TextArea.stories.tsx"}),Playground.__docgenInfo={description:"",methods:[],displayName:"Playground"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/textinput/TextArea.stories.tsx"]={name:"Playground",docgenInfo:Playground.__docgenInfo,path:"src/components/textinput/TextArea.stories.tsx"})},1548:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"Selected",(function(){return Selected})),__webpack_require__.d(__webpack_exports__,"Disabled",(function(){return Disabled})),__webpack_require__.d(__webpack_exports__,"SelectedDisabled",(function(){return SelectedDisabled})),__webpack_require__.d(__webpack_exports__,"Custom",(function(){return Custom})),__webpack_require__.d(__webpack_exports__,"Playground",(function(){return Playground}));__webpack_require__(13);var slicedToArray=__webpack_require__(73),defineProperty=__webpack_require__(17),react=__webpack_require__(0),react_default=__webpack_require__.n(react),dist=__webpack_require__(1),blocks=__webpack_require__(14),objectWithoutProperties=(__webpack_require__(3),__webpack_require__(99)),RadioButton_module=__webpack_require__(245),RadioButton_module_default=__webpack_require__.n(RadioButton_module),classNames=__webpack_require__(31),RadioButton=react_default.a.forwardRef((function(_ref,ref){var _ref$checked=_ref.checked,checked=void 0!==_ref$checked&&_ref$checked,_ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className,_ref$disabled=_ref.disabled,disabled=void 0!==_ref$disabled&&_ref$disabled,id=_ref.id,_ref$labelText=_ref.labelText,labelText=void 0===_ref$labelText?void 0:_ref$labelText,_ref$onChange=_ref.onChange,onChange=void 0===_ref$onChange?function(){return null}:_ref$onChange,style=_ref.style,value=_ref.value,rest=Object(objectWithoutProperties.a)(_ref,["checked","className","disabled","id","labelText","onChange","style","value"]);return react_default.a.createElement("div",{className:Object(classNames.a)(RadioButton_module_default.a.radioButton,className),style:style},react_default.a.createElement("input",Object.assign({ref:ref,id:id,className:Object(classNames.a)(RadioButton_module_default.a.input),onChange:onChange,value:value,type:"radio",disabled:disabled,checked:checked,"aria-checked":checked},rest)),react_default.a.createElement("label",{htmlFor:id,className:Object(classNames.a)(RadioButton_module_default.a.label)},labelText))}));RadioButton.__docgenInfo={description:"",methods:[],displayName:"RadioButton",props:{checked:{defaultValue:{value:"false",computed:!1},required:!1,tsType:{name:"boolean"},description:"If `true`, the component is checked"},className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the radio button"},disabled:{defaultValue:{value:"false",computed:!1},required:!1,tsType:{name:"boolean"},description:"If `true`, the radio button will be disabled"},labelText:{defaultValue:{value:"undefined",computed:!0},required:!1,tsType:{name:"string"},description:"The label for the radio button"},onChange:{defaultValue:{value:"() => null",computed:!1},required:!1,tsType:{name:"ChangeEventHandler",elements:[{name:"HTMLInputElement"}],raw:"ChangeEventHandler<HTMLInputElement>"},description:"Callback fired when the state is changed"},id:{required:!0,tsType:{name:"string"},description:"The id of the input element"},style:{required:!1,tsType:{name:"CSSProperties"},description:"Override or extend the styles applied to the component. See radio button [tokens](https://city-of-helsinki.github.io/helsinki-design-system/components/radio-button#tokens) for available CSS variables"},value:{required:!1,tsType:{name:"string"},description:"The value of the component"}}};var radiobutton_RadioButton=RadioButton;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/radiobutton/RadioButton.tsx"]={name:"RadioButton",docgenInfo:RadioButton.__docgenInfo,path:"src/components/radiobutton/RadioButton.tsx"});var _parameters,RadioButton_stories_ref=react_default.a.createElement(blocks.Title,null,"Props"),_ref2=react_default.a.createElement(blocks.Subtitle,null,"Props, which are not mentioned below, are passed to the native element"),_ref3=react_default.a.createElement(blocks.Props,null),_ref4=react_default.a.createElement(blocks.Stories,{title:"Examples",includePrimary:!0}),_ref5=(__webpack_exports__.default={component:radiobutton_RadioButton,title:"Components/RadioButton",parameters:(_parameters={storySource:{source:"\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = \"import React, { useState } from 'react';\\nimport { color, number } from '@storybook/addon-knobs';\\nimport { Props, Stories, Subtitle, Title } from '@storybook/addon-docs/dist/blocks';\\n\\nimport RadioButton from './RadioButton';\\n\\nexport default {\\n  component: RadioButton,\\n  title: 'Components/RadioButton',\\n  parameters: {\\n    docs: {\\n      page: () => (\\n        <>\\n          <Title>Props</Title>\\n          <Subtitle>Props, which are not mentioned below, are passed to the native element</Subtitle>\\n          <Props />\\n          <Stories title=\\\"Examples\\\" includePrimary />\\n        </>\\n      ),\\n    },\\n  },\\n};\\n\\nexport const Default = () => <RadioButton id=\\\"radio\\\" labelText=\\\"Label\\\" />;\\n\\nexport const Selected = () => <RadioButton id=\\\"radio2\\\" labelText=\\\"Label\\\" checked />;\\n\\nexport const Disabled = () => <RadioButton id=\\\"radio3\\\" labelText=\\\"Label\\\" disabled />;\\n\\nexport const SelectedDisabled = () => <RadioButton id=\\\"radio4\\\" labelText=\\\"Label\\\" checked disabled />;\\n\\nSelectedDisabled.story = {\\n  name: 'Selected & disabled',\\n};\\n\\nexport const Custom = () => {\\n  const [radioValue, setRadioValue] = useState('foo');\\n  const options = ['foo', 'bar'];\\n\\n  const customStyles = {\\n    '--size': '36px',\\n    '--icon-scale': 0.65,\\n    '--border-width': '3px',\\n    '--outline-width': '4px',\\n    '--border-color-selected': 'var(--color-success)',\\n    '--border-color-selected-hover': 'var(--color-success-dark)',\\n    '--border-color-selected-focus': 'var(--color-success)',\\n    '--icon-color-selected': 'var(--color-success)',\\n    '--icon-color-hover': 'var(--color-success-dark)',\\n    '--focus-outline-color': 'var(--color-black-20)',\\n  } as React.CSSProperties;\\n\\n  return (\\n    <>\\n      {options.map((option) => (\\n        <RadioButton\\n          key={`radio-${option}`}\\n          id={`radio-${option}`}\\n          value={option}\\n          labelText=\\\"Label\\\"\\n          style={customStyles}\\n          checked={radioValue === option}\\n          onChange={(event) => setRadioValue((event.target as HTMLInputElement).value)}\\n        />\\n      ))}\\n    </>\\n  );\\n};\\n\\nCustom.story = {\\n  name: 'With custom styles',\\n};\\n\\nexport const Playground = () => {\\n  const [radioValue, setRadioValue] = useState(null);\\n  const options = ['foo', 'bar', 'baz'];\\n\\n  const groupSize = 'Size';\\n  const groupColor = 'Color';\\n  const size = number(\\n    'Size',\\n    24,\\n    {\\n      range: true,\\n      min: 10,\\n      max: 100,\\n      step: 1,\\n    },\\n    groupSize,\\n  );\\n  const iconScale = number(\\n    'Icon scale',\\n    0.5,\\n    {\\n      range: true,\\n      min: 0.1,\\n      max: 0.9,\\n      step: 0.05,\\n    },\\n    groupSize,\\n  );\\n  const borderWidth = number(\\n    'Border width',\\n    2,\\n    {\\n      range: true,\\n      min: 1,\\n      max: 10,\\n      step: 1,\\n    },\\n    groupSize,\\n  );\\n  const outlineWidth = number(\\n    'Outline width',\\n    3,\\n    {\\n      range: true,\\n      min: 1,\\n      max: 10,\\n      step: 1,\\n    },\\n    groupSize,\\n  );\\n  const background = color('Background - unselected', '#ffffff', groupColor);\\n  const backgroundHover = color('Background - hover', '#ffffff', groupColor);\\n  const backgroundFocus = color('Background - focus', '#ffffff', groupColor);\\n  const backgroundUnselectedDisabled = color('Background - unselected - disabled', '#e5e5e5', groupColor);\\n  const backgroundSelectedDisabled = color('Background - selected - disabled', '#ffffff', groupColor);\\n  const borderFocus = color('Border - focus', '#1a1a1a', groupColor);\\n  const borderSelected = color('Border - selected', '#0000bf', groupColor);\\n  const borderSelectedHover = color('Border - selected - hover', '#000098', groupColor);\\n  const borderSelectedDisabled = color('Border - selected - disabled', '#cccccc', groupColor);\\n  const borderUnselected = color('Border - unselected', '#808080', groupColor);\\n  const borderUnselectedHover = color('Border - unselected - hover', '#1a1a1a', groupColor);\\n  const borderUnselectedDisabled = color('Border - unselected - disabled', '#e5e5e5', groupColor);\\n  const focusOutline = color('Focus outline', '#0072c6', groupColor);\\n  const iconUnselected = color('Icon - unselected', 'rgba(0, 0, 0, 0)', groupColor);\\n  const iconSelected = color('Icon - selected', '#0000bf', groupColor);\\n  const iconDisabled = color('Icon - disabled', '#e5e5e5', groupColor);\\n  const labelDefault = color('Label', '#1a1a1a', groupColor);\\n  const labelDisabled = color('Label - disabled', '#999898', groupColor);\\n\\n  const styles = {\\n    '--size': `${size}px`,\\n    '--icon-scale': iconScale,\\n    '--border-width': `${borderWidth}px`,\\n    '--outline-width': `${outlineWidth}px`,\\n    '--background': background,\\n    '--background-hover': backgroundHover,\\n    '--background-focus': backgroundFocus,\\n    '--background-unselected-disabled': backgroundUnselectedDisabled,\\n    '--background-selected-disabled': backgroundSelectedDisabled,\\n    '--border-color-focus': borderFocus,\\n    '--border-color-selected': borderSelected,\\n    '--border-color-selected-hover': borderSelectedHover,\\n    '--border-color-selected-disabled': borderSelectedDisabled,\\n    '--border-color-unselected': borderUnselected,\\n    '--border-color-unselected-hover': borderUnselectedHover,\\n    '--border-color-unselected-disabled': borderUnselectedDisabled,\\n    '--focus-outline-color': focusOutline,\\n    '--icon-color-unselected': iconUnselected,\\n    '--icon-color-selected': iconSelected,\\n    '--icon-color-disabled': iconDisabled,\\n    '--label-color': labelDefault,\\n    '--label-color-disabled': labelDisabled,\\n  } as React.CSSProperties;\\n\\n  return (\\n    <>\\n      {options.map((option) => (\\n        <RadioButton\\n          key={`radio-${option}`}\\n          id={`radio-${option}`}\\n          value={option}\\n          labelText=\\\"Label\\\"\\n          style={styles}\\n          checked={radioValue === option}\\n          onChange={(event) => setRadioValue((event.target as HTMLInputElement).value)}\\n        />\\n      ))}\\n      <RadioButton id=\\\"radio4\\\" labelText=\\\"Label\\\" style={styles} disabled />\\n      <RadioButton id=\\\"radio5\\\" labelText=\\\"Label\\\" style={styles} disabled checked />\\n    </>\\n  );\\n};\\n\\nPlayground.story = {\\n  parameters: {\\n    previewTabs: {\\n      'storybook/docs/panel': {\\n        hidden: true,\\n      },\\n    },\\n    docs: {\\n      disable: true,\\n    },\\n  },\\n};\\n\";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {\"components-radiobutton--default\":{\"startLoc\":{\"col\":23,\"line\":24},\"endLoc\":{\"col\":73,\"line\":24},\"startBody\":{\"col\":23,\"line\":24},\"endBody\":{\"col\":73,\"line\":24}},\"components-radiobutton--selected\":{\"startLoc\":{\"col\":24,\"line\":26},\"endLoc\":{\"col\":83,\"line\":26},\"startBody\":{\"col\":24,\"line\":26},\"endBody\":{\"col\":83,\"line\":26}},\"components-radiobutton--disabled\":{\"startLoc\":{\"col\":24,\"line\":28},\"endLoc\":{\"col\":84,\"line\":28},\"startBody\":{\"col\":24,\"line\":28},\"endBody\":{\"col\":84,\"line\":28}},\"components-radiobutton--selected-disabled\":{\"startLoc\":{\"col\":32,\"line\":30},\"endLoc\":{\"col\":100,\"line\":30},\"startBody\":{\"col\":32,\"line\":30},\"endBody\":{\"col\":100,\"line\":30}},\"components-radiobutton--custom\":{\"startLoc\":{\"col\":22,\"line\":36},\"endLoc\":{\"col\":1,\"line\":68},\"startBody\":{\"col\":22,\"line\":36},\"endBody\":{\"col\":1,\"line\":68}},\"components-radiobutton--playground\":{\"startLoc\":{\"col\":26,\"line\":74},\"endLoc\":{\"col\":1,\"line\":185},\"startBody\":{\"col\":26,\"line\":74},\"endBody\":{\"col\":1,\"line\":185}}};\n    \nimport React, { useState } from 'react';\nimport { color, number } from '@storybook/addon-knobs';\nimport { Props, Stories, Subtitle, Title } from '@storybook/addon-docs/dist/blocks';\n\nimport RadioButton from './RadioButton';\n\nexport default {\n  component: RadioButton,\n  title: 'Components/RadioButton',\n  parameters: {\"storySource\":{\"source\":\"import React, { useState } from 'react';\\nimport { color, number } from '@storybook/addon-knobs';\\nimport { Props, Stories, Subtitle, Title } from '@storybook/addon-docs/dist/blocks';\\n\\nimport RadioButton from './RadioButton';\\n\\nexport default {\\n  component: RadioButton,\\n  title: 'Components/RadioButton',\\n  parameters: {\\n    docs: {\\n      page: () => (\\n        <>\\n          <Title>Props</Title>\\n          <Subtitle>Props, which are not mentioned below, are passed to the native element</Subtitle>\\n          <Props />\\n          <Stories title=\\\"Examples\\\" includePrimary />\\n        </>\\n      ),\\n    },\\n  },\\n};\\n\\nexport const Default = () => <RadioButton id=\\\"radio\\\" labelText=\\\"Label\\\" />;\\n\\nexport const Selected = () => <RadioButton id=\\\"radio2\\\" labelText=\\\"Label\\\" checked />;\\n\\nexport const Disabled = () => <RadioButton id=\\\"radio3\\\" labelText=\\\"Label\\\" disabled />;\\n\\nexport const SelectedDisabled = () => <RadioButton id=\\\"radio4\\\" labelText=\\\"Label\\\" checked disabled />;\\n\\nSelectedDisabled.story = {\\n  name: 'Selected & disabled',\\n};\\n\\nexport const Custom = () => {\\n  const [radioValue, setRadioValue] = useState('foo');\\n  const options = ['foo', 'bar'];\\n\\n  const customStyles = {\\n    '--size': '36px',\\n    '--icon-scale': 0.65,\\n    '--border-width': '3px',\\n    '--outline-width': '4px',\\n    '--border-color-selected': 'var(--color-success)',\\n    '--border-color-selected-hover': 'var(--color-success-dark)',\\n    '--border-color-selected-focus': 'var(--color-success)',\\n    '--icon-color-selected': 'var(--color-success)',\\n    '--icon-color-hover': 'var(--color-success-dark)',\\n    '--focus-outline-color': 'var(--color-black-20)',\\n  } as React.CSSProperties;\\n\\n  return (\\n    <>\\n      {options.map((option) => (\\n        <RadioButton\\n          key={`radio-${option}`}\\n          id={`radio-${option}`}\\n          value={option}\\n          labelText=\\\"Label\\\"\\n          style={customStyles}\\n          checked={radioValue === option}\\n          onChange={(event) => setRadioValue((event.target as HTMLInputElement).value)}\\n        />\\n      ))}\\n    </>\\n  );\\n};\\n\\nCustom.story = {\\n  name: 'With custom styles',\\n};\\n\\nexport const Playground = () => {\\n  const [radioValue, setRadioValue] = useState(null);\\n  const options = ['foo', 'bar', 'baz'];\\n\\n  const groupSize = 'Size';\\n  const groupColor = 'Color';\\n  const size = number(\\n    'Size',\\n    24,\\n    {\\n      range: true,\\n      min: 10,\\n      max: 100,\\n      step: 1,\\n    },\\n    groupSize,\\n  );\\n  const iconScale = number(\\n    'Icon scale',\\n    0.5,\\n    {\\n      range: true,\\n      min: 0.1,\\n      max: 0.9,\\n      step: 0.05,\\n    },\\n    groupSize,\\n  );\\n  const borderWidth = number(\\n    'Border width',\\n    2,\\n    {\\n      range: true,\\n      min: 1,\\n      max: 10,\\n      step: 1,\\n    },\\n    groupSize,\\n  );\\n  const outlineWidth = number(\\n    'Outline width',\\n    3,\\n    {\\n      range: true,\\n      min: 1,\\n      max: 10,\\n      step: 1,\\n    },\\n    groupSize,\\n  );\\n  const background = color('Background - unselected', '#ffffff', groupColor);\\n  const backgroundHover = color('Background - hover', '#ffffff', groupColor);\\n  const backgroundFocus = color('Background - focus', '#ffffff', groupColor);\\n  const backgroundUnselectedDisabled = color('Background - unselected - disabled', '#e5e5e5', groupColor);\\n  const backgroundSelectedDisabled = color('Background - selected - disabled', '#ffffff', groupColor);\\n  const borderFocus = color('Border - focus', '#1a1a1a', groupColor);\\n  const borderSelected = color('Border - selected', '#0000bf', groupColor);\\n  const borderSelectedHover = color('Border - selected - hover', '#000098', groupColor);\\n  const borderSelectedDisabled = color('Border - selected - disabled', '#cccccc', groupColor);\\n  const borderUnselected = color('Border - unselected', '#808080', groupColor);\\n  const borderUnselectedHover = color('Border - unselected - hover', '#1a1a1a', groupColor);\\n  const borderUnselectedDisabled = color('Border - unselected - disabled', '#e5e5e5', groupColor);\\n  const focusOutline = color('Focus outline', '#0072c6', groupColor);\\n  const iconUnselected = color('Icon - unselected', 'rgba(0, 0, 0, 0)', groupColor);\\n  const iconSelected = color('Icon - selected', '#0000bf', groupColor);\\n  const iconDisabled = color('Icon - disabled', '#e5e5e5', groupColor);\\n  const labelDefault = color('Label', '#1a1a1a', groupColor);\\n  const labelDisabled = color('Label - disabled', '#999898', groupColor);\\n\\n  const styles = {\\n    '--size': `${size}px`,\\n    '--icon-scale': iconScale,\\n    '--border-width': `${borderWidth}px`,\\n    '--outline-width': `${outlineWidth}px`,\\n    '--background': background,\\n    '--background-hover': backgroundHover,\\n    '--background-focus': backgroundFocus,\\n    '--background-unselected-disabled': backgroundUnselectedDisabled,\\n    '--background-selected-disabled': backgroundSelectedDisabled,\\n    '--border-color-focus': borderFocus,\\n    '--border-color-selected': borderSelected,\\n    '--border-color-selected-hover': borderSelectedHover,\\n    '--border-color-selected-disabled': borderSelectedDisabled,\\n    '--border-color-unselected': borderUnselected,\\n    '--border-color-unselected-hover': borderUnselectedHover,\\n    '--border-color-unselected-disabled': borderUnselectedDisabled,\\n    '--focus-outline-color': focusOutline,\\n    '--icon-color-unselected': iconUnselected,\\n    '--icon-color-selected': iconSelected,\\n    '--icon-color-disabled': iconDisabled,\\n    '--label-color': labelDefault,\\n    '--label-color-disabled': labelDisabled,\\n  } as React.CSSProperties;\\n\\n  return (\\n    <>\\n      {options.map((option) => (\\n        <RadioButton\\n          key={`radio-${option}`}\\n          id={`radio-${option}`}\\n          value={option}\\n          labelText=\\\"Label\\\"\\n          style={styles}\\n          checked={radioValue === option}\\n          onChange={(event) => setRadioValue((event.target as HTMLInputElement).value)}\\n        />\\n      ))}\\n      <RadioButton id=\\\"radio4\\\" labelText=\\\"Label\\\" style={styles} disabled />\\n      <RadioButton id=\\\"radio5\\\" labelText=\\\"Label\\\" style={styles} disabled checked />\\n    </>\\n  );\\n};\\n\\nPlayground.story = {\\n  parameters: {\\n    previewTabs: {\\n      'storybook/docs/panel': {\\n        hidden: true,\\n      },\\n    },\\n    docs: {\\n      disable: true,\\n    },\\n  },\\n};\\n\",\"locationsMap\":{\"components-radiobutton--default\":{\"startLoc\":{\"col\":23,\"line\":24},\"endLoc\":{\"col\":73,\"line\":24},\"startBody\":{\"col\":23,\"line\":24},\"endBody\":{\"col\":73,\"line\":24}},\"components-radiobutton--selected\":{\"startLoc\":{\"col\":24,\"line\":26},\"endLoc\":{\"col\":83,\"line\":26},\"startBody\":{\"col\":24,\"line\":26},\"endBody\":{\"col\":83,\"line\":26}},\"components-radiobutton--disabled\":{\"startLoc\":{\"col\":24,\"line\":28},\"endLoc\":{\"col\":84,\"line\":28},\"startBody\":{\"col\":24,\"line\":28},\"endBody\":{\"col\":84,\"line\":28}},\"components-radiobutton--selected-disabled\":{\"startLoc\":{\"col\":32,\"line\":30},\"endLoc\":{\"col\":100,\"line\":30},\"startBody\":{\"col\":32,\"line\":30},\"endBody\":{\"col\":100,\"line\":30}},\"components-radiobutton--custom\":{\"startLoc\":{\"col\":22,\"line\":36},\"endLoc\":{\"col\":1,\"line\":68},\"startBody\":{\"col\":22,\"line\":36},\"endBody\":{\"col\":1,\"line\":68}},\"components-radiobutton--playground\":{\"startLoc\":{\"col\":26,\"line\":74},\"endLoc\":{\"col\":1,\"line\":185},\"startBody\":{\"col\":26,\"line\":74},\"endBody\":{\"col\":1,\"line\":185}}}},\n    docs: {\n      page: () => (\n        <>\n          <Title>Props</Title>\n          <Subtitle>Props, which are not mentioned below, are passed to the native element</Subtitle>\n          <Props />\n          <Stories title=\"Examples\" includePrimary />\n        </>\n      ),\n    },\n  },\n};\n\nexport const Default = () => <RadioButton id=\"radio\" labelText=\"Label\" />;;\n\nexport const Selected = () => <RadioButton id=\"radio2\" labelText=\"Label\" checked />;;\n\nexport const Disabled = () => <RadioButton id=\"radio3\" labelText=\"Label\" disabled />;;\n\nexport const SelectedDisabled = () => <RadioButton id=\"radio4\" labelText=\"Label\" checked disabled />;;\n\nSelectedDisabled.story = {\n  name: 'Selected & disabled',\n};\n\nexport const Custom = () => {\n  const [radioValue, setRadioValue] = useState('foo');\n  const options = ['foo', 'bar'];\n\n  const customStyles = {\n    '--size': '36px',\n    '--icon-scale': 0.65,\n    '--border-width': '3px',\n    '--outline-width': '4px',\n    '--border-color-selected': 'var(--color-success)',\n    '--border-color-selected-hover': 'var(--color-success-dark)',\n    '--border-color-selected-focus': 'var(--color-success)',\n    '--icon-color-selected': 'var(--color-success)',\n    '--icon-color-hover': 'var(--color-success-dark)',\n    '--focus-outline-color': 'var(--color-black-20)',\n  } as React.CSSProperties;\n\n  return (\n    <>\n      {options.map((option) => (\n        <RadioButton\n          key={`radio-${option}`}\n          id={`radio-${option}`}\n          value={option}\n          labelText=\"Label\"\n          style={customStyles}\n          checked={radioValue === option}\n          onChange={(event) => setRadioValue((event.target as HTMLInputElement).value)}\n        />\n      ))}\n    </>\n  );\n};;\n\nCustom.story = {\n  name: 'With custom styles',\n};\n\nexport const Playground = () => {\n  const [radioValue, setRadioValue] = useState(null);\n  const options = ['foo', 'bar', 'baz'];\n\n  const groupSize = 'Size';\n  const groupColor = 'Color';\n  const size = number(\n    'Size',\n    24,\n    {\n      range: true,\n      min: 10,\n      max: 100,\n      step: 1,\n    },\n    groupSize,\n  );\n  const iconScale = number(\n    'Icon scale',\n    0.5,\n    {\n      range: true,\n      min: 0.1,\n      max: 0.9,\n      step: 0.05,\n    },\n    groupSize,\n  );\n  const borderWidth = number(\n    'Border width',\n    2,\n    {\n      range: true,\n      min: 1,\n      max: 10,\n      step: 1,\n    },\n    groupSize,\n  );\n  const outlineWidth = number(\n    'Outline width',\n    3,\n    {\n      range: true,\n      min: 1,\n      max: 10,\n      step: 1,\n    },\n    groupSize,\n  );\n  const background = color('Background - unselected', '#ffffff', groupColor);\n  const backgroundHover = color('Background - hover', '#ffffff', groupColor);\n  const backgroundFocus = color('Background - focus', '#ffffff', groupColor);\n  const backgroundUnselectedDisabled = color('Background - unselected - disabled', '#e5e5e5', groupColor);\n  const backgroundSelectedDisabled = color('Background - selected - disabled', '#ffffff', groupColor);\n  const borderFocus = color('Border - focus', '#1a1a1a', groupColor);\n  const borderSelected = color('Border - selected', '#0000bf', groupColor);\n  const borderSelectedHover = color('Border - selected - hover', '#000098', groupColor);\n  const borderSelectedDisabled = color('Border - selected - disabled', '#cccccc', groupColor);\n  const borderUnselected = color('Border - unselected', '#808080', groupColor);\n  const borderUnselectedHover = color('Border - unselected - hover', '#1a1a1a', groupColor);\n  const borderUnselectedDisabled = color('Border - unselected - disabled', '#e5e5e5', groupColor);\n  const focusOutline = color('Focus outline', '#0072c6', groupColor);\n  const iconUnselected = color('Icon - unselected', 'rgba(0, 0, 0, 0)', groupColor);\n  const iconSelected = color('Icon - selected', '#0000bf', groupColor);\n  const iconDisabled = color('Icon - disabled', '#e5e5e5', groupColor);\n  const labelDefault = color('Label', '#1a1a1a', groupColor);\n  const labelDisabled = color('Label - disabled', '#999898', groupColor);\n\n  const styles = {\n    '--size': `${size}px`,\n    '--icon-scale': iconScale,\n    '--border-width': `${borderWidth}px`,\n    '--outline-width': `${outlineWidth}px`,\n    '--background': background,\n    '--background-hover': backgroundHover,\n    '--background-focus': backgroundFocus,\n    '--background-unselected-disabled': backgroundUnselectedDisabled,\n    '--background-selected-disabled': backgroundSelectedDisabled,\n    '--border-color-focus': borderFocus,\n    '--border-color-selected': borderSelected,\n    '--border-color-selected-hover': borderSelectedHover,\n    '--border-color-selected-disabled': borderSelectedDisabled,\n    '--border-color-unselected': borderUnselected,\n    '--border-color-unselected-hover': borderUnselectedHover,\n    '--border-color-unselected-disabled': borderUnselectedDisabled,\n    '--focus-outline-color': focusOutline,\n    '--icon-color-unselected': iconUnselected,\n    '--icon-color-selected': iconSelected,\n    '--icon-color-disabled': iconDisabled,\n    '--label-color': labelDefault,\n    '--label-color-disabled': labelDisabled,\n  } as React.CSSProperties;\n\n  return (\n    <>\n      {options.map((option) => (\n        <RadioButton\n          key={`radio-${option}`}\n          id={`radio-${option}`}\n          value={option}\n          labelText=\"Label\"\n          style={styles}\n          checked={radioValue === option}\n          onChange={(event) => setRadioValue((event.target as HTMLInputElement).value)}\n        />\n      ))}\n      <RadioButton id=\"radio4\" labelText=\"Label\" style={styles} disabled />\n      <RadioButton id=\"radio5\" labelText=\"Label\" style={styles} disabled checked />\n    </>\n  );\n};\n\nPlayground.story = {\n  parameters: {\n    previewTabs: {\n      'storybook/docs/panel': {\n        hidden: true,\n      },\n    },\n    docs: {\n      disable: true,\n    },\n  },\n};\n",locationsMap:{"components-radiobutton--default":{startLoc:{col:23,line:32},endLoc:{col:73,line:32},startBody:{col:23,line:32},endBody:{col:73,line:32}},"components-radiobutton--selected":{startLoc:{col:24,line:34},endLoc:{col:83,line:34},startBody:{col:24,line:34},endBody:{col:83,line:34}},"components-radiobutton--disabled":{startLoc:{col:24,line:36},endLoc:{col:84,line:36},startBody:{col:24,line:36},endBody:{col:84,line:36}},"components-radiobutton--selected-disabled":{startLoc:{col:32,line:38},endLoc:{col:100,line:38},startBody:{col:32,line:38},endBody:{col:100,line:38}},"components-radiobutton--custom":{startLoc:{col:22,line:44},endLoc:{col:1,line:76},startBody:{col:22,line:44},endBody:{col:1,line:76}},"components-radiobutton--playground":{startLoc:{col:26,line:82},endLoc:{col:1,line:193},startBody:{col:26,line:82},endBody:{col:1,line:193}}}}},Object(defineProperty.a)(_parameters,"storySource",{source:"import React, { useState } from 'react';\nimport { color, number } from '@storybook/addon-knobs';\nimport { Props, Stories, Subtitle, Title } from '@storybook/addon-docs/dist/blocks';\n\nimport RadioButton from './RadioButton';\n\nexport default {\n  component: RadioButton,\n  title: 'Components/RadioButton',\n  parameters: {\n    docs: {\n      page: () => (\n        <>\n          <Title>Props</Title>\n          <Subtitle>Props, which are not mentioned below, are passed to the native element</Subtitle>\n          <Props />\n          <Stories title=\"Examples\" includePrimary />\n        </>\n      ),\n    },\n  },\n};\n\nexport const Default = () => <RadioButton id=\"radio\" labelText=\"Label\" />;\n\nexport const Selected = () => <RadioButton id=\"radio2\" labelText=\"Label\" checked />;\n\nexport const Disabled = () => <RadioButton id=\"radio3\" labelText=\"Label\" disabled />;\n\nexport const SelectedDisabled = () => <RadioButton id=\"radio4\" labelText=\"Label\" checked disabled />;\n\nSelectedDisabled.story = {\n  name: 'Selected & disabled',\n};\n\nexport const Custom = () => {\n  const [radioValue, setRadioValue] = useState('foo');\n  const options = ['foo', 'bar'];\n\n  const customStyles = {\n    '--size': '36px',\n    '--icon-scale': 0.65,\n    '--border-width': '3px',\n    '--outline-width': '4px',\n    '--border-color-selected': 'var(--color-success)',\n    '--border-color-selected-hover': 'var(--color-success-dark)',\n    '--border-color-selected-focus': 'var(--color-success)',\n    '--icon-color-selected': 'var(--color-success)',\n    '--icon-color-hover': 'var(--color-success-dark)',\n    '--focus-outline-color': 'var(--color-black-20)',\n  } as React.CSSProperties;\n\n  return (\n    <>\n      {options.map((option) => (\n        <RadioButton\n          key={`radio-${option}`}\n          id={`radio-${option}`}\n          value={option}\n          labelText=\"Label\"\n          style={customStyles}\n          checked={radioValue === option}\n          onChange={(event) => setRadioValue((event.target as HTMLInputElement).value)}\n        />\n      ))}\n    </>\n  );\n};\n\nCustom.story = {\n  name: 'With custom styles',\n};\n\nexport const Playground = () => {\n  const [radioValue, setRadioValue] = useState(null);\n  const options = ['foo', 'bar', 'baz'];\n\n  const groupSize = 'Size';\n  const groupColor = 'Color';\n  const size = number(\n    'Size',\n    24,\n    {\n      range: true,\n      min: 10,\n      max: 100,\n      step: 1,\n    },\n    groupSize,\n  );\n  const iconScale = number(\n    'Icon scale',\n    0.5,\n    {\n      range: true,\n      min: 0.1,\n      max: 0.9,\n      step: 0.05,\n    },\n    groupSize,\n  );\n  const borderWidth = number(\n    'Border width',\n    2,\n    {\n      range: true,\n      min: 1,\n      max: 10,\n      step: 1,\n    },\n    groupSize,\n  );\n  const outlineWidth = number(\n    'Outline width',\n    3,\n    {\n      range: true,\n      min: 1,\n      max: 10,\n      step: 1,\n    },\n    groupSize,\n  );\n  const background = color('Background - unselected', '#ffffff', groupColor);\n  const backgroundHover = color('Background - hover', '#ffffff', groupColor);\n  const backgroundFocus = color('Background - focus', '#ffffff', groupColor);\n  const backgroundUnselectedDisabled = color('Background - unselected - disabled', '#e5e5e5', groupColor);\n  const backgroundSelectedDisabled = color('Background - selected - disabled', '#ffffff', groupColor);\n  const borderFocus = color('Border - focus', '#1a1a1a', groupColor);\n  const borderSelected = color('Border - selected', '#0000bf', groupColor);\n  const borderSelectedHover = color('Border - selected - hover', '#000098', groupColor);\n  const borderSelectedDisabled = color('Border - selected - disabled', '#cccccc', groupColor);\n  const borderUnselected = color('Border - unselected', '#808080', groupColor);\n  const borderUnselectedHover = color('Border - unselected - hover', '#1a1a1a', groupColor);\n  const borderUnselectedDisabled = color('Border - unselected - disabled', '#e5e5e5', groupColor);\n  const focusOutline = color('Focus outline', '#0072c6', groupColor);\n  const iconUnselected = color('Icon - unselected', 'rgba(0, 0, 0, 0)', groupColor);\n  const iconSelected = color('Icon - selected', '#0000bf', groupColor);\n  const iconDisabled = color('Icon - disabled', '#e5e5e5', groupColor);\n  const labelDefault = color('Label', '#1a1a1a', groupColor);\n  const labelDisabled = color('Label - disabled', '#999898', groupColor);\n\n  const styles = {\n    '--size': `${size}px`,\n    '--icon-scale': iconScale,\n    '--border-width': `${borderWidth}px`,\n    '--outline-width': `${outlineWidth}px`,\n    '--background': background,\n    '--background-hover': backgroundHover,\n    '--background-focus': backgroundFocus,\n    '--background-unselected-disabled': backgroundUnselectedDisabled,\n    '--background-selected-disabled': backgroundSelectedDisabled,\n    '--border-color-focus': borderFocus,\n    '--border-color-selected': borderSelected,\n    '--border-color-selected-hover': borderSelectedHover,\n    '--border-color-selected-disabled': borderSelectedDisabled,\n    '--border-color-unselected': borderUnselected,\n    '--border-color-unselected-hover': borderUnselectedHover,\n    '--border-color-unselected-disabled': borderUnselectedDisabled,\n    '--focus-outline-color': focusOutline,\n    '--icon-color-unselected': iconUnselected,\n    '--icon-color-selected': iconSelected,\n    '--icon-color-disabled': iconDisabled,\n    '--label-color': labelDefault,\n    '--label-color-disabled': labelDisabled,\n  } as React.CSSProperties;\n\n  return (\n    <>\n      {options.map((option) => (\n        <RadioButton\n          key={`radio-${option}`}\n          id={`radio-${option}`}\n          value={option}\n          labelText=\"Label\"\n          style={styles}\n          checked={radioValue === option}\n          onChange={(event) => setRadioValue((event.target as HTMLInputElement).value)}\n        />\n      ))}\n      <RadioButton id=\"radio4\" labelText=\"Label\" style={styles} disabled />\n      <RadioButton id=\"radio5\" labelText=\"Label\" style={styles} disabled checked />\n    </>\n  );\n};\n\nPlayground.story = {\n  parameters: {\n    previewTabs: {\n      'storybook/docs/panel': {\n        hidden: true,\n      },\n    },\n    docs: {\n      disable: true,\n    },\n  },\n};\n",locationsMap:{"components-radiobutton--default":{startLoc:{col:23,line:24},endLoc:{col:73,line:24},startBody:{col:23,line:24},endBody:{col:73,line:24}},"components-radiobutton--selected":{startLoc:{col:24,line:26},endLoc:{col:83,line:26},startBody:{col:24,line:26},endBody:{col:83,line:26}},"components-radiobutton--disabled":{startLoc:{col:24,line:28},endLoc:{col:84,line:28},startBody:{col:24,line:28},endBody:{col:84,line:28}},"components-radiobutton--selected-disabled":{startLoc:{col:32,line:30},endLoc:{col:100,line:30},startBody:{col:32,line:30},endBody:{col:100,line:30}},"components-radiobutton--custom":{startLoc:{col:22,line:36},endLoc:{col:1,line:68},startBody:{col:22,line:36},endBody:{col:1,line:68}},"components-radiobutton--playground":{startLoc:{col:26,line:74},endLoc:{col:1,line:185},startBody:{col:26,line:74},endBody:{col:1,line:185}}}}),Object(defineProperty.a)(_parameters,"docs",{page:function page(){return react_default.a.createElement(react_default.a.Fragment,null,RadioButton_stories_ref,_ref2,_ref3,_ref4)}}),_parameters)},react_default.a.createElement(radiobutton_RadioButton,{id:"radio",labelText:"Label"})),Default=function(){return _ref5};Default.displayName="Default";var _ref6=react_default.a.createElement(radiobutton_RadioButton,{id:"radio2",labelText:"Label",checked:!0}),Selected=function(){return _ref6};Selected.displayName="Selected";var _ref7=react_default.a.createElement(radiobutton_RadioButton,{id:"radio3",labelText:"Label",disabled:!0}),Disabled=function(){return _ref7};Disabled.displayName="Disabled";var _ref8=react_default.a.createElement(radiobutton_RadioButton,{id:"radio4",labelText:"Label",checked:!0,disabled:!0}),SelectedDisabled=function(){return _ref8};SelectedDisabled.displayName="SelectedDisabled",SelectedDisabled.story={name:"Selected & disabled"};var Custom=function(){var _useState=Object(react.useState)("foo"),_useState2=Object(slicedToArray.a)(_useState,2),radioValue=_useState2[0],setRadioValue=_useState2[1],customStyles={"--size":"36px","--icon-scale":.65,"--border-width":"3px","--outline-width":"4px","--border-color-selected":"var(--color-success)","--border-color-selected-hover":"var(--color-success-dark)","--border-color-selected-focus":"var(--color-success)","--icon-color-selected":"var(--color-success)","--icon-color-hover":"var(--color-success-dark)","--focus-outline-color":"var(--color-black-20)"};return react_default.a.createElement(react_default.a.Fragment,null,["foo","bar"].map((function(option){return react_default.a.createElement(radiobutton_RadioButton,{key:"radio-".concat(option),id:"radio-".concat(option),value:option,labelText:"Label",style:customStyles,checked:radioValue===option,onChange:function onChange(event){return setRadioValue(event.target.value)}})})))};Custom.story={name:"With custom styles"};var Playground=function(){var _useState3=Object(react.useState)(null),_useState4=Object(slicedToArray.a)(_useState3,2),radioValue=_useState4[0],setRadioValue=_useState4[1],size=Object(dist.number)("Size",24,{range:!0,min:10,max:100,step:1},"Size"),iconScale=Object(dist.number)("Icon scale",.5,{range:!0,min:.1,max:.9,step:.05},"Size"),borderWidth=Object(dist.number)("Border width",2,{range:!0,min:1,max:10,step:1},"Size"),outlineWidth=Object(dist.number)("Outline width",3,{range:!0,min:1,max:10,step:1},"Size"),background=Object(dist.color)("Background - unselected","#ffffff","Color"),backgroundHover=Object(dist.color)("Background - hover","#ffffff","Color"),backgroundFocus=Object(dist.color)("Background - focus","#ffffff","Color"),backgroundUnselectedDisabled=Object(dist.color)("Background - unselected - disabled","#e5e5e5","Color"),backgroundSelectedDisabled=Object(dist.color)("Background - selected - disabled","#ffffff","Color"),borderFocus=Object(dist.color)("Border - focus","#1a1a1a","Color"),borderSelected=Object(dist.color)("Border - selected","#0000bf","Color"),borderSelectedHover=Object(dist.color)("Border - selected - hover","#000098","Color"),borderSelectedDisabled=Object(dist.color)("Border - selected - disabled","#cccccc","Color"),borderUnselected=Object(dist.color)("Border - unselected","#808080","Color"),borderUnselectedHover=Object(dist.color)("Border - unselected - hover","#1a1a1a","Color"),borderUnselectedDisabled=Object(dist.color)("Border - unselected - disabled","#e5e5e5","Color"),focusOutline=Object(dist.color)("Focus outline","#0072c6","Color"),iconUnselected=Object(dist.color)("Icon - unselected","rgba(0, 0, 0, 0)","Color"),iconSelected=Object(dist.color)("Icon - selected","#0000bf","Color"),iconDisabled=Object(dist.color)("Icon - disabled","#e5e5e5","Color"),labelDefault=Object(dist.color)("Label","#1a1a1a","Color"),labelDisabled=Object(dist.color)("Label - disabled","#999898","Color"),styles={"--size":"".concat(size,"px"),"--icon-scale":iconScale,"--border-width":"".concat(borderWidth,"px"),"--outline-width":"".concat(outlineWidth,"px"),"--background":background,"--background-hover":backgroundHover,"--background-focus":backgroundFocus,"--background-unselected-disabled":backgroundUnselectedDisabled,"--background-selected-disabled":backgroundSelectedDisabled,"--border-color-focus":borderFocus,"--border-color-selected":borderSelected,"--border-color-selected-hover":borderSelectedHover,"--border-color-selected-disabled":borderSelectedDisabled,"--border-color-unselected":borderUnselected,"--border-color-unselected-hover":borderUnselectedHover,"--border-color-unselected-disabled":borderUnselectedDisabled,"--focus-outline-color":focusOutline,"--icon-color-unselected":iconUnselected,"--icon-color-selected":iconSelected,"--icon-color-disabled":iconDisabled,"--label-color":labelDefault,"--label-color-disabled":labelDisabled};return react_default.a.createElement(react_default.a.Fragment,null,["foo","bar","baz"].map((function(option){return react_default.a.createElement(radiobutton_RadioButton,{key:"radio-".concat(option),id:"radio-".concat(option),value:option,labelText:"Label",style:styles,checked:radioValue===option,onChange:function onChange(event){return setRadioValue(event.target.value)}})})),react_default.a.createElement(radiobutton_RadioButton,{id:"radio4",labelText:"Label",style:styles,disabled:!0}),react_default.a.createElement(radiobutton_RadioButton,{id:"radio5",labelText:"Label",style:styles,disabled:!0,checked:!0}))};Playground.story={parameters:{previewTabs:{"storybook/docs/panel":{hidden:!0}},docs:{disable:!0}}},Default.__docgenInfo={description:"",methods:[],displayName:"Default"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/radiobutton/RadioButton.stories.tsx"]={name:"Default",docgenInfo:Default.__docgenInfo,path:"src/components/radiobutton/RadioButton.stories.tsx"}),Selected.__docgenInfo={description:"",methods:[],displayName:"Selected"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/radiobutton/RadioButton.stories.tsx"]={name:"Selected",docgenInfo:Selected.__docgenInfo,path:"src/components/radiobutton/RadioButton.stories.tsx"}),Disabled.__docgenInfo={description:"",methods:[],displayName:"Disabled"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/radiobutton/RadioButton.stories.tsx"]={name:"Disabled",docgenInfo:Disabled.__docgenInfo,path:"src/components/radiobutton/RadioButton.stories.tsx"}),SelectedDisabled.__docgenInfo={description:"",methods:[],displayName:"SelectedDisabled"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/radiobutton/RadioButton.stories.tsx"]={name:"SelectedDisabled",docgenInfo:SelectedDisabled.__docgenInfo,path:"src/components/radiobutton/RadioButton.stories.tsx"}),Custom.__docgenInfo={description:"",methods:[],displayName:"Custom"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/radiobutton/RadioButton.stories.tsx"]={name:"Custom",docgenInfo:Custom.__docgenInfo,path:"src/components/radiobutton/RadioButton.stories.tsx"}),Playground.__docgenInfo={description:"",methods:[],displayName:"Playground"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/radiobutton/RadioButton.stories.tsx"]={name:"Playground",docgenInfo:Playground.__docgenInfo,path:"src/components/radiobutton/RadioButton.stories.tsx"})},1550:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"Warning",(function(){return Warning})),__webpack_require__.d(__webpack_exports__,"Error",(function(){return Error})),__webpack_require__.d(__webpack_exports__,"Success",(function(){return Success}));var defineProperty=__webpack_require__(17),react=__webpack_require__(0),react_default=__webpack_require__.n(react),dist=__webpack_require__(149),addon_knobs_dist=__webpack_require__(1),objectSpread2=__webpack_require__(60),slicedToArray=__webpack_require__(73),renderprops_cjs=__webpack_require__(239),classNames=__webpack_require__(31),Notification=__webpack_require__(128),icons=__webpack_require__(43),DismissableNotification_module=__webpack_require__(244),DismissableNotification_module_default=__webpack_require__.n(DismissableNotification_module),DismissableNotification=function(props){var _useState=Object(react.useState)(!0),_useState2=Object(slicedToArray.a)(_useState,2),isOpen=_useState2[0],setOpen=_useState2[1],_props$type=props.type,type=void 0===_props$type?null:_props$type,_props$closeButtonLab=props.closeButtonLabelText,closeButtonLabelText=void 0===_props$closeButtonLab?null:_props$closeButtonLab,_props$onClose=props.onClose,onClose=void 0===_props$onClose?null:_props$onClose,_props$children=props.children,children=void 0===_props$children?null:_props$children;return react_default.a.createElement(renderprops_cjs.Transition,{config:{tension:300,friction:30},items:isOpen,enter:{height:"auto"},leave:{height:0},onDestroyed:onClose},(function(show){return show&&function(transitionProps){return react_default.a.createElement("div",{style:Object(objectSpread2.a)(Object(objectSpread2.a)({},transitionProps),{overflowY:"hidden",position:"relative"})},react_default.a.createElement(Notification.a,props,react_default.a.createElement("button",{className:Object(classNames.a)(DismissableNotification_module_default.a.buttonClose,DismissableNotification_module_default.a[type]),type:"button",title:closeButtonLabelText,"aria-label":closeButtonLabelText,onClick:function onClick(){setOpen(!1)}},react_default.a.createElement(icons.d,{className:DismissableNotification_module_default.a.iconClose})),children))}}))};DismissableNotification.displayName="DismissableNotification",DismissableNotification.__docgenInfo={description:"",methods:[],displayName:"DismissableNotification",props:{closeButtonLabelText:{required:!0,tsType:{name:"string"},description:""},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}};var notification_DismissableNotification=DismissableNotification;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/notification/DismissableNotification.tsx"]={name:"DismissableNotification",docgenInfo:DismissableNotification.__docgenInfo,path:"src/components/notification/DismissableNotification.tsx"});var DismissableNotification_stories_onClose=Object(dist.action)("closed"),content="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris.",_ref=(__webpack_exports__.default={parameters:Object(defineProperty.a)({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import React from \'react\';\\nimport { action } from \'@storybook/addon-actions\';\\nimport { withKnobs } from \'@storybook/addon-knobs\';\\n\\nimport DismissableNotification from \'./DismissableNotification\';\\n\\nconst onClose = action(\'closed\');\\n\\nconst content =\\n  \'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris.\';\\n\\nexport default {\\n  component: DismissableNotification,\\n  title: \'Components/DismissableNotification\',\\n  decorators: [withKnobs, (storyFn) => <div style={{ maxWidth: \'400px\' }}>{storyFn()}</div>],\\n};\\n\\nexport const Default = () => (\\n  <DismissableNotification labelText=\\"label\\" closeButtonLabelText=\\"dismiss\\" onClose={onClose}>\\n    {content}\\n  </DismissableNotification>\\n);\\n\\nexport const Warning = () => (\\n  <DismissableNotification labelText=\\"label\\" closeButtonLabelText=\\"dismiss\\" type=\\"warning\\" onClose={onClose}>\\n    {content}\\n  </DismissableNotification>\\n);\\n\\nexport const Error = () => (\\n  <DismissableNotification labelText=\\"label\\" closeButtonLabelText=\\"dismiss\\" type=\\"error\\" onClose={onClose}>\\n    {content}\\n  </DismissableNotification>\\n);\\n\\nexport const Success = () => (\\n  <DismissableNotification labelText=\\"label\\" closeButtonLabelText=\\"dismiss\\" type=\\"success\\" onClose={onClose}>\\n    {content}\\n  </DismissableNotification>\\n);\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"components-dismissablenotification--default":{"startLoc":{"col":23,"line":18},"endLoc":{"col":1,"line":22},"startBody":{"col":23,"line":18},"endBody":{"col":1,"line":22}},"components-dismissablenotification--warning":{"startLoc":{"col":23,"line":24},"endLoc":{"col":1,"line":28},"startBody":{"col":23,"line":24},"endBody":{"col":1,"line":28}},"components-dismissablenotification--error":{"startLoc":{"col":21,"line":30},"endLoc":{"col":1,"line":34},"startBody":{"col":21,"line":30},"endBody":{"col":1,"line":34}},"components-dismissablenotification--success":{"startLoc":{"col":23,"line":36},"endLoc":{"col":1,"line":40},"startBody":{"col":23,"line":36},"endBody":{"col":1,"line":40}}};\n    \nimport React from \'react\';\nimport { action } from \'@storybook/addon-actions\';\nimport { withKnobs } from \'@storybook/addon-knobs\';\n\nimport DismissableNotification from \'./DismissableNotification\';\n\nconst onClose = action(\'closed\');\n\nconst content =\n  \'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris.\';\n\nexport default {parameters: {"storySource":{"source":"import React from \'react\';\\nimport { action } from \'@storybook/addon-actions\';\\nimport { withKnobs } from \'@storybook/addon-knobs\';\\n\\nimport DismissableNotification from \'./DismissableNotification\';\\n\\nconst onClose = action(\'closed\');\\n\\nconst content =\\n  \'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris.\';\\n\\nexport default {\\n  component: DismissableNotification,\\n  title: \'Components/DismissableNotification\',\\n  decorators: [withKnobs, (storyFn) => <div style={{ maxWidth: \'400px\' }}>{storyFn()}</div>],\\n};\\n\\nexport const Default = () => (\\n  <DismissableNotification labelText=\\"label\\" closeButtonLabelText=\\"dismiss\\" onClose={onClose}>\\n    {content}\\n  </DismissableNotification>\\n);\\n\\nexport const Warning = () => (\\n  <DismissableNotification labelText=\\"label\\" closeButtonLabelText=\\"dismiss\\" type=\\"warning\\" onClose={onClose}>\\n    {content}\\n  </DismissableNotification>\\n);\\n\\nexport const Error = () => (\\n  <DismissableNotification labelText=\\"label\\" closeButtonLabelText=\\"dismiss\\" type=\\"error\\" onClose={onClose}>\\n    {content}\\n  </DismissableNotification>\\n);\\n\\nexport const Success = () => (\\n  <DismissableNotification labelText=\\"label\\" closeButtonLabelText=\\"dismiss\\" type=\\"success\\" onClose={onClose}>\\n    {content}\\n  </DismissableNotification>\\n);\\n","locationsMap":{"components-dismissablenotification--default":{"startLoc":{"col":23,"line":18},"endLoc":{"col":1,"line":22},"startBody":{"col":23,"line":18},"endBody":{"col":1,"line":22}},"components-dismissablenotification--warning":{"startLoc":{"col":23,"line":24},"endLoc":{"col":1,"line":28},"startBody":{"col":23,"line":24},"endBody":{"col":1,"line":28}},"components-dismissablenotification--error":{"startLoc":{"col":21,"line":30},"endLoc":{"col":1,"line":34},"startBody":{"col":21,"line":30},"endBody":{"col":1,"line":34}},"components-dismissablenotification--success":{"startLoc":{"col":23,"line":36},"endLoc":{"col":1,"line":40},"startBody":{"col":23,"line":36},"endBody":{"col":1,"line":40}}}},},\n  component: DismissableNotification,\n  title: \'Components/DismissableNotification\',\n  decorators: [withKnobs, (storyFn) => <div style={{ maxWidth: \'400px\' }}>{storyFn()}</div>],\n};\n\nexport const Default = () => (\n  <DismissableNotification labelText="label" closeButtonLabelText="dismiss" onClose={onClose}>\n    {content}\n  </DismissableNotification>\n);;\n\nexport const Warning = () => (\n  <DismissableNotification labelText="label" closeButtonLabelText="dismiss" type="warning" onClose={onClose}>\n    {content}\n  </DismissableNotification>\n);;\n\nexport const Error = () => (\n  <DismissableNotification labelText="label" closeButtonLabelText="dismiss" type="error" onClose={onClose}>\n    {content}\n  </DismissableNotification>\n);;\n\nexport const Success = () => (\n  <DismissableNotification labelText="label" closeButtonLabelText="dismiss" type="success" onClose={onClose}>\n    {content}\n  </DismissableNotification>\n);\n',locationsMap:{"components-dismissablenotification--default":{startLoc:{col:23,line:26},endLoc:{col:1,line:30},startBody:{col:23,line:26},endBody:{col:1,line:30}},"components-dismissablenotification--warning":{startLoc:{col:23,line:32},endLoc:{col:1,line:36},startBody:{col:23,line:32},endBody:{col:1,line:36}},"components-dismissablenotification--error":{startLoc:{col:21,line:38},endLoc:{col:1,line:42},startBody:{col:21,line:38},endBody:{col:1,line:42}},"components-dismissablenotification--success":{startLoc:{col:23,line:44},endLoc:{col:1,line:48},startBody:{col:23,line:44},endBody:{col:1,line:48}}}}},"storySource",{source:'import React from \'react\';\nimport { action } from \'@storybook/addon-actions\';\nimport { withKnobs } from \'@storybook/addon-knobs\';\n\nimport DismissableNotification from \'./DismissableNotification\';\n\nconst onClose = action(\'closed\');\n\nconst content =\n  \'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris.\';\n\nexport default {\n  component: DismissableNotification,\n  title: \'Components/DismissableNotification\',\n  decorators: [withKnobs, (storyFn) => <div style={{ maxWidth: \'400px\' }}>{storyFn()}</div>],\n};\n\nexport const Default = () => (\n  <DismissableNotification labelText="label" closeButtonLabelText="dismiss" onClose={onClose}>\n    {content}\n  </DismissableNotification>\n);\n\nexport const Warning = () => (\n  <DismissableNotification labelText="label" closeButtonLabelText="dismiss" type="warning" onClose={onClose}>\n    {content}\n  </DismissableNotification>\n);\n\nexport const Error = () => (\n  <DismissableNotification labelText="label" closeButtonLabelText="dismiss" type="error" onClose={onClose}>\n    {content}\n  </DismissableNotification>\n);\n\nexport const Success = () => (\n  <DismissableNotification labelText="label" closeButtonLabelText="dismiss" type="success" onClose={onClose}>\n    {content}\n  </DismissableNotification>\n);\n',locationsMap:{"components-dismissablenotification--default":{startLoc:{col:23,line:18},endLoc:{col:1,line:22},startBody:{col:23,line:18},endBody:{col:1,line:22}},"components-dismissablenotification--warning":{startLoc:{col:23,line:24},endLoc:{col:1,line:28},startBody:{col:23,line:24},endBody:{col:1,line:28}},"components-dismissablenotification--error":{startLoc:{col:21,line:30},endLoc:{col:1,line:34},startBody:{col:21,line:30},endBody:{col:1,line:34}},"components-dismissablenotification--success":{startLoc:{col:23,line:36},endLoc:{col:1,line:40},startBody:{col:23,line:36},endBody:{col:1,line:40}}}}),component:notification_DismissableNotification,title:"Components/DismissableNotification",decorators:[addon_knobs_dist.withKnobs,function(storyFn){return react_default.a.createElement("div",{style:{maxWidth:"400px"}},storyFn())}]},react_default.a.createElement(notification_DismissableNotification,{labelText:"label",closeButtonLabelText:"dismiss",onClose:DismissableNotification_stories_onClose},content)),Default=function(){return _ref};Default.displayName="Default";var _ref2=react_default.a.createElement(notification_DismissableNotification,{labelText:"label",closeButtonLabelText:"dismiss",type:"warning",onClose:DismissableNotification_stories_onClose},content),Warning=function(){return _ref2};Warning.displayName="Warning";var _ref3=react_default.a.createElement(notification_DismissableNotification,{labelText:"label",closeButtonLabelText:"dismiss",type:"error",onClose:DismissableNotification_stories_onClose},content),Error=function(){return _ref3};Error.displayName="Error";var _ref4=react_default.a.createElement(notification_DismissableNotification,{labelText:"label",closeButtonLabelText:"dismiss",type:"success",onClose:DismissableNotification_stories_onClose},content),Success=function(){return _ref4};Success.displayName="Success",Default.__docgenInfo={description:"",methods:[],displayName:"Default"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/notification/DismissableNotification.stories.tsx"]={name:"Default",docgenInfo:Default.__docgenInfo,path:"src/components/notification/DismissableNotification.stories.tsx"}),Warning.__docgenInfo={description:"",methods:[],displayName:"Warning"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/notification/DismissableNotification.stories.tsx"]={name:"Warning",docgenInfo:Warning.__docgenInfo,path:"src/components/notification/DismissableNotification.stories.tsx"}),Error.__docgenInfo={description:"",methods:[],displayName:"Error"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/notification/DismissableNotification.stories.tsx"]={name:"Error",docgenInfo:Error.__docgenInfo,path:"src/components/notification/DismissableNotification.stories.tsx"}),Success.__docgenInfo={description:"",methods:[],displayName:"Success"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/notification/DismissableNotification.stories.tsx"]={name:"Success",docgenInfo:Success.__docgenInfo,path:"src/components/notification/DismissableNotification.stories.tsx"})},1551:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ExampleView",(function(){return ExampleView}));var defineProperty=__webpack_require__(17),react=__webpack_require__(0),react_default=__webpack_require__.n(react),placeholder_1920x1080=__webpack_require__(83),placeholder_1920x1080_default=__webpack_require__.n(placeholder_1920x1080),placeholder_2_1920x1080=__webpack_require__(568),placeholder_2_1920x1080_default=__webpack_require__.n(placeholder_2_1920x1080),placeholder_1400x1164=__webpack_require__(569),placeholder_1400x1164_default=__webpack_require__.n(placeholder_1400x1164),Section=__webpack_require__(36),Columns_module=__webpack_require__(570),Columns_module_default=__webpack_require__.n(Columns_module),Columns=function(_ref){var children=_ref.children;return react_default.a.createElement("div",{className:Columns_module_default.a.columns},children)};Columns.displayName="Columns",Columns.__docgenInfo={description:"",methods:[],displayName:"Columns"};var columns_Columns=Columns;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/columns/Columns.tsx"]={name:"Columns",docgenInfo:Columns.__docgenInfo,path:"src/components/columns/Columns.tsx"});var _parameters,ImageWithCard=__webpack_require__(74),TextInput=__webpack_require__(67),Button=__webpack_require__(54),icons=__webpack_require__(43),ExampleViews_stories_ref=(__webpack_exports__.default={title:"Examples/Views",parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import React from \'react\';\\n\\nimport imageFile from \'../assets/img/placeholder_1920x1080.jpg\';\\nimport imageFile2 from \'../assets/img/placeholder_2_1920x1080.jpg\';\\nimport imageFile3 from \'../assets/img/placeholder_1400x1164.jpg\';\\nimport Section from \'../components/section/Section\';\\nimport Columns from \'../components/columns/Columns\';\\nimport ImageWithCard from \'../components/imagewithcard/ImageWithCard\';\\nimport TextInput from \'../components/textinput/TextInput\';\\nimport Button from \'../components/button/Button\';\\nimport { IconAngleRight } from \'../icons\';\\n\\nexport default {\\n  title: \'Examples/Views\',\\n  parameters: {\\n    layout: \'fullscreen\',\\n    previewTabs: {\\n      \'storybook/docs/panel\': {\\n        hidden: true,\\n      },\\n    },\\n  },\\n};\\n\\nexport const ExampleView = () => (\\n  <>\\n    <Section color=\\"secondary\\" korosType=\\"basic\\">\\n      <h1>Lorem ipsum dolor sit</h1>\\n      <p>\\n        Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\\n        aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi\\n        consequat.\\n      </p>\\n    </Section>\\n    <ImageWithCard fullWidth src={imageFile2} />\\n    <Section>\\n      <h2>Lorem ipsum</h2>\\n      <Columns>\\n        <div>\\n          <p>\\n            Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\\n            aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi\\n            consequat.\\n          </p>\\n          <TextInput id=\\"myInput\\" labelText=\\"Lorem ipsum:\\" placeholder=\\"dolor sit\\" />\\n          <br />\\n          <Button variant=\\"secondary\\">Lorem</Button>\\n        </div>\\n        <div>\\n          <p>\\n            Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\\n            aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi\\n            consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\\n            Excepteur sint obcaecat cupiditat non proident, sunt in culpa qui officia deserunt mollit anim id est\\n            laborum.\\n          </p>\\n        </div>\\n      </Columns>\\n    </Section>\\n    <ImageWithCard fullWidth color=\\"tertiary\\" cardLayout=\\"split\\" cardAlignment=\\"right\\" src={imageFile}>\\n      <h2>Lorem ipsum</h2>\\n      <p>\\n        Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\\n        aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi\\n        consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\\n        Excepteur sint obcaecat cupiditat non proident.\\n      </p>\\n      <Button variant=\\"supplementary\\" iconRight={<IconAngleRight />}>\\n        Ipsum\\n      </Button>\\n    </ImageWithCard>\\n    <Section>\\n      <h2>\\n        Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\\n        aliqua.\\n      </h2>\\n    </Section>\\n    <ImageWithCard color=\\"primary\\" cardLayout=\\"hover\\" src={imageFile3}>\\n      <h2>Lorem ipsum</h2>\\n      <p>\\n        Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\\n        aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi\\n        consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\\n      </p>\\n      <Button iconRight={<IconAngleRight />}>Lorem</Button>\\n    </ImageWithCard>\\n  </>\\n);\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"examples-views--example-view":{"startLoc":{"col":27,"line":25},"endLoc":{"col":1,"line":88},"startBody":{"col":27,"line":25},"endBody":{"col":1,"line":88}}};\n    \nimport React from \'react\';\n\nimport imageFile from \'../assets/img/placeholder_1920x1080.jpg\';\nimport imageFile2 from \'../assets/img/placeholder_2_1920x1080.jpg\';\nimport imageFile3 from \'../assets/img/placeholder_1400x1164.jpg\';\nimport Section from \'../components/section/Section\';\nimport Columns from \'../components/columns/Columns\';\nimport ImageWithCard from \'../components/imagewithcard/ImageWithCard\';\nimport TextInput from \'../components/textinput/TextInput\';\nimport Button from \'../components/button/Button\';\nimport { IconAngleRight } from \'../icons\';\n\nexport default {\n  title: \'Examples/Views\',\n  parameters: {"storySource":{"source":"import React from \'react\';\\n\\nimport imageFile from \'../assets/img/placeholder_1920x1080.jpg\';\\nimport imageFile2 from \'../assets/img/placeholder_2_1920x1080.jpg\';\\nimport imageFile3 from \'../assets/img/placeholder_1400x1164.jpg\';\\nimport Section from \'../components/section/Section\';\\nimport Columns from \'../components/columns/Columns\';\\nimport ImageWithCard from \'../components/imagewithcard/ImageWithCard\';\\nimport TextInput from \'../components/textinput/TextInput\';\\nimport Button from \'../components/button/Button\';\\nimport { IconAngleRight } from \'../icons\';\\n\\nexport default {\\n  title: \'Examples/Views\',\\n  parameters: {\\n    layout: \'fullscreen\',\\n    previewTabs: {\\n      \'storybook/docs/panel\': {\\n        hidden: true,\\n      },\\n    },\\n  },\\n};\\n\\nexport const ExampleView = () => (\\n  <>\\n    <Section color=\\"secondary\\" korosType=\\"basic\\">\\n      <h1>Lorem ipsum dolor sit</h1>\\n      <p>\\n        Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\\n        aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi\\n        consequat.\\n      </p>\\n    </Section>\\n    <ImageWithCard fullWidth src={imageFile2} />\\n    <Section>\\n      <h2>Lorem ipsum</h2>\\n      <Columns>\\n        <div>\\n          <p>\\n            Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\\n            aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi\\n            consequat.\\n          </p>\\n          <TextInput id=\\"myInput\\" labelText=\\"Lorem ipsum:\\" placeholder=\\"dolor sit\\" />\\n          <br />\\n          <Button variant=\\"secondary\\">Lorem</Button>\\n        </div>\\n        <div>\\n          <p>\\n            Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\\n            aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi\\n            consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\\n            Excepteur sint obcaecat cupiditat non proident, sunt in culpa qui officia deserunt mollit anim id est\\n            laborum.\\n          </p>\\n        </div>\\n      </Columns>\\n    </Section>\\n    <ImageWithCard fullWidth color=\\"tertiary\\" cardLayout=\\"split\\" cardAlignment=\\"right\\" src={imageFile}>\\n      <h2>Lorem ipsum</h2>\\n      <p>\\n        Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\\n        aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi\\n        consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\\n        Excepteur sint obcaecat cupiditat non proident.\\n      </p>\\n      <Button variant=\\"supplementary\\" iconRight={<IconAngleRight />}>\\n        Ipsum\\n      </Button>\\n    </ImageWithCard>\\n    <Section>\\n      <h2>\\n        Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\\n        aliqua.\\n      </h2>\\n    </Section>\\n    <ImageWithCard color=\\"primary\\" cardLayout=\\"hover\\" src={imageFile3}>\\n      <h2>Lorem ipsum</h2>\\n      <p>\\n        Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\\n        aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi\\n        consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\\n      </p>\\n      <Button iconRight={<IconAngleRight />}>Lorem</Button>\\n    </ImageWithCard>\\n  </>\\n);\\n","locationsMap":{"examples-views--example-view":{"startLoc":{"col":27,"line":25},"endLoc":{"col":1,"line":88},"startBody":{"col":27,"line":25},"endBody":{"col":1,"line":88}}}},\n    layout: \'fullscreen\',\n    previewTabs: {\n      \'storybook/docs/panel\': {\n        hidden: true,\n      },\n    },\n  },\n};\n\nexport const ExampleView = () => (\n  <>\n    <Section color="secondary" korosType="basic">\n      <h1>Lorem ipsum dolor sit</h1>\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\n        aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi\n        consequat.\n      </p>\n    </Section>\n    <ImageWithCard fullWidth src={imageFile2} />\n    <Section>\n      <h2>Lorem ipsum</h2>\n      <Columns>\n        <div>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\n            aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi\n            consequat.\n          </p>\n          <TextInput id="myInput" labelText="Lorem ipsum:" placeholder="dolor sit" />\n          <br />\n          <Button variant="secondary">Lorem</Button>\n        </div>\n        <div>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\n            aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi\n            consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n            Excepteur sint obcaecat cupiditat non proident, sunt in culpa qui officia deserunt mollit anim id est\n            laborum.\n          </p>\n        </div>\n      </Columns>\n    </Section>\n    <ImageWithCard fullWidth color="tertiary" cardLayout="split" cardAlignment="right" src={imageFile}>\n      <h2>Lorem ipsum</h2>\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\n        aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi\n        consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n        Excepteur sint obcaecat cupiditat non proident.\n      </p>\n      <Button variant="supplementary" iconRight={<IconAngleRight />}>\n        Ipsum\n      </Button>\n    </ImageWithCard>\n    <Section>\n      <h2>\n        Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\n        aliqua.\n      </h2>\n    </Section>\n    <ImageWithCard color="primary" cardLayout="hover" src={imageFile3}>\n      <h2>Lorem ipsum</h2>\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\n        aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi\n        consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n      </p>\n      <Button iconRight={<IconAngleRight />}>Lorem</Button>\n    </ImageWithCard>\n  </>\n);\n',locationsMap:{"examples-views--example-view":{startLoc:{col:27,line:33},endLoc:{col:1,line:96},startBody:{col:27,line:33},endBody:{col:1,line:96}}}}},Object(defineProperty.a)(_parameters,"storySource",{source:"import React from 'react';\n\nimport imageFile from '../assets/img/placeholder_1920x1080.jpg';\nimport imageFile2 from '../assets/img/placeholder_2_1920x1080.jpg';\nimport imageFile3 from '../assets/img/placeholder_1400x1164.jpg';\nimport Section from '../components/section/Section';\nimport Columns from '../components/columns/Columns';\nimport ImageWithCard from '../components/imagewithcard/ImageWithCard';\nimport TextInput from '../components/textinput/TextInput';\nimport Button from '../components/button/Button';\nimport { IconAngleRight } from '../icons';\n\nexport default {\n  title: 'Examples/Views',\n  parameters: {\n    layout: 'fullscreen',\n    previewTabs: {\n      'storybook/docs/panel': {\n        hidden: true,\n      },\n    },\n  },\n};\n\nexport const ExampleView = () => (\n  <>\n    <Section color=\"secondary\" korosType=\"basic\">\n      <h1>Lorem ipsum dolor sit</h1>\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\n        aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi\n        consequat.\n      </p>\n    </Section>\n    <ImageWithCard fullWidth src={imageFile2} />\n    <Section>\n      <h2>Lorem ipsum</h2>\n      <Columns>\n        <div>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\n            aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi\n            consequat.\n          </p>\n          <TextInput id=\"myInput\" labelText=\"Lorem ipsum:\" placeholder=\"dolor sit\" />\n          <br />\n          <Button variant=\"secondary\">Lorem</Button>\n        </div>\n        <div>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\n            aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi\n            consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n            Excepteur sint obcaecat cupiditat non proident, sunt in culpa qui officia deserunt mollit anim id est\n            laborum.\n          </p>\n        </div>\n      </Columns>\n    </Section>\n    <ImageWithCard fullWidth color=\"tertiary\" cardLayout=\"split\" cardAlignment=\"right\" src={imageFile}>\n      <h2>Lorem ipsum</h2>\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\n        aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi\n        consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n        Excepteur sint obcaecat cupiditat non proident.\n      </p>\n      <Button variant=\"supplementary\" iconRight={<IconAngleRight />}>\n        Ipsum\n      </Button>\n    </ImageWithCard>\n    <Section>\n      <h2>\n        Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\n        aliqua.\n      </h2>\n    </Section>\n    <ImageWithCard color=\"primary\" cardLayout=\"hover\" src={imageFile3}>\n      <h2>Lorem ipsum</h2>\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna\n        aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi\n        consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n      </p>\n      <Button iconRight={<IconAngleRight />}>Lorem</Button>\n    </ImageWithCard>\n  </>\n);\n",locationsMap:{"examples-views--example-view":{startLoc:{col:27,line:25},endLoc:{col:1,line:88},startBody:{col:27,line:25},endBody:{col:1,line:88}}}}),Object(defineProperty.a)(_parameters,"layout","fullscreen"),Object(defineProperty.a)(_parameters,"previewTabs",{"storybook/docs/panel":{hidden:!0}}),_parameters)},react_default.a.createElement(Section.a,{color:"secondary",korosType:"basic"},react_default.a.createElement("h1",null,"Lorem ipsum dolor sit"),react_default.a.createElement("p",null,"Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi consequat."))),_ref2=react_default.a.createElement(ImageWithCard.a,{fullWidth:!0,src:placeholder_2_1920x1080_default.a}),_ref3=react_default.a.createElement(Section.a,null,react_default.a.createElement("h2",null,"Lorem ipsum"),react_default.a.createElement(columns_Columns,null,react_default.a.createElement("div",null,react_default.a.createElement("p",null,"Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi consequat."),react_default.a.createElement(TextInput.a,{id:"myInput",labelText:"Lorem ipsum:",placeholder:"dolor sit"}),react_default.a.createElement("br",null),react_default.a.createElement(Button.a,{variant:"secondary"},"Lorem")),react_default.a.createElement("div",null,react_default.a.createElement("p",null,"Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint obcaecat cupiditat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.")))),_ref4=react_default.a.createElement(ImageWithCard.a,{fullWidth:!0,color:"tertiary",cardLayout:"split",cardAlignment:"right",src:placeholder_1920x1080_default.a},react_default.a.createElement("h2",null,"Lorem ipsum"),react_default.a.createElement("p",null,"Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint obcaecat cupiditat non proident."),react_default.a.createElement(Button.a,{variant:"supplementary",iconRight:react_default.a.createElement(icons.a,null)},"Ipsum")),_ref5=react_default.a.createElement(Section.a,null,react_default.a.createElement("h2",null,"Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua.")),_ref6=react_default.a.createElement(ImageWithCard.a,{color:"primary",cardLayout:"hover",src:placeholder_1400x1164_default.a},react_default.a.createElement("h2",null,"Lorem ipsum"),react_default.a.createElement("p",null,"Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi consequat. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur."),react_default.a.createElement(Button.a,{iconRight:react_default.a.createElement(icons.a,null)},"Lorem")),ExampleView=function(){return react_default.a.createElement(react_default.a.Fragment,null,ExampleViews_stories_ref,_ref2,_ref3,_ref4,_ref5,_ref6)};ExampleView.__docgenInfo={description:"",methods:[],displayName:"ExampleView"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/examples/ExampleViews.stories.tsx"]={name:"ExampleView",docgenInfo:ExampleView.__docgenInfo,path:"src/examples/ExampleViews.stories.tsx"})},1552:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"Selected",(function(){return Selected})),__webpack_require__.d(__webpack_exports__,"Disabled",(function(){return Disabled})),__webpack_require__.d(__webpack_exports__,"SelectedDisabled",(function(){return SelectedDisabled})),__webpack_require__.d(__webpack_exports__,"Custom",(function(){return Custom})),__webpack_require__.d(__webpack_exports__,"Playground",(function(){return Playground}));__webpack_require__(13),__webpack_require__(4);var objectSpread2=__webpack_require__(60),slicedToArray=__webpack_require__(73),defineProperty=__webpack_require__(17),react=__webpack_require__(0),react_default=__webpack_require__.n(react),dist=__webpack_require__(1),blocks=__webpack_require__(14),objectWithoutProperties=(__webpack_require__(3),__webpack_require__(99)),Checkbox_module=__webpack_require__(242),Checkbox_module_default=__webpack_require__.n(Checkbox_module),classNames=__webpack_require__(31),Checkbox=react_default.a.forwardRef((function(_ref,ref){var _ref$checked=_ref.checked,checked=void 0!==_ref$checked&&_ref$checked,className=_ref.className,_ref$disabled=_ref.disabled,disabled=void 0!==_ref$disabled&&_ref$disabled,id=_ref.id,labelText=_ref.labelText,_ref$onChange=_ref.onChange,onChange=void 0===_ref$onChange?function(){return null}:_ref$onChange,style=_ref.style,value=_ref.value,rest=Object(objectWithoutProperties.a)(_ref,["checked","className","disabled","id","labelText","onChange","style","value"]);return react_default.a.createElement("div",{className:Object(classNames.a)(Checkbox_module_default.a.checkbox,className),style:style},react_default.a.createElement("input",Object.assign({ref:ref,id:id,className:Object(classNames.a)(Checkbox_module_default.a.input),onChange:onChange,value:value,type:"checkbox",disabled:disabled,checked:checked,"aria-checked":checked},rest)),react_default.a.createElement("label",{htmlFor:id,className:Object(classNames.a)(Checkbox_module_default.a.label)},labelText))}));Checkbox.__docgenInfo={description:"",methods:[],displayName:"Checkbox",props:{checked:{defaultValue:{value:"false",computed:!1},required:!1,tsType:{name:"boolean"},description:"If `true`, the component is checked"},disabled:{defaultValue:{value:"false",computed:!1},required:!1,tsType:{name:"boolean"},description:"If `true`, the checkbox will be disabled"},onChange:{defaultValue:{value:"() => null",computed:!1},required:!1,tsType:{name:"ChangeEventHandler",elements:[{name:"HTMLInputElement"}],raw:"ChangeEventHandler<HTMLInputElement>"},description:"Callback fired when the state is changed"},className:{required:!1,tsType:{name:"string"},description:"Additional class names to apply to the checkbox"},id:{required:!0,tsType:{name:"string"},description:"The id of the input element"},labelText:{required:!1,tsType:{name:"string"},description:"The label for the checkbox"},style:{required:!1,tsType:{name:"CSSProperties"},description:"Override or extend the styles applied to the component. See checkbox [tokens](https://city-of-helsinki.github.io/helsinki-design-system/components/checkbox#tokens) for available CSS variables"},value:{required:!1,tsType:{name:"string"},description:"The value of the component"}}};var checkbox_Checkbox=Checkbox;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/checkbox/Checkbox.tsx"]={name:"Checkbox",docgenInfo:Checkbox.__docgenInfo,path:"src/components/checkbox/Checkbox.tsx"});var _parameters,Checkbox_stories_ref=react_default.a.createElement(blocks.Title,null,"Props"),_ref2=react_default.a.createElement(blocks.Subtitle,null,"Props, which are not mentioned below, are passed to the native element"),_ref3=react_default.a.createElement(blocks.Props,null),_ref4=react_default.a.createElement(blocks.Stories,{title:"Examples",includePrimary:!0}),_ref5=(__webpack_exports__.default={component:checkbox_Checkbox,title:"Components/Checkbox",parameters:(_parameters={storySource:{source:"\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = \"import React, { useState } from 'react';\\nimport { color, number } from '@storybook/addon-knobs';\\nimport { Props, Stories, Subtitle, Title } from '@storybook/addon-docs/dist/blocks';\\n\\nimport Checkbox from './Checkbox';\\n\\nexport default {\\n  component: Checkbox,\\n  title: 'Components/Checkbox',\\n  parameters: {\\n    docs: {\\n      page: () => (\\n        <>\\n          <Title>Props</Title>\\n          <Subtitle>Props, which are not mentioned below, are passed to the native element</Subtitle>\\n          <Props />\\n          <Stories title=\\\"Examples\\\" includePrimary />\\n        </>\\n      ),\\n    },\\n  },\\n};\\n\\nexport const Default = () => <Checkbox id=\\\"checkbox\\\" labelText=\\\"Label\\\" />;\\n\\nexport const Selected = () => <Checkbox id=\\\"checkbox2\\\" labelText=\\\"Label\\\" checked />;\\n\\nexport const Disabled = () => <Checkbox id=\\\"checkbox3\\\" labelText=\\\"Label\\\" disabled />;\\n\\nexport const SelectedDisabled = () => <Checkbox id=\\\"checkbox4\\\" labelText=\\\"Label\\\" checked disabled />;\\n\\nSelectedDisabled.story = {\\n  name: 'Selected & disabled',\\n};\\n\\nexport const Custom = () => {\\n  const [checked, setChecked] = useState(false);\\n  const customStyles = {\\n    '--size': '40px',\\n    '--icon-scale': 0.6,\\n    '--border-width': '3px',\\n    '--outline-width': '4px',\\n    '--background-selected': 'var(--color-success)',\\n    '--background-hover': 'var(--color-success-dark)',\\n    '--border-color-selected': 'var(--color-success)',\\n    '--border-color-selected-hover': 'var(--color-success-dark)',\\n    '--border-color-selected-focus': 'var(--color-success)',\\n    '--focus-outline-color': 'var(--color-black-20)',\\n  } as React.CSSProperties;\\n  return (\\n    <Checkbox\\n      id=\\\"checkbox5\\\"\\n      labelText=\\\"Label\\\"\\n      style={customStyles}\\n      checked={checked}\\n      onChange={() => setChecked(!checked)}\\n    />\\n  );\\n};\\n\\nCustom.story = {\\n  name: 'With custom styles',\\n};\\n\\nexport const Playground = () => {\\n  const [checkedItems, setCheckedItems] = useState({});\\n  const options = ['Option 1', 'Option 2', 'Option 3'];\\n  const groupSize = 'Size';\\n  const groupColor = 'Color';\\n\\n  const handleChange = (e) => {\\n    const item = e.target.name;\\n    const isChecked = e.target.checked;\\n    setCheckedItems({ ...checkedItems, [item]: isChecked });\\n  };\\n  const size = number(\\n    'Size',\\n    24,\\n    {\\n      range: true,\\n      min: 10,\\n      max: 100,\\n      step: 1,\\n    },\\n    groupSize,\\n  );\\n  const iconScale = number(\\n    'Icon scale',\\n    0.75,\\n    {\\n      range: true,\\n      min: 0.1,\\n      max: 0.9,\\n      step: 0.05,\\n    },\\n    groupSize,\\n  );\\n  const borderWidth = number(\\n    'Border width',\\n    2,\\n    {\\n      range: true,\\n      min: 1,\\n      max: 10,\\n      step: 1,\\n    },\\n    groupSize,\\n  );\\n  const outlineWidth = number(\\n    'Outline width',\\n    3,\\n    {\\n      range: true,\\n      min: 1,\\n      max: 10,\\n      step: 1,\\n    },\\n    groupSize,\\n  );\\n  const backgroundUnselected = color('Background - unselected', 'rgba(0, 0, 0, 0)', groupColor);\\n  const backgroundSelected = color('Background - selected', '#0000bf', groupColor);\\n  const backgroundHover = color('Background - hover', '#000098', groupColor);\\n  const backgroundDisabled = color('Background - disabled', '#e5e5e5', groupColor);\\n  const borderSelected = color('Border - selected', '#0000bf', groupColor);\\n  const borderSelectedHover = color('Border - selected - hover', '#000098', groupColor);\\n  const borderSelectedFocus = color('Border - selected - focus', '#0000bf', groupColor);\\n  const borderUnselected = color('Border - unselected', '#808080', groupColor);\\n  const borderUnselectedHover = color('Border - unselected - hover', '#1a1a1a', groupColor);\\n  const borderUnselectedFocus = color('Border - unselected - focus', '#000000', groupColor);\\n  const borderDisabled = color('Border - disabled', '#e5e5e5', groupColor);\\n  const focusOutline = color('Focus outline', '#0072c6', groupColor);\\n  const iconUnselected = color('Icon - unselected', 'rgba(0, 0, 0, 0)', groupColor);\\n  const iconSelected = color('Icon - selected', '#ffffff', groupColor);\\n  const iconDisabled = color('Icon - disabled', '#ffffff', groupColor);\\n  const labelDefault = color('Label', '#1a1a1a', groupColor);\\n  const labelDisabled = color('Label - disabled', '#999898', groupColor);\\n\\n  const styles = {\\n    '--size': `${size}px`,\\n    '--icon-scale': iconScale,\\n    '--border-width': `${borderWidth}px`,\\n    '--outline-width': `${outlineWidth}px`,\\n    '--background-unselected': backgroundUnselected,\\n    '--background-selected': backgroundSelected,\\n    '--background-hover': backgroundHover,\\n    '--background-disabled': backgroundDisabled,\\n    '--border-color-selected': borderSelected,\\n    '--border-color-selected-hover': borderSelectedHover,\\n    '--border-color-selected-focus': borderSelectedFocus,\\n    '--border-color-unselected': borderUnselected,\\n    '--border-color-unselected-hover': borderUnselectedHover,\\n    '--border-color-unselected-focus': borderUnselectedFocus,\\n    '--border-color-disabled': borderDisabled,\\n    '--focus-outline-color': focusOutline,\\n    '--icon-color-unselected': iconUnselected,\\n    '--icon-color-selected': iconSelected,\\n    '--icon-color-disabled': iconDisabled,\\n    '--label-color': labelDefault,\\n    '--label-color-disabled': labelDisabled,\\n  } as React.CSSProperties;\\n\\n  return (\\n    <>\\n      {options.map((item) => (\\n        <Checkbox\\n          key={`checkbox-${item}`}\\n          id={`checkbox-${item}`}\\n          labelText={item}\\n          name={item}\\n          checked={checkedItems[item]}\\n          onChange={handleChange}\\n          style={styles}\\n        />\\n      ))}\\n      <Checkbox id=\\\"checkbox7\\\" labelText=\\\"Option 4\\\" style={styles} disabled />\\n      <Checkbox id=\\\"checkbox8\\\" labelText=\\\"Option 5\\\" style={styles} checked disabled />\\n    </>\\n  );\\n};\\n\\nPlayground.story = {\\n  parameters: {\\n    previewTabs: {\\n      'storybook/docs/panel': {\\n        hidden: true,\\n      },\\n    },\\n    docs: {\\n      disable: true,\\n    },\\n  },\\n};\\n\";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {\"components-checkbox--default\":{\"startLoc\":{\"col\":23,\"line\":24},\"endLoc\":{\"col\":73,\"line\":24},\"startBody\":{\"col\":23,\"line\":24},\"endBody\":{\"col\":73,\"line\":24}},\"components-checkbox--selected\":{\"startLoc\":{\"col\":24,\"line\":26},\"endLoc\":{\"col\":83,\"line\":26},\"startBody\":{\"col\":24,\"line\":26},\"endBody\":{\"col\":83,\"line\":26}},\"components-checkbox--disabled\":{\"startLoc\":{\"col\":24,\"line\":28},\"endLoc\":{\"col\":84,\"line\":28},\"startBody\":{\"col\":24,\"line\":28},\"endBody\":{\"col\":84,\"line\":28}},\"components-checkbox--selected-disabled\":{\"startLoc\":{\"col\":32,\"line\":30},\"endLoc\":{\"col\":100,\"line\":30},\"startBody\":{\"col\":32,\"line\":30},\"endBody\":{\"col\":100,\"line\":30}},\"components-checkbox--custom\":{\"startLoc\":{\"col\":22,\"line\":36},\"endLoc\":{\"col\":1,\"line\":59},\"startBody\":{\"col\":22,\"line\":36},\"endBody\":{\"col\":1,\"line\":59}},\"components-checkbox--playground\":{\"startLoc\":{\"col\":26,\"line\":65},\"endLoc\":{\"col\":1,\"line\":179},\"startBody\":{\"col\":26,\"line\":65},\"endBody\":{\"col\":1,\"line\":179}}};\n    \nimport React, { useState } from 'react';\nimport { color, number } from '@storybook/addon-knobs';\nimport { Props, Stories, Subtitle, Title } from '@storybook/addon-docs/dist/blocks';\n\nimport Checkbox from './Checkbox';\n\nexport default {\n  component: Checkbox,\n  title: 'Components/Checkbox',\n  parameters: {\"storySource\":{\"source\":\"import React, { useState } from 'react';\\nimport { color, number } from '@storybook/addon-knobs';\\nimport { Props, Stories, Subtitle, Title } from '@storybook/addon-docs/dist/blocks';\\n\\nimport Checkbox from './Checkbox';\\n\\nexport default {\\n  component: Checkbox,\\n  title: 'Components/Checkbox',\\n  parameters: {\\n    docs: {\\n      page: () => (\\n        <>\\n          <Title>Props</Title>\\n          <Subtitle>Props, which are not mentioned below, are passed to the native element</Subtitle>\\n          <Props />\\n          <Stories title=\\\"Examples\\\" includePrimary />\\n        </>\\n      ),\\n    },\\n  },\\n};\\n\\nexport const Default = () => <Checkbox id=\\\"checkbox\\\" labelText=\\\"Label\\\" />;\\n\\nexport const Selected = () => <Checkbox id=\\\"checkbox2\\\" labelText=\\\"Label\\\" checked />;\\n\\nexport const Disabled = () => <Checkbox id=\\\"checkbox3\\\" labelText=\\\"Label\\\" disabled />;\\n\\nexport const SelectedDisabled = () => <Checkbox id=\\\"checkbox4\\\" labelText=\\\"Label\\\" checked disabled />;\\n\\nSelectedDisabled.story = {\\n  name: 'Selected & disabled',\\n};\\n\\nexport const Custom = () => {\\n  const [checked, setChecked] = useState(false);\\n  const customStyles = {\\n    '--size': '40px',\\n    '--icon-scale': 0.6,\\n    '--border-width': '3px',\\n    '--outline-width': '4px',\\n    '--background-selected': 'var(--color-success)',\\n    '--background-hover': 'var(--color-success-dark)',\\n    '--border-color-selected': 'var(--color-success)',\\n    '--border-color-selected-hover': 'var(--color-success-dark)',\\n    '--border-color-selected-focus': 'var(--color-success)',\\n    '--focus-outline-color': 'var(--color-black-20)',\\n  } as React.CSSProperties;\\n  return (\\n    <Checkbox\\n      id=\\\"checkbox5\\\"\\n      labelText=\\\"Label\\\"\\n      style={customStyles}\\n      checked={checked}\\n      onChange={() => setChecked(!checked)}\\n    />\\n  );\\n};\\n\\nCustom.story = {\\n  name: 'With custom styles',\\n};\\n\\nexport const Playground = () => {\\n  const [checkedItems, setCheckedItems] = useState({});\\n  const options = ['Option 1', 'Option 2', 'Option 3'];\\n  const groupSize = 'Size';\\n  const groupColor = 'Color';\\n\\n  const handleChange = (e) => {\\n    const item = e.target.name;\\n    const isChecked = e.target.checked;\\n    setCheckedItems({ ...checkedItems, [item]: isChecked });\\n  };\\n  const size = number(\\n    'Size',\\n    24,\\n    {\\n      range: true,\\n      min: 10,\\n      max: 100,\\n      step: 1,\\n    },\\n    groupSize,\\n  );\\n  const iconScale = number(\\n    'Icon scale',\\n    0.75,\\n    {\\n      range: true,\\n      min: 0.1,\\n      max: 0.9,\\n      step: 0.05,\\n    },\\n    groupSize,\\n  );\\n  const borderWidth = number(\\n    'Border width',\\n    2,\\n    {\\n      range: true,\\n      min: 1,\\n      max: 10,\\n      step: 1,\\n    },\\n    groupSize,\\n  );\\n  const outlineWidth = number(\\n    'Outline width',\\n    3,\\n    {\\n      range: true,\\n      min: 1,\\n      max: 10,\\n      step: 1,\\n    },\\n    groupSize,\\n  );\\n  const backgroundUnselected = color('Background - unselected', 'rgba(0, 0, 0, 0)', groupColor);\\n  const backgroundSelected = color('Background - selected', '#0000bf', groupColor);\\n  const backgroundHover = color('Background - hover', '#000098', groupColor);\\n  const backgroundDisabled = color('Background - disabled', '#e5e5e5', groupColor);\\n  const borderSelected = color('Border - selected', '#0000bf', groupColor);\\n  const borderSelectedHover = color('Border - selected - hover', '#000098', groupColor);\\n  const borderSelectedFocus = color('Border - selected - focus', '#0000bf', groupColor);\\n  const borderUnselected = color('Border - unselected', '#808080', groupColor);\\n  const borderUnselectedHover = color('Border - unselected - hover', '#1a1a1a', groupColor);\\n  const borderUnselectedFocus = color('Border - unselected - focus', '#000000', groupColor);\\n  const borderDisabled = color('Border - disabled', '#e5e5e5', groupColor);\\n  const focusOutline = color('Focus outline', '#0072c6', groupColor);\\n  const iconUnselected = color('Icon - unselected', 'rgba(0, 0, 0, 0)', groupColor);\\n  const iconSelected = color('Icon - selected', '#ffffff', groupColor);\\n  const iconDisabled = color('Icon - disabled', '#ffffff', groupColor);\\n  const labelDefault = color('Label', '#1a1a1a', groupColor);\\n  const labelDisabled = color('Label - disabled', '#999898', groupColor);\\n\\n  const styles = {\\n    '--size': `${size}px`,\\n    '--icon-scale': iconScale,\\n    '--border-width': `${borderWidth}px`,\\n    '--outline-width': `${outlineWidth}px`,\\n    '--background-unselected': backgroundUnselected,\\n    '--background-selected': backgroundSelected,\\n    '--background-hover': backgroundHover,\\n    '--background-disabled': backgroundDisabled,\\n    '--border-color-selected': borderSelected,\\n    '--border-color-selected-hover': borderSelectedHover,\\n    '--border-color-selected-focus': borderSelectedFocus,\\n    '--border-color-unselected': borderUnselected,\\n    '--border-color-unselected-hover': borderUnselectedHover,\\n    '--border-color-unselected-focus': borderUnselectedFocus,\\n    '--border-color-disabled': borderDisabled,\\n    '--focus-outline-color': focusOutline,\\n    '--icon-color-unselected': iconUnselected,\\n    '--icon-color-selected': iconSelected,\\n    '--icon-color-disabled': iconDisabled,\\n    '--label-color': labelDefault,\\n    '--label-color-disabled': labelDisabled,\\n  } as React.CSSProperties;\\n\\n  return (\\n    <>\\n      {options.map((item) => (\\n        <Checkbox\\n          key={`checkbox-${item}`}\\n          id={`checkbox-${item}`}\\n          labelText={item}\\n          name={item}\\n          checked={checkedItems[item]}\\n          onChange={handleChange}\\n          style={styles}\\n        />\\n      ))}\\n      <Checkbox id=\\\"checkbox7\\\" labelText=\\\"Option 4\\\" style={styles} disabled />\\n      <Checkbox id=\\\"checkbox8\\\" labelText=\\\"Option 5\\\" style={styles} checked disabled />\\n    </>\\n  );\\n};\\n\\nPlayground.story = {\\n  parameters: {\\n    previewTabs: {\\n      'storybook/docs/panel': {\\n        hidden: true,\\n      },\\n    },\\n    docs: {\\n      disable: true,\\n    },\\n  },\\n};\\n\",\"locationsMap\":{\"components-checkbox--default\":{\"startLoc\":{\"col\":23,\"line\":24},\"endLoc\":{\"col\":73,\"line\":24},\"startBody\":{\"col\":23,\"line\":24},\"endBody\":{\"col\":73,\"line\":24}},\"components-checkbox--selected\":{\"startLoc\":{\"col\":24,\"line\":26},\"endLoc\":{\"col\":83,\"line\":26},\"startBody\":{\"col\":24,\"line\":26},\"endBody\":{\"col\":83,\"line\":26}},\"components-checkbox--disabled\":{\"startLoc\":{\"col\":24,\"line\":28},\"endLoc\":{\"col\":84,\"line\":28},\"startBody\":{\"col\":24,\"line\":28},\"endBody\":{\"col\":84,\"line\":28}},\"components-checkbox--selected-disabled\":{\"startLoc\":{\"col\":32,\"line\":30},\"endLoc\":{\"col\":100,\"line\":30},\"startBody\":{\"col\":32,\"line\":30},\"endBody\":{\"col\":100,\"line\":30}},\"components-checkbox--custom\":{\"startLoc\":{\"col\":22,\"line\":36},\"endLoc\":{\"col\":1,\"line\":59},\"startBody\":{\"col\":22,\"line\":36},\"endBody\":{\"col\":1,\"line\":59}},\"components-checkbox--playground\":{\"startLoc\":{\"col\":26,\"line\":65},\"endLoc\":{\"col\":1,\"line\":179},\"startBody\":{\"col\":26,\"line\":65},\"endBody\":{\"col\":1,\"line\":179}}}},\n    docs: {\n      page: () => (\n        <>\n          <Title>Props</Title>\n          <Subtitle>Props, which are not mentioned below, are passed to the native element</Subtitle>\n          <Props />\n          <Stories title=\"Examples\" includePrimary />\n        </>\n      ),\n    },\n  },\n};\n\nexport const Default = () => <Checkbox id=\"checkbox\" labelText=\"Label\" />;;\n\nexport const Selected = () => <Checkbox id=\"checkbox2\" labelText=\"Label\" checked />;;\n\nexport const Disabled = () => <Checkbox id=\"checkbox3\" labelText=\"Label\" disabled />;;\n\nexport const SelectedDisabled = () => <Checkbox id=\"checkbox4\" labelText=\"Label\" checked disabled />;;\n\nSelectedDisabled.story = {\n  name: 'Selected & disabled',\n};\n\nexport const Custom = () => {\n  const [checked, setChecked] = useState(false);\n  const customStyles = {\n    '--size': '40px',\n    '--icon-scale': 0.6,\n    '--border-width': '3px',\n    '--outline-width': '4px',\n    '--background-selected': 'var(--color-success)',\n    '--background-hover': 'var(--color-success-dark)',\n    '--border-color-selected': 'var(--color-success)',\n    '--border-color-selected-hover': 'var(--color-success-dark)',\n    '--border-color-selected-focus': 'var(--color-success)',\n    '--focus-outline-color': 'var(--color-black-20)',\n  } as React.CSSProperties;\n  return (\n    <Checkbox\n      id=\"checkbox5\"\n      labelText=\"Label\"\n      style={customStyles}\n      checked={checked}\n      onChange={() => setChecked(!checked)}\n    />\n  );\n};;\n\nCustom.story = {\n  name: 'With custom styles',\n};\n\nexport const Playground = () => {\n  const [checkedItems, setCheckedItems] = useState({});\n  const options = ['Option 1', 'Option 2', 'Option 3'];\n  const groupSize = 'Size';\n  const groupColor = 'Color';\n\n  const handleChange = (e) => {\n    const item = e.target.name;\n    const isChecked = e.target.checked;\n    setCheckedItems({ ...checkedItems, [item]: isChecked });\n  };\n  const size = number(\n    'Size',\n    24,\n    {\n      range: true,\n      min: 10,\n      max: 100,\n      step: 1,\n    },\n    groupSize,\n  );\n  const iconScale = number(\n    'Icon scale',\n    0.75,\n    {\n      range: true,\n      min: 0.1,\n      max: 0.9,\n      step: 0.05,\n    },\n    groupSize,\n  );\n  const borderWidth = number(\n    'Border width',\n    2,\n    {\n      range: true,\n      min: 1,\n      max: 10,\n      step: 1,\n    },\n    groupSize,\n  );\n  const outlineWidth = number(\n    'Outline width',\n    3,\n    {\n      range: true,\n      min: 1,\n      max: 10,\n      step: 1,\n    },\n    groupSize,\n  );\n  const backgroundUnselected = color('Background - unselected', 'rgba(0, 0, 0, 0)', groupColor);\n  const backgroundSelected = color('Background - selected', '#0000bf', groupColor);\n  const backgroundHover = color('Background - hover', '#000098', groupColor);\n  const backgroundDisabled = color('Background - disabled', '#e5e5e5', groupColor);\n  const borderSelected = color('Border - selected', '#0000bf', groupColor);\n  const borderSelectedHover = color('Border - selected - hover', '#000098', groupColor);\n  const borderSelectedFocus = color('Border - selected - focus', '#0000bf', groupColor);\n  const borderUnselected = color('Border - unselected', '#808080', groupColor);\n  const borderUnselectedHover = color('Border - unselected - hover', '#1a1a1a', groupColor);\n  const borderUnselectedFocus = color('Border - unselected - focus', '#000000', groupColor);\n  const borderDisabled = color('Border - disabled', '#e5e5e5', groupColor);\n  const focusOutline = color('Focus outline', '#0072c6', groupColor);\n  const iconUnselected = color('Icon - unselected', 'rgba(0, 0, 0, 0)', groupColor);\n  const iconSelected = color('Icon - selected', '#ffffff', groupColor);\n  const iconDisabled = color('Icon - disabled', '#ffffff', groupColor);\n  const labelDefault = color('Label', '#1a1a1a', groupColor);\n  const labelDisabled = color('Label - disabled', '#999898', groupColor);\n\n  const styles = {\n    '--size': `${size}px`,\n    '--icon-scale': iconScale,\n    '--border-width': `${borderWidth}px`,\n    '--outline-width': `${outlineWidth}px`,\n    '--background-unselected': backgroundUnselected,\n    '--background-selected': backgroundSelected,\n    '--background-hover': backgroundHover,\n    '--background-disabled': backgroundDisabled,\n    '--border-color-selected': borderSelected,\n    '--border-color-selected-hover': borderSelectedHover,\n    '--border-color-selected-focus': borderSelectedFocus,\n    '--border-color-unselected': borderUnselected,\n    '--border-color-unselected-hover': borderUnselectedHover,\n    '--border-color-unselected-focus': borderUnselectedFocus,\n    '--border-color-disabled': borderDisabled,\n    '--focus-outline-color': focusOutline,\n    '--icon-color-unselected': iconUnselected,\n    '--icon-color-selected': iconSelected,\n    '--icon-color-disabled': iconDisabled,\n    '--label-color': labelDefault,\n    '--label-color-disabled': labelDisabled,\n  } as React.CSSProperties;\n\n  return (\n    <>\n      {options.map((item) => (\n        <Checkbox\n          key={`checkbox-${item}`}\n          id={`checkbox-${item}`}\n          labelText={item}\n          name={item}\n          checked={checkedItems[item]}\n          onChange={handleChange}\n          style={styles}\n        />\n      ))}\n      <Checkbox id=\"checkbox7\" labelText=\"Option 4\" style={styles} disabled />\n      <Checkbox id=\"checkbox8\" labelText=\"Option 5\" style={styles} checked disabled />\n    </>\n  );\n};\n\nPlayground.story = {\n  parameters: {\n    previewTabs: {\n      'storybook/docs/panel': {\n        hidden: true,\n      },\n    },\n    docs: {\n      disable: true,\n    },\n  },\n};\n",locationsMap:{"components-checkbox--default":{startLoc:{col:23,line:32},endLoc:{col:73,line:32},startBody:{col:23,line:32},endBody:{col:73,line:32}},"components-checkbox--selected":{startLoc:{col:24,line:34},endLoc:{col:83,line:34},startBody:{col:24,line:34},endBody:{col:83,line:34}},"components-checkbox--disabled":{startLoc:{col:24,line:36},endLoc:{col:84,line:36},startBody:{col:24,line:36},endBody:{col:84,line:36}},"components-checkbox--selected-disabled":{startLoc:{col:32,line:38},endLoc:{col:100,line:38},startBody:{col:32,line:38},endBody:{col:100,line:38}},"components-checkbox--custom":{startLoc:{col:22,line:44},endLoc:{col:1,line:67},startBody:{col:22,line:44},endBody:{col:1,line:67}},"components-checkbox--playground":{startLoc:{col:26,line:73},endLoc:{col:1,line:187},startBody:{col:26,line:73},endBody:{col:1,line:187}}}}},Object(defineProperty.a)(_parameters,"storySource",{source:"import React, { useState } from 'react';\nimport { color, number } from '@storybook/addon-knobs';\nimport { Props, Stories, Subtitle, Title } from '@storybook/addon-docs/dist/blocks';\n\nimport Checkbox from './Checkbox';\n\nexport default {\n  component: Checkbox,\n  title: 'Components/Checkbox',\n  parameters: {\n    docs: {\n      page: () => (\n        <>\n          <Title>Props</Title>\n          <Subtitle>Props, which are not mentioned below, are passed to the native element</Subtitle>\n          <Props />\n          <Stories title=\"Examples\" includePrimary />\n        </>\n      ),\n    },\n  },\n};\n\nexport const Default = () => <Checkbox id=\"checkbox\" labelText=\"Label\" />;\n\nexport const Selected = () => <Checkbox id=\"checkbox2\" labelText=\"Label\" checked />;\n\nexport const Disabled = () => <Checkbox id=\"checkbox3\" labelText=\"Label\" disabled />;\n\nexport const SelectedDisabled = () => <Checkbox id=\"checkbox4\" labelText=\"Label\" checked disabled />;\n\nSelectedDisabled.story = {\n  name: 'Selected & disabled',\n};\n\nexport const Custom = () => {\n  const [checked, setChecked] = useState(false);\n  const customStyles = {\n    '--size': '40px',\n    '--icon-scale': 0.6,\n    '--border-width': '3px',\n    '--outline-width': '4px',\n    '--background-selected': 'var(--color-success)',\n    '--background-hover': 'var(--color-success-dark)',\n    '--border-color-selected': 'var(--color-success)',\n    '--border-color-selected-hover': 'var(--color-success-dark)',\n    '--border-color-selected-focus': 'var(--color-success)',\n    '--focus-outline-color': 'var(--color-black-20)',\n  } as React.CSSProperties;\n  return (\n    <Checkbox\n      id=\"checkbox5\"\n      labelText=\"Label\"\n      style={customStyles}\n      checked={checked}\n      onChange={() => setChecked(!checked)}\n    />\n  );\n};\n\nCustom.story = {\n  name: 'With custom styles',\n};\n\nexport const Playground = () => {\n  const [checkedItems, setCheckedItems] = useState({});\n  const options = ['Option 1', 'Option 2', 'Option 3'];\n  const groupSize = 'Size';\n  const groupColor = 'Color';\n\n  const handleChange = (e) => {\n    const item = e.target.name;\n    const isChecked = e.target.checked;\n    setCheckedItems({ ...checkedItems, [item]: isChecked });\n  };\n  const size = number(\n    'Size',\n    24,\n    {\n      range: true,\n      min: 10,\n      max: 100,\n      step: 1,\n    },\n    groupSize,\n  );\n  const iconScale = number(\n    'Icon scale',\n    0.75,\n    {\n      range: true,\n      min: 0.1,\n      max: 0.9,\n      step: 0.05,\n    },\n    groupSize,\n  );\n  const borderWidth = number(\n    'Border width',\n    2,\n    {\n      range: true,\n      min: 1,\n      max: 10,\n      step: 1,\n    },\n    groupSize,\n  );\n  const outlineWidth = number(\n    'Outline width',\n    3,\n    {\n      range: true,\n      min: 1,\n      max: 10,\n      step: 1,\n    },\n    groupSize,\n  );\n  const backgroundUnselected = color('Background - unselected', 'rgba(0, 0, 0, 0)', groupColor);\n  const backgroundSelected = color('Background - selected', '#0000bf', groupColor);\n  const backgroundHover = color('Background - hover', '#000098', groupColor);\n  const backgroundDisabled = color('Background - disabled', '#e5e5e5', groupColor);\n  const borderSelected = color('Border - selected', '#0000bf', groupColor);\n  const borderSelectedHover = color('Border - selected - hover', '#000098', groupColor);\n  const borderSelectedFocus = color('Border - selected - focus', '#0000bf', groupColor);\n  const borderUnselected = color('Border - unselected', '#808080', groupColor);\n  const borderUnselectedHover = color('Border - unselected - hover', '#1a1a1a', groupColor);\n  const borderUnselectedFocus = color('Border - unselected - focus', '#000000', groupColor);\n  const borderDisabled = color('Border - disabled', '#e5e5e5', groupColor);\n  const focusOutline = color('Focus outline', '#0072c6', groupColor);\n  const iconUnselected = color('Icon - unselected', 'rgba(0, 0, 0, 0)', groupColor);\n  const iconSelected = color('Icon - selected', '#ffffff', groupColor);\n  const iconDisabled = color('Icon - disabled', '#ffffff', groupColor);\n  const labelDefault = color('Label', '#1a1a1a', groupColor);\n  const labelDisabled = color('Label - disabled', '#999898', groupColor);\n\n  const styles = {\n    '--size': `${size}px`,\n    '--icon-scale': iconScale,\n    '--border-width': `${borderWidth}px`,\n    '--outline-width': `${outlineWidth}px`,\n    '--background-unselected': backgroundUnselected,\n    '--background-selected': backgroundSelected,\n    '--background-hover': backgroundHover,\n    '--background-disabled': backgroundDisabled,\n    '--border-color-selected': borderSelected,\n    '--border-color-selected-hover': borderSelectedHover,\n    '--border-color-selected-focus': borderSelectedFocus,\n    '--border-color-unselected': borderUnselected,\n    '--border-color-unselected-hover': borderUnselectedHover,\n    '--border-color-unselected-focus': borderUnselectedFocus,\n    '--border-color-disabled': borderDisabled,\n    '--focus-outline-color': focusOutline,\n    '--icon-color-unselected': iconUnselected,\n    '--icon-color-selected': iconSelected,\n    '--icon-color-disabled': iconDisabled,\n    '--label-color': labelDefault,\n    '--label-color-disabled': labelDisabled,\n  } as React.CSSProperties;\n\n  return (\n    <>\n      {options.map((item) => (\n        <Checkbox\n          key={`checkbox-${item}`}\n          id={`checkbox-${item}`}\n          labelText={item}\n          name={item}\n          checked={checkedItems[item]}\n          onChange={handleChange}\n          style={styles}\n        />\n      ))}\n      <Checkbox id=\"checkbox7\" labelText=\"Option 4\" style={styles} disabled />\n      <Checkbox id=\"checkbox8\" labelText=\"Option 5\" style={styles} checked disabled />\n    </>\n  );\n};\n\nPlayground.story = {\n  parameters: {\n    previewTabs: {\n      'storybook/docs/panel': {\n        hidden: true,\n      },\n    },\n    docs: {\n      disable: true,\n    },\n  },\n};\n",locationsMap:{"components-checkbox--default":{startLoc:{col:23,line:24},endLoc:{col:73,line:24},startBody:{col:23,line:24},endBody:{col:73,line:24}},"components-checkbox--selected":{startLoc:{col:24,line:26},endLoc:{col:83,line:26},startBody:{col:24,line:26},endBody:{col:83,line:26}},"components-checkbox--disabled":{startLoc:{col:24,line:28},endLoc:{col:84,line:28},startBody:{col:24,line:28},endBody:{col:84,line:28}},"components-checkbox--selected-disabled":{startLoc:{col:32,line:30},endLoc:{col:100,line:30},startBody:{col:32,line:30},endBody:{col:100,line:30}},"components-checkbox--custom":{startLoc:{col:22,line:36},endLoc:{col:1,line:59},startBody:{col:22,line:36},endBody:{col:1,line:59}},"components-checkbox--playground":{startLoc:{col:26,line:65},endLoc:{col:1,line:179},startBody:{col:26,line:65},endBody:{col:1,line:179}}}}),Object(defineProperty.a)(_parameters,"docs",{page:function page(){return react_default.a.createElement(react_default.a.Fragment,null,Checkbox_stories_ref,_ref2,_ref3,_ref4)}}),_parameters)},react_default.a.createElement(checkbox_Checkbox,{id:"checkbox",labelText:"Label"})),Default=function(){return _ref5};Default.displayName="Default";var _ref6=react_default.a.createElement(checkbox_Checkbox,{id:"checkbox2",labelText:"Label",checked:!0}),Selected=function(){return _ref6};Selected.displayName="Selected";var _ref7=react_default.a.createElement(checkbox_Checkbox,{id:"checkbox3",labelText:"Label",disabled:!0}),Disabled=function(){return _ref7};Disabled.displayName="Disabled";var _ref8=react_default.a.createElement(checkbox_Checkbox,{id:"checkbox4",labelText:"Label",checked:!0,disabled:!0}),SelectedDisabled=function(){return _ref8};SelectedDisabled.displayName="SelectedDisabled",SelectedDisabled.story={name:"Selected & disabled"};var Custom=function(){var _useState=Object(react.useState)(!1),_useState2=Object(slicedToArray.a)(_useState,2),checked=_useState2[0],setChecked=_useState2[1];return react_default.a.createElement(checkbox_Checkbox,{id:"checkbox5",labelText:"Label",style:{"--size":"40px","--icon-scale":.6,"--border-width":"3px","--outline-width":"4px","--background-selected":"var(--color-success)","--background-hover":"var(--color-success-dark)","--border-color-selected":"var(--color-success)","--border-color-selected-hover":"var(--color-success-dark)","--border-color-selected-focus":"var(--color-success)","--focus-outline-color":"var(--color-black-20)"},checked:checked,onChange:function onChange(){return setChecked(!checked)}})};Custom.displayName="Custom",Custom.story={name:"With custom styles"};var Playground=function(){var _useState3=Object(react.useState)({}),_useState4=Object(slicedToArray.a)(_useState3,2),checkedItems=_useState4[0],setCheckedItems=_useState4[1],handleChange=function(e){var item=e.target.name,isChecked=e.target.checked;setCheckedItems(Object(objectSpread2.a)(Object(objectSpread2.a)({},checkedItems),{},Object(defineProperty.a)({},item,isChecked)))},size=Object(dist.number)("Size",24,{range:!0,min:10,max:100,step:1},"Size"),iconScale=Object(dist.number)("Icon scale",.75,{range:!0,min:.1,max:.9,step:.05},"Size"),borderWidth=Object(dist.number)("Border width",2,{range:!0,min:1,max:10,step:1},"Size"),outlineWidth=Object(dist.number)("Outline width",3,{range:!0,min:1,max:10,step:1},"Size"),backgroundUnselected=Object(dist.color)("Background - unselected","rgba(0, 0, 0, 0)","Color"),backgroundSelected=Object(dist.color)("Background - selected","#0000bf","Color"),backgroundHover=Object(dist.color)("Background - hover","#000098","Color"),backgroundDisabled=Object(dist.color)("Background - disabled","#e5e5e5","Color"),borderSelected=Object(dist.color)("Border - selected","#0000bf","Color"),borderSelectedHover=Object(dist.color)("Border - selected - hover","#000098","Color"),borderSelectedFocus=Object(dist.color)("Border - selected - focus","#0000bf","Color"),borderUnselected=Object(dist.color)("Border - unselected","#808080","Color"),borderUnselectedHover=Object(dist.color)("Border - unselected - hover","#1a1a1a","Color"),borderUnselectedFocus=Object(dist.color)("Border - unselected - focus","#000000","Color"),borderDisabled=Object(dist.color)("Border - disabled","#e5e5e5","Color"),focusOutline=Object(dist.color)("Focus outline","#0072c6","Color"),iconUnselected=Object(dist.color)("Icon - unselected","rgba(0, 0, 0, 0)","Color"),iconSelected=Object(dist.color)("Icon - selected","#ffffff","Color"),iconDisabled=Object(dist.color)("Icon - disabled","#ffffff","Color"),labelDefault=Object(dist.color)("Label","#1a1a1a","Color"),labelDisabled=Object(dist.color)("Label - disabled","#999898","Color"),styles={"--size":"".concat(size,"px"),"--icon-scale":iconScale,"--border-width":"".concat(borderWidth,"px"),"--outline-width":"".concat(outlineWidth,"px"),"--background-unselected":backgroundUnselected,"--background-selected":backgroundSelected,"--background-hover":backgroundHover,"--background-disabled":backgroundDisabled,"--border-color-selected":borderSelected,"--border-color-selected-hover":borderSelectedHover,"--border-color-selected-focus":borderSelectedFocus,"--border-color-unselected":borderUnselected,"--border-color-unselected-hover":borderUnselectedHover,"--border-color-unselected-focus":borderUnselectedFocus,"--border-color-disabled":borderDisabled,"--focus-outline-color":focusOutline,"--icon-color-unselected":iconUnselected,"--icon-color-selected":iconSelected,"--icon-color-disabled":iconDisabled,"--label-color":labelDefault,"--label-color-disabled":labelDisabled};return react_default.a.createElement(react_default.a.Fragment,null,["Option 1","Option 2","Option 3"].map((function(item){return react_default.a.createElement(checkbox_Checkbox,{key:"checkbox-".concat(item),id:"checkbox-".concat(item),labelText:item,name:item,checked:checkedItems[item],onChange:handleChange,style:styles})})),react_default.a.createElement(checkbox_Checkbox,{id:"checkbox7",labelText:"Option 4",style:styles,disabled:!0}),react_default.a.createElement(checkbox_Checkbox,{id:"checkbox8",labelText:"Option 5",style:styles,checked:!0,disabled:!0}))};Playground.story={parameters:{previewTabs:{"storybook/docs/panel":{hidden:!0}},docs:{disable:!0}}},Default.__docgenInfo={description:"",methods:[],displayName:"Default"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/checkbox/Checkbox.stories.tsx"]={name:"Default",docgenInfo:Default.__docgenInfo,path:"src/components/checkbox/Checkbox.stories.tsx"}),Selected.__docgenInfo={description:"",methods:[],displayName:"Selected"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/checkbox/Checkbox.stories.tsx"]={name:"Selected",docgenInfo:Selected.__docgenInfo,path:"src/components/checkbox/Checkbox.stories.tsx"}),Disabled.__docgenInfo={description:"",methods:[],displayName:"Disabled"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/checkbox/Checkbox.stories.tsx"]={name:"Disabled",docgenInfo:Disabled.__docgenInfo,path:"src/components/checkbox/Checkbox.stories.tsx"}),SelectedDisabled.__docgenInfo={description:"",methods:[],displayName:"SelectedDisabled"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/checkbox/Checkbox.stories.tsx"]={name:"SelectedDisabled",docgenInfo:SelectedDisabled.__docgenInfo,path:"src/components/checkbox/Checkbox.stories.tsx"}),Custom.__docgenInfo={description:"",methods:[],displayName:"Custom"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/checkbox/Checkbox.stories.tsx"]={name:"Custom",docgenInfo:Custom.__docgenInfo,path:"src/components/checkbox/Checkbox.stories.tsx"}),Playground.__docgenInfo={description:"",methods:[],displayName:"Playground"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/checkbox/Checkbox.stories.tsx"]={name:"Playground",docgenInfo:Playground.__docgenInfo,path:"src/components/checkbox/Checkbox.stories.tsx"})},240:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__(24);var react=__webpack_require__(0),react_default=__webpack_require__.n(react),TextInput_module=__webpack_require__(84),TextInput_module_default=__webpack_require__.n(TextInput_module),objectSpread2=__webpack_require__(60),slicedToArray=__webpack_require__(73),renderprops_cjs=__webpack_require__(239),classNames=__webpack_require__(31),icons=__webpack_require__(43),Tooltip_module=__webpack_require__(68),Tooltip_module_default=__webpack_require__.n(Tooltip_module),Tooltip=function(_ref){var children=_ref.children,labelText=_ref.labelText,closeButtonLabelText=_ref.closeButtonLabelText,openButtonLabelText=_ref.openButtonLabelText,_ref$alternative=_ref.alternative,alternative=void 0!==_ref$alternative&&_ref$alternative,_useState=Object(react.useState)(!1),_useState2=Object(slicedToArray.a)(_useState,2),isOpen=_useState2[0],setOpen=_useState2[1];return react_default.a.createElement("div",{className:Tooltip_module_default.a.wrapper},react_default.a.createElement("button",{type:"button",title:isOpen?closeButtonLabelText:openButtonLabelText,"aria-label":isOpen?closeButtonLabelText:openButtonLabelText,className:Tooltip_module_default.a.buttonTooltip,onClick:function onClick(){return setOpen(!isOpen)}},react_default.a.createElement("span",{"aria-hidden":"true"},react_default.a.createElement(icons.h,{className:Tooltip_module_default.a.iconTooltip}))),react_default.a.createElement(TooltipTransition,{open:isOpen},react_default.a.createElement("div",{className:Object(classNames.a)(Tooltip_module_default.a.tooltip,alternative&&Tooltip_module_default.a.alternative)},react_default.a.createElement("div",{className:Tooltip_module_default.a.label},react_default.a.createElement("span",{"aria-hidden":"true"},react_default.a.createElement(icons.e,{className:Tooltip_module_default.a.iconInfo})),react_default.a.createElement("button",{className:Object(classNames.a)(Tooltip_module_default.a.buttonClose,alternative&&Tooltip_module_default.a.alternative),type:"button",title:closeButtonLabelText,"aria-label":closeButtonLabelText,onClick:function onClick(){return setOpen(!1)}},react_default.a.createElement("span",{"aria-hidden":"true"},react_default.a.createElement(icons.d,{className:Tooltip_module_default.a.iconClose}))),react_default.a.createElement("span",{className:Tooltip_module_default.a.labelText},labelText)),react_default.a.createElement("div",{className:Tooltip_module_default.a.tooltipBody},children))))};Tooltip.displayName="Tooltip";var TooltipTransition=function(_ref2){var children=_ref2.children,open=_ref2.open;return react_default.a.createElement(renderprops_cjs.Transition,{config:{tension:300,friction:30},items:open,from:{height:0},enter:{height:"auto"},leave:{height:0}},(function(show){return show&&function(props){return react_default.a.createElement("div",{style:Object(objectSpread2.a)(Object(objectSpread2.a)({},props),{overflowY:"hidden"})},children)}}))};TooltipTransition.displayName="TooltipTransition",Tooltip.__docgenInfo={description:"",methods:[],displayName:"Tooltip",props:{alternative:{defaultValue:{value:"false",computed:!1},required:!1}}};var tooltip_Tooltip=Tooltip;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/tooltip/Tooltip.tsx"]={name:"Tooltip",docgenInfo:Tooltip.__docgenInfo,path:"src/components/tooltip/Tooltip.tsx"});var InputWrapper=function(_ref){var children=_ref.children,_ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className,helperText=_ref.helperText,_ref$hideLabel=_ref.hideLabel,hideLabel=void 0!==_ref$hideLabel&&_ref$hideLabel,id=_ref.id,_ref$invalid=_ref.invalid,invalid=void 0!==_ref$invalid&&_ref$invalid,labelText=_ref.labelText,style=_ref.style,tooltipLabel=_ref.tooltipLabel,tooltipText=_ref.tooltipText,tooltipOpenButtonLabelText=_ref.tooltipOpenButtonLabelText,tooltipCloseButtonLabelText=_ref.tooltipCloseButtonLabelText;return react_default.a.createElement("div",{className:Object(classNames.a)(TextInput_module_default.a.root,invalid&&TextInput_module_default.a.invalid,className),style:style},labelText&&react_default.a.createElement("label",{htmlFor:id,className:"".concat(TextInput_module_default.a.label," ").concat(hideLabel?TextInput_module_default.a.hiddenLabel:"")},labelText),tooltipText&&react_default.a.createElement(tooltip_Tooltip,{labelText:tooltipLabel,closeButtonLabelText:tooltipCloseButtonLabelText,openButtonLabelText:tooltipOpenButtonLabelText},tooltipText),react_default.a.createElement("div",{className:Object(classNames.a)(TextInput_module_default.a.inputWrapper)},children),helperText&&react_default.a.createElement("div",{className:TextInput_module_default.a.helperText},helperText))};InputWrapper.displayName="InputWrapper",InputWrapper.__docgenInfo={description:"",methods:[],displayName:"InputWrapper",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:""},hideLabel:{defaultValue:{value:"false",computed:!1},required:!1,tsType:{name:"boolean"},description:""},invalid:{defaultValue:{value:"false",computed:!1},required:!1,tsType:{name:"boolean"},description:""},children:{required:!1,tsType:{name:"ReactNode"},description:""},helperText:{required:!1,tsType:{name:"string"},description:""},id:{required:!0,tsType:{name:"string"},description:""},labelText:{required:!1,tsType:{name:"string"},description:""},style:{required:!1,tsType:{name:"CSSProperties"},description:""},tooltipLabel:{required:!1,tsType:{name:"string"},description:""},tooltipText:{required:!1,tsType:{name:"string"},description:""},tooltipOpenButtonLabelText:{required:!1,tsType:{name:"string"},description:""},tooltipCloseButtonLabelText:{required:!1,tsType:{name:"string"},description:""}}};__webpack_exports__.a=InputWrapper;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/internal/inputwrapper/InputWrapper.tsx"]={name:"InputWrapper",docgenInfo:InputWrapper.__docgenInfo,path:"src/internal/inputwrapper/InputWrapper.tsx"})},242:function(module,exports,__webpack_require__){module.exports={checkbox:"Checkbox_checkbox___MzC2 checkbox_hds-checkbox__1Lq5n",input:"Checkbox_input__1RVo9 checkbox_hds-checkbox__input__2U0LL",label:"Checkbox_label__CB6z5 checkbox_hds-checkbox__label__1-ODv"}},243:function(module,exports,__webpack_require__){module.exports={koros:"Koros_koros__kjwBh",flipHorizontal:"Koros_flipHorizontal__2TPuw"}},244:function(module,exports,__webpack_require__){module.exports={buttonClose:"DismissableNotification_buttonClose__31LAu notification_hds-notification__close-button__4DZdT",iconClose:"DismissableNotification_iconClose__2P-gq notification_hds-icon__Ssw3R",warning:"DismissableNotification_warning__3XRr9 notification_hds-notification--warning__2PD13",error:"DismissableNotification_error__3lfe8 notification_hds-notification--error__3GNeO",success:"DismissableNotification_success__1_AKg notification_hds-notification--success__1Rfhf"}},245:function(module,exports,__webpack_require__){module.exports={radioButton:"RadioButton_radioButton__2iFfL radio-button_hds-radio-button__kaKNL",input:"RadioButton_input__Ry60h radio-button_hds-radio-button__input__R8ium",label:"RadioButton_label__3lPgz radio-button_hds-radio-button__label__2CzIK"}},31:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__(57),__webpack_require__(82);__webpack_exports__.a=function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return args.filter((function(e){return e})).join(" ")}},349:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("g",null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("polygon",{points:"199.404,63.993 171.12,35.709 99.702,107.127 28.284,35.709 0,63.993 99.702,163.695  "})),IconAngleDown=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 199.404 199.404",className:className},_ref2)};IconAngleDown.displayName="IconAngleDown",IconAngleDown.__docgenInfo={description:"",methods:[],displayName:"IconAngleDown",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconAngleDown,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconAngleDown.tsx"]={name:"IconAngleDown",docgenInfo:IconAngleDown.__docgenInfo,path:"src/icons/IconAngleDown.tsx"})},350:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("g",null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("polygon",{points:"135.412,0 35.709,99.702 135.412,199.404 163.695,171.119 92.277,99.702 163.695,28.285  "})),IconAngleLeft=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 199.404 199.404",className:className},_ref2)};IconAngleLeft.displayName="IconAngleLeft",IconAngleLeft.__docgenInfo={description:"",methods:[],displayName:"IconAngleLeft",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconAngleLeft,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconAngleLeft.tsx"]={name:"IconAngleLeft",docgenInfo:IconAngleLeft.__docgenInfo,path:"src/icons/IconAngleLeft.tsx"})},351:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("g",null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("polygon",{points:"63.993,199.404 163.695,99.702 63.993,0 35.709,28.285 107.127,99.702 35.709,171.119  "})),IconAngleRight=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 199.404 199.404",className:className},_ref2)};IconAngleRight.displayName="IconAngleRight",IconAngleRight.__docgenInfo={description:"",methods:[],displayName:"IconAngleRight",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconAngleRight,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconAngleRight.tsx"]={name:"IconAngleRight",docgenInfo:IconAngleRight.__docgenInfo,path:"src/icons/IconAngleRight.tsx"})},352:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("g",null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("polygon",{points:"0,135.411 28.285,163.695 99.703,92.277 171.119,163.695 199.404,135.412 99.703,35.709  "})),IconAngleUp=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 199.404 199.404",className:className},_ref2)};IconAngleUp.displayName="IconAngleUp",IconAngleUp.__docgenInfo={description:"",methods:[],displayName:"IconAngleUp",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconAngleUp,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconAngleUp.tsx"]={name:"IconAngleUp",docgenInfo:IconAngleUp.__docgenInfo,path:"src/icons/IconAngleUp.tsx"})},353:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("g",null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("polygon",{points:"13.3706831 2 11.5237192 3.84696395 18.0000474 10.3242884 2 10.3242884 2 12.937334 17.9990512 12.937334 11.5237192 19.412666 13.3706831 21.2586338 23 11.6293169",transform:"translate(12.500000, 11.629317) rotate(-180.000000) translate(-12.500000, -11.629317) "})),IconArrowLeft=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 24 24",className:className},_ref2)};IconArrowLeft.displayName="IconArrowLeft",IconArrowLeft.__docgenInfo={description:"",methods:[],displayName:"IconArrowLeft",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconArrowLeft,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconArrowLeft.tsx"]={name:"IconArrowLeft",docgenInfo:IconArrowLeft.__docgenInfo,path:"src/icons/IconArrowLeft.tsx"})},354:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("g",null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("polygon",{points:"13.3706831 2 11.5237192 3.84696395 18.0000474 10.3242884 2 10.3242884 2 12.937334 17.9990512 12.937334 11.5237192 19.412666 13.3706831 21.2586338 23 11.6293169"})),IconArrowRight=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 24 24",className:className},_ref2)};IconArrowRight.displayName="IconArrowRight",IconArrowRight.__docgenInfo={description:"",methods:[],displayName:"IconArrowRight",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconArrowRight,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconArrowRight.tsx"]={name:"IconArrowRight",docgenInfo:IconArrowRight.__docgenInfo,path:"src/icons/IconArrowRight.tsx"})},355:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{fillRule:"evenodd",d:"M11.5 0C17.85 0 23 5.148 23 11.5 23 17.85 17.85 23 11.5 23 5.148 23 0 17.85 0 11.5 0 5.148 5.148 0 11.5 0zm0 2.464c-4.981 0-9.035 4.054-9.035 9.036 0 4.982 4.054 9.036 9.035 9.036s9.035-4.054 9.035-9.036c0-4.982-4.054-9.036-9.035-9.036zm1.232 12.184v2.381h-2.464v-2.38l2.464-.001zm0-9.916v7.783h-2.464V4.733h2.464z"}),IconAttention=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 23 23",className:className},_ref2)};IconAttention.displayName="IconAttention",IconAttention.__docgenInfo={description:"",methods:[],displayName:"IconAttention",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconAttention,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconAttention.tsx"]={name:"IconAttention",docgenInfo:IconAttention.__docgenInfo,path:"src/icons/IconAttention.tsx"})},356:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M20.9964145,2.99964145 L20.9727501,18.1653639 L20.9656508,18.1653639 L3.2299749,18.1653639 C3.43585515,17.7685909 3.77267838,17.442811 4.19627106,17.2519183 L10.8601649,14.3522409 C12.5695231,13.6083901 13.6730728,11.9234851 13.6691287,10.0610972 L13.6667623,2.99964145 L20.9964145,2.99964145 Z M23,1 L11.6923629,1 L11.6671208,1 L11.6702761,10.061886 C11.6718537,11.1275726 11.0392255,12.09308 10.0626748,12.5182503 L3.39089279,15.4218716 C1.93632126,16.0679096 1,17.5098602 1,19.0993188 L1,22.2806024 C1,22.2806024 2.78823951,23.9915382 4.38085335,23.9915382 C5.5790606,23.9915382 6.22667623,23.6444604 6.74887056,23.3652205 C7.17009681,23.1388311 7.47378989,22.9755468 8.17031194,22.9755468 C8.86683399,22.9755468 9.1721047,23.1388311 9.59254213,23.3652205 C10.1139477,23.6444604 10.7615633,23.9915382 11.9605593,23.9915382 C13.1595554,23.9915382 13.8087487,23.6444604 14.3293654,23.3652205 C14.7505916,23.1388311 15.0558623,22.9755468 15.7523844,22.9755468 C16.4473288,22.9755468 16.7525995,23.1388311 17.1738257,23.3652205 C17.6944425,23.6444604 18.3436357,23.9915382 19.541843,23.9915382 C21.0776622,23.9915382 22.966081,22.3973467 22.966081,22.3973467 L23,1 Z M4.38085335,21.9918967 C3.70720688,21.9918967 3.26626031,21.6645393 3.00043026,21.3584797 L3.00043026,20.1642166 L20.9656508,20.1642166 C20.9656508,20.1642166 20.964862,21.4539261 20.9640731,21.4539261 C20.6990319,21.7189674 20.322768,21.9642883 19.541843,21.9918967 C19.5008247,21.9934744 19.461384,21.9942632 19.4219433,21.9942632 C18.8098243,21.9942632 18.515597,21.8159914 18.1196128,21.602223 C17.5982072,21.3229831 16.9498028,20.9759053 15.7523844,20.9759053 C14.5525995,20.9759053 13.9049839,21.3229831 13.3843672,21.602223 C12.9623521,21.8286124 12.658659,21.9918967 11.9605593,21.9918967 C11.2640373,21.9918967 10.9595554,21.8286124 10.5375403,21.602223 C10.0169236,21.3229831 9.369308,20.9759053 8.17031194,20.9759053 C6.9721047,20.9759053 6.32291144,21.3229831 5.80229473,21.602223 C5.38106848,21.8286124 5.07658659,21.9918967 4.38085335,21.9918967 L4.38085335,21.9918967 Z"}),IconBoots=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 24 24",className:className},_ref2)};IconBoots.displayName="IconBoots",IconBoots.__docgenInfo={description:"",methods:[],displayName:"IconBoots",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconBoots,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconBoots.tsx"]={name:"IconBoots",docgenInfo:IconBoots.__docgenInfo,path:"src/icons/IconBoots.tsx"})},357:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M18.643,11.8c2.402,0.023 4.737,1.454 5.834,3.595c0.925,1.805 0.951,4.042 0.071,5.866c-1.245,2.583 -4.281,4.18 -7.196,3.621c-2.008,-0.385 -3.807,-1.769 -4.7,-3.621c-0.879,-1.823 -0.855,-4.059 0.071,-5.866c1.094,-2.133 3.425,-3.572 5.834,-3.595c0.029,0 0.057,0 0.086,0Zm-10.243,-9.6l9.2,0l0,-2.2l2,0l0,2.2l6.4,0l0,9l-2,0l0,-2.2l-22,0l0,12.4l7.8,0l0,2l-9.8,0l0,-21.2l6.4,0l0,-2.2l2,0l0,2.2Zm10.17,11.6c-2.086,0.02 -4.054,1.61 -4.476,3.673c-0.31,1.509 0.202,3.165 1.313,4.237c1.278,1.233 3.296,1.63 4.956,0.94c1.468,-0.611 2.572,-2.032 2.792,-3.606c0.274,-1.952 -0.863,-4.023 -2.663,-4.838c-0.601,-0.272 -1.258,-0.408 -1.922,-0.406Zm2.43,5.6l-3.4,0l0,-3.4l2,0l0,1.4l1.4,0l0,2Zm-19,-15.2l0,2.8l22,0l0,-2.8l-22,0Z"}),IconCalendar=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 26 25",fillRule:"evenodd",className:className},_ref2)};IconCalendar.displayName="IconCalendar",IconCalendar.__docgenInfo={description:"",methods:[],displayName:"IconCalendar",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconCalendar,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconCalendar.tsx"]={name:"IconCalendar",docgenInfo:IconCalendar.__docgenInfo,path:"src/icons/IconCalendar.tsx"})},358:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M9.8,24.406l-9.8,0l0,-21.2l6.4,0l0,-2.2l2,0l0,2.2l9.2,0l0,-2.2l2,0l0,2.2l6.4,0l0,21.2l-16.2,0Zm14.2,-14.4l-22,0l0,12.4l7.791,0l0,0l14.209,0l0,-12.4Zm-9.5,5.327l2.333,0l0,2l-2.333,0l0,2.334l-2,0l0,-2.334l-2.333,0l0,-2l2.333,0l0,-2.333l2,0l0,2.333Zm9.5,-10.127l-22,0l0,2.8l22,0l0,-2.8Z"}),IconCalendarAdd=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 26 26",fillRule:"evenodd",className:className},_ref2)};IconCalendarAdd.displayName="IconCalendarAdd",IconCalendarAdd.__docgenInfo={description:"",methods:[],displayName:"IconCalendarAdd",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconCalendarAdd,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconCalendarAdd.tsx"]={name:"IconCalendarAdd",docgenInfo:IconCalendarAdd.__docgenInfo,path:"src/icons/IconCalendarAdd.tsx"})},359:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{fillRule:"evenodd",d:"M7.143 15L0 7.799 2.021 5.76l5.122 5.163L17.979 0 20 2.038z"}),IconCheck=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 20 15",className:className},_ref2)};IconCheck.displayName="IconCheck",IconCheck.__docgenInfo={description:"",methods:[],displayName:"IconCheck",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconCheck,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconCheck.tsx"]={name:"IconCheck",docgenInfo:IconCheck.__docgenInfo,path:"src/icons/IconCheck.tsx"})},36:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__(24);var react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__),_utils_classNames__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(31),_koros_Koros__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(75),_Section_module_css__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(86),_Section_module_css__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_Section_module_css__WEBPACK_IMPORTED_MODULE_4__),Section=function(_ref){var children=_ref.children,_ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className,_ref$color=_ref.color,color=void 0===_ref$color?"plain":_ref$color,_ref$korosType=_ref.korosType,korosType=void 0===_ref$korosType?null:_ref$korosType,withKoros=null!==korosType;return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div",{className:Object(_utils_classNames__WEBPACK_IMPORTED_MODULE_2__.a)(_Section_module_css__WEBPACK_IMPORTED_MODULE_4___default.a.section,_Section_module_css__WEBPACK_IMPORTED_MODULE_4___default.a[color],withKoros&&_Section_module_css__WEBPACK_IMPORTED_MODULE_4___default.a.withKoros,className)},withKoros&&react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_koros_Koros__WEBPACK_IMPORTED_MODULE_3__.a,{type:korosType,className:"".concat(_Section_module_css__WEBPACK_IMPORTED_MODULE_4___default.a.koros," ").concat(_Section_module_css__WEBPACK_IMPORTED_MODULE_4___default.a.topKoros," ").concat(_Section_module_css__WEBPACK_IMPORTED_MODULE_4___default.a[korosType])}),react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div",{className:_Section_module_css__WEBPACK_IMPORTED_MODULE_4___default.a.content},children),withKoros&&react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_koros_Koros__WEBPACK_IMPORTED_MODULE_3__.a,{flipHorizontal:!0,type:korosType,className:"".concat(_Section_module_css__WEBPACK_IMPORTED_MODULE_4___default.a.koros," ").concat(_Section_module_css__WEBPACK_IMPORTED_MODULE_4___default.a.bottomKoros," ").concat(_Section_module_css__WEBPACK_IMPORTED_MODULE_4___default.a[korosType])}))};Section.displayName="Section",Section.__docgenInfo={description:"",methods:[],displayName:"Section",props:{className:{defaultValue:{value:"''",computed:!1},required:!1},color:{defaultValue:{value:"'plain'",computed:!1},required:!1},korosType:{defaultValue:{value:"null",computed:!1},required:!1}}},__webpack_exports__.a=Section,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/section/Section.tsx"]={name:"Section",docgenInfo:Section.__docgenInfo,path:"src/components/section/Section.tsx"})},360:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{fillRule:"nonzero",d:"M13.412 0L15 1.588 9.088 7.5 15 13.412 13.412 15 7.5 9.088 1.588 15 0 13.412 5.911 7.5 0 1.588 1.588 0 7.5 5.912 13.412 0z"}),IconClose=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 15 15",className:className},_ref2)};IconClose.displayName="IconClose",IconClose.__docgenInfo={description:"",methods:[],displayName:"IconClose",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconClose,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconClose.tsx"]={name:"IconClose",docgenInfo:IconClose.__docgenInfo,path:"src/icons/IconClose.tsx"})},361:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M23.026,9.649c2.365,0.012 4.688,1.141 6.178,3c1.179,1.472 1.846,3.366 1.795,5.246c-0.041,1.485 -0.76,2.893 -1.541,4.209c-1.739,2.925 -4.051,5.56 -6.458,7.896c-2.473,-2.4 -4.724,-4.98 -6.458,-7.896c-0.831,-1.4 -1.58,-2.905 -1.539,-4.525c0.069,-2.798 1.646,-5.504 4.099,-6.9c1.174,-0.668 2.52,-1.023 3.872,-1.03c0.017,0 0.035,0 0.052,0Zm-15.526,9.181c0.017,3.661 3.065,7.111 7.002,7.117l-0.004,2c-3.523,-0.005 -6.911,-2.263 -8.293,-5.588c-0.463,-1.114 -0.699,-2.318 -0.705,-3.523l0,-0.027l2,-0.004c0,0.009 0,0.017 0,0.025Zm15.481,-7.181c-2.321,0.011 -4.53,1.505 -5.462,3.637c-0.447,1.022 -0.682,2.192 -0.408,3.257c0.416,1.614 1.399,3.041 2.395,4.41c1.069,1.47 2.254,2.852 3.488,4.175l0.006,0.006c2.049,-2.188 4.048,-4.474 5.356,-7.196c0.412,-0.856 0.714,-1.729 0.614,-2.763c-0.282,-2.923 -2.823,-5.471 -5.873,-5.525c-0.039,-0.001 -0.078,-0.001 -0.116,-0.001Zm0.038,2.579c1.357,0.013 2.624,1.053 2.912,2.401c0.408,1.906 -1.326,4.059 -3.48,3.653c-1.15,-0.217 -2.124,-1.176 -2.378,-2.331c-0.384,-1.74 0.981,-3.704 2.908,-3.723c0.013,0 0.025,0 0.038,0Zm-0.025,2c-0.396,0.004 -0.768,0.276 -0.916,0.645c-0.25,0.622 0.222,1.46 0.922,1.46c0.446,0 0.859,-0.344 0.968,-0.787c0.148,-0.599 -0.289,-1.311 -0.962,-1.318c-0.004,0 -0.008,0 -0.012,0Zm-16.458,-15.228c1.921,0.019 3.787,1.133 4.735,2.811c0.637,1.127 0.936,2.498 0.582,3.741c-0.44,1.544 -1.452,2.879 -2.506,4.157c-0.873,1.058 -1.812,2.061 -2.812,2.995l-0.035,0.033c-1.878,-1.736 -3.612,-3.625 -4.781,-5.82c-0.545,-1.024 -0.842,-2.164 -0.627,-3.346c0.44,-2.419 2.596,-4.45 5.16,-4.565c0.095,-0.005 0.189,-0.006 0.284,-0.006Zm-0.059,2c-1.811,0.018 -3.441,1.639 -3.476,3.525c-0.015,0.792 0.493,1.54 0.975,2.275c0.722,1.101 1.585,2.107 2.479,3.063l0.045,0.047c1.251,-1.329 2.506,-2.725 3.238,-4.388c0.618,-1.403 -0.12,-3.241 -1.51,-4.054c-0.528,-0.309 -1.134,-0.47 -1.751,-0.468Zm0.042,2.07c0.677,0.013 1.303,0.532 1.447,1.2c0.188,0.879 -0.549,1.853 -1.466,1.853c-0.675,0 -1.31,-0.516 -1.462,-1.182c-0.197,-0.869 0.477,-1.852 1.443,-1.871c0.019,0 0.019,0 0.038,0Zm-0.025,1.053c-0.352,0.007 -0.654,0.453 -0.383,0.771c0.258,0.304 0.919,0.17 0.888,-0.324c-0.015,-0.246 -0.248,-0.449 -0.505,-0.447Z"}),IconDirections=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 32 32",fillRule:"evenodd",className:className},_ref2)};IconDirections.displayName="IconDirections",IconDirections.__docgenInfo={description:"",methods:[],displayName:"IconDirections",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconDirections,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconDirections.tsx"]={name:"IconDirections",docgenInfo:IconDirections.__docgenInfo,path:"src/icons/IconDirections.tsx"})},362:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M22.5095797,5.49309553 C21.5471248,4.53064061 20.2667891,4 18.9052521,4 C17.213245,4 16.1091601,4.71507442 15.4589207,5.35587175 C15.3796079,5.28222412 15.2990361,5.21172382 15.2159465,5.14311193 C14.5864796,4.60051144 13.6290604,4.06798243 12.2637466,4.0075536 C12.1838043,4.00314733 12.1032326,4.00062947 12.0226608,4.00062947 C12.0151072,4.00062947 12.0081831,4 12.0006295,4 L12,4 L11.9993705,4 C11.9918169,4 11.9848928,4.00062947 11.9779687,4.00062947 C11.8967674,4.00062947 11.8161957,4.00314733 11.7362534,4.0075536 C10.3715691,4.06798243 9.41352042,4.60051144 8.7840535,5.14311193 C8.70096387,5.21172382 8.62102157,5.28222412 8.54170874,5.35587175 C7.89083994,4.71507442 6.78675497,4 5.09474789,4 C3.73321094,4 2.45287522,4.53064061 1.4904203,5.49309553 C-0.496806767,7.4803226 -0.496806767,10.7145236 1.4904203,12.7017507 C2.40818307,13.6201429 3.24474461,14.3566192 4.0517212,15.0685463 C5.16084191,16.0467379 6.20890433,16.9695364 7.2941053,18.2228051 C7.37908334,18.3203724 7.70199987,18.7320438 7.88580421,18.9687234 L8.54674448,19.8235394 L9.20831421,18.9687234 C9.39211855,18.7320438 9.71440561,18.3203724 9.80064258,18.2228051 C10.5402662,17.367989 11.2628942,16.6667628 12,15.99701 C12.7364763,16.6667628 13.4597338,17.3673595 14.1999869,18.2228051 C14.2862239,18.3203724 14.6078815,18.7320438 14.7916858,18.9687234 L15.4532555,19.8235394 L16.1148253,18.9687234 C16.2986296,18.7320438 16.6215461,18.3203724 16.7058947,18.2228051 C17.7917251,16.9695364 18.8391581,16.0467379 19.9482788,15.0685463 C20.7558849,14.3566192 21.5918169,13.6201429 22.5095797,12.7017507 C24.4968068,10.7145236 24.4968068,7.4803226 22.5095797,5.49309553 M8.54674448,17.1111665 C7.39230214,15.7817323 6.30710117,14.8243132 5.15958298,13.8127598 C4.37023146,13.1171989 3.5550718,12.3996066 2.67444758,11.5183529 C1.33997771,10.1832536 1.33997771,8.01159268 2.67507704,6.67649334 C3.32153957,6.03066028 4.18013245,5.67438201 5.09474789,5.67438201 C5.48124057,5.67438201 5.81989378,5.72914563 6.11511376,5.817271 C7.87195594,6.23146023 8.54674448,7.8076454 8.54674448,7.8076454 C8.54674448,7.8076454 9.21460888,6.24908531 10.9500492,5.82419513 C11.2515638,5.73229296 11.5990296,5.67438201 11.9993705,5.67438201 C12.9133565,5.67438201 13.7725788,6.03066028 14.4190414,6.67712281 C15.7535112,8.01159268 15.7535112,10.1832536 14.4190414,11.5183529 C13.5384172,12.3996066 12.7232575,13.1171989 11.9351649,13.8127598 C10.7863878,14.8243132 9.70181627,15.7817323 8.54674448,17.1111665 M21.3255524,11.5183529 C20.4449282,12.3996066 19.6291391,13.1171989 18.8410465,13.8133893 C17.6928988,14.8243132 16.6076979,15.7811029 15.4532555,17.1111665 C14.7048194,16.2481673 13.9847092,15.5437938 13.2583044,14.8778178 C13.9991869,14.2238017 14.7665071,13.5383122 15.6030687,12.7017507 C17.2277228,11.0770966 17.5235722,8.62028719 16.4918759,6.69034162 C16.8620025,6.27174612 17.6161039,5.67438201 18.9052521,5.67438201 C19.820497,5.67438201 20.6790899,6.03066028 21.3255524,6.67712281 C22.6600223,8.01159268 22.6600223,10.1832536 21.3255524,11.5183529"}),IconDoubleLike=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 24 24",className:className},_ref2)};IconDoubleLike.displayName="IconDoubleLike",IconDoubleLike.__docgenInfo={description:"",methods:[],displayName:"IconDoubleLike",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconDoubleLike,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconDoubleLike.tsx"]={name:"IconDoubleLike",docgenInfo:IconDoubleLike.__docgenInfo,path:"src/icons/IconDoubleLike.tsx"})},363:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M10.63596,17.97822 L10.63596,21.63042 L13.10796,21.63042 L13.10796,17.97822 L14.79336,17.97822 L14.79336,23.31582 L8.95056,23.31582 L8.95056,17.97822 L10.63596,17.97822 Z M12.912,7.5849 C14.3556,7.5849 15.5934,8.5665 15.9216,9.9729 L15.9216,9.9729 L17.7438,17.7873 L16.1022,18.1701 L14.2794,10.3557 C14.1306,9.7167 13.5684,9.2703 12.912,9.2703 L12.912,9.2703 L10.8552,9.2703 C10.2012,9.2703 9.639,9.7149 9.4884,10.3521 L9.4884,10.3521 L7.6404,18.1725 L6,17.7849 L7.848,9.9645 C8.1786,8.5635 9.4158,7.5849 10.8552,7.5849 L10.8552,7.5849 Z M11.87202,3.28626015e-13 C13.51662,3.28626015e-13 14.84982,1.3332 14.84982,2.9778 C14.84982,4.623 13.51662,5.9556 11.87202,5.9556 C10.22742,5.9556 8.89422,4.623 8.89422,2.9778 C8.89422,1.3332 10.22742,3.28626015e-13 11.87202,3.28626015e-13 Z M11.87202,1.6854 C11.15922,1.6854 10.57962,2.265 10.57962,2.9778 C10.57962,3.69 11.15922,4.2702 11.87202,4.2702 C12.58422,4.2702 13.16382,3.69 13.16382,2.9778 C13.16382,2.265 12.58422,1.6854 11.87202,1.6854 Z"}),IconFemale=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 24 24",className:className},_ref2)};IconFemale.displayName="IconFemale",IconFemale.__docgenInfo={description:"",methods:[],displayName:"IconFemale",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconFemale,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconFemale.tsx"]={name:"IconFemale",docgenInfo:IconFemale.__docgenInfo,path:"src/icons/IconFemale.tsx"})},364:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M14.8294615,20.5124154 C16.4065385,20.5124154 17.2068462,20.6979538 17.9808462,20.8765692 C18.6911538,21.0420308 19.362,21.1971077 20.7417692,21.1971077 L20.7417692,22.9050308 C19.1681538,22.9050308 18.3678462,22.7201846 17.5945385,22.5422615 C16.8835385,22.3761077 16.2113077,22.2210308 14.8294615,22.2210308 C13.4476154,22.2210308 12.7760769,22.3761077 12.0643846,22.5415692 C11.2917692,22.7201846 10.4914615,22.9050308 8.91507692,22.9050308 C7.34007692,22.9050308 6.53907692,22.7201846 5.76507692,22.5415692 C5.05338462,22.3761077 4.38115385,22.2210308 3,22.2210308 L3,20.5124154 C4.57638462,20.5124154 5.37669231,20.6979538 6.15,20.8765692 C6.86169231,21.0420308 7.53392308,21.1971077 8.91507692,21.1971077 C10.2962308,21.1971077 10.9677692,21.0420308 11.6787692,20.8765692 C12.4527692,20.6979538 13.2530769,20.5124154 14.8294615,20.5124154 Z M3.90830769,14.7241 L6.39023077,17.2053308 L3,18.1136385 L3.90830769,14.7241 Z M18.9021692,3.86234615 L20.1164769,5.07665385 L8.57293846,16.6208846 L7.35863077,15.4065769 L18.9021692,3.86234615 Z M16.0396154,1 L17.2546154,2.215 L5.71038462,13.7585385 L4.49607692,12.5442308 L16.0396154,1 Z"}),IconFill=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 24 24",className:className},_ref2)};IconFill.displayName="IconFill",IconFill.__docgenInfo={description:"",methods:[],displayName:"IconFill",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconFill,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconFill.tsx"]={name:"IconFill",docgenInfo:IconFill.__docgenInfo,path:"src/icons/IconFill.tsx"})},365:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M13.9714253,10.9514872 C14.1495802,10.7554905 14.4021203,10.6437617 14.6669574,10.6437617 L15.7581797,10.6437617 C16.2917391,10.6437617 16.8001765,10.4170603 17.1567126,10.0201253 L21,5.74180501 L20.4183844,5.16018943 L17.5935184,7.98505543 L17.1781003,7.56963729 L19.9198676,4.66167257 L19.3382897,4.08009472 L16.4303627,6.821862 L16.0149068,6.40648158 L18.8397728,3.58161558 L18.258195,3 L13.9798747,6.84324964 C13.5829397,7.19982348 13.3562006,7.70826089 13.3562006,8.24182028 L13.3562006,9.4018829 C13.3562006,9.66513571 13.2458298,9.91628017 13.0519453,10.0943219 L11.7379445,11.309155 L3.64251505,3.18784912 C3.39091794,2.93621428 2.96044924,3.14269743 3.00292275,3.49606501 C3.24086497,5.47538366 4.30553191,7.76171113 6.54153997,9.99771918 L8.18653998,11.6427569 L9.95854562,11.6427569 L10.5907069,12.3698613 L4.03439548,18.4314657 L5.65114268,20.0338036 L11.6041869,13.5355065 L17.3328306,20.1243333 L18.9900521,18.5844608 L12.7310553,12.305472 L13.9714253,10.9514872 Z"}),IconFood=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 24 24",className:className},_ref2)};IconFood.displayName="IconFood",IconFood.__docgenInfo={description:"",methods:[],displayName:"IconFood",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconFood,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconFood.tsx"]={name:"IconFood",docgenInfo:IconFood.__docgenInfo,path:"src/icons/IconFood.tsx"})},366:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("g",{stroke:"none",strokeWidth:"1",fillRule:"evenodd"},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("g",{transform:"translate(-930.000000, -654.000000)"},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("g",{transform:"translate(930.000000, 653.000000)"},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M47.1078235,37.7164333 L50.9691471,41.5621556 L53.8065,38.7346556 L27.0425294,12.0804333 L0.280176471,38.7362667 L3.11752941,41.5621556 L6.97561765,37.7164333 L6.97561765,57.5169889 L47.1078235,57.5169889 L47.1078235,37.7164333 Z M23.0307647,53.5198222 L31.0559118,53.5198222 L31.0559118,40.2265444 L23.0307647,40.2265444 L23.0307647,53.5198222 Z M35.0692941,53.5198222 L35.0692941,36.2309889 L19.0173824,36.2309889 L19.0173824,53.5198222 L10.9906176,53.5198222 L10.9906176,33.7192667 L27.0425294,17.7322111 L43.0944412,33.7192667 L43.0944412,53.5198222 L35.0692941,53.5198222 Z"}),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M43.7635,22.8953389 L47.7752647,22.8953389 C47.7752647,19.4056722 45.9667353,17.6060611 44.5124706,16.1576722 C43.2539412,14.9058389 42.4224706,14.0777278 42.4224706,12.2426722 C42.4224706,10.4043944 43.2523235,9.57789444 44.5108529,8.32606111 C45.9667353,6.87928333 47.7752647,5.07645 47.7752647,1.58356111 L43.7635,1.58356111 C43.7635,3.42022778 42.9320294,4.24833889 41.6751176,5.49856111 C40.2192353,6.94856111 38.4074706,8.74978333 38.4074706,12.2426722 C38.4074706,15.7371722 40.2208529,17.5383944 41.6751176,18.9851722 C42.9336471,20.2370056 43.7635,21.0618944 43.7635,22.8953389"})))),IconHouse=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 54 57",className:className},_ref2)};IconHouse.displayName="IconHouse",IconHouse.__docgenInfo={description:"",methods:[],displayName:"IconHouse",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconHouse,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconHouse.tsx"]={name:"IconHouse",docgenInfo:IconHouse.__docgenInfo,path:"src/icons/IconHouse.tsx"})},367:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{fillRule:"evenodd",d:"M11.5 23C5.148 23 0 17.852 0 11.5 0 5.15 5.148 0 11.5 0 17.85 0 23 5.15 23 11.5 23 17.852 17.85 23 11.5 23zm0-2.464c4.981 0 9.035-4.054 9.035-9.036 0-4.982-4.054-9.036-9.035-9.036S2.465 6.518 2.465 11.5c0 4.982 4.054 9.036 9.035 9.036zm1.232-13.184h-2.464V4.97h2.464v2.381zm0 9.916h-2.464V9.484h2.464v7.783z"}),IconInfo=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 23 23",className:className},_ref2)};IconInfo.displayName="IconInfo",IconInfo.__docgenInfo={description:"",methods:[],displayName:"IconInfo",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconInfo,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconInfo.tsx"]={name:"IconInfo",docgenInfo:IconInfo.__docgenInfo,path:"src/icons/IconInfo.tsx"})},368:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M11.9621429,2 C17.4642857,2 21.9235714,6.46 21.9235714,11.9621429 C21.9235714,17.4642857 17.4642857,21.925 11.9621429,21.925 C6.46,21.925 2,17.4642857 2,11.9621429 C2,6.46 6.46,2 11.9621429,2 Z M7.30665026,17.0080129 L6.97724878,17.0423229 C6.21528077,17.1295212 5.4566203,17.2368421 4.70278571,17.3642857 L5.36033938,17.2598141 C6.34377285,18.4830992 7.65950407,19.4284426 9.16919593,19.9574398 C8.40531328,19.0567594 7.7806539,18.0653702 7.30665026,17.0080129 Z M16.6157901,17.0058641 L16.5889286,17.0695 C16.1183958,18.1036674 15.5032825,19.0739504 14.755786,19.9570039 C16.2646152,19.4284426 17.5802067,18.4830992 18.5635136,17.2598141 C17.9163088,17.1594975 17.2671619,17.0753488 16.6157901,17.0058641 Z M11.2145677,16.7652494 C10.4414117,16.7783423 9.66877025,16.8117759 8.89818652,16.8655501 C9.473142,18.003214 10.2528664,19.04297 11.2141307,19.9453648 Z M12.7098007,16.7652833 L12.7095471,19.945265 C13.6707625,19.0428934 14.4504507,18.0031722 15.0267413,16.8682014 C14.2553557,16.811866 13.4828181,16.7784086 12.7098007,16.7652833 Z M6.25605214,12.7096311 L3.52701078,12.7099969 C3.62714683,13.8491545 3.95380063,14.9243448 4.46153113,15.8901048 C5.22469514,15.7584153 5.99327731,15.6492257 6.76508917,15.5599498 C6.48622819,14.6433053 6.31417831,13.688256 6.25605214,12.7096311 Z M20.3965667,12.7099969 L17.6675375,12.7091922 C17.6094123,13.688048 17.4372744,14.6433592 17.1584178,15.5611655 C17.9294652,15.6491439 18.6985344,15.7583877 19.4628024,15.887483 C19.9698528,14.9243448 20.2964488,13.8491545 20.3965667,12.7099969 Z M11.214,12.709 L7.75346635,12.7099237 C7.81655045,13.6403678 7.99711321,14.546299 8.28707361,15.4121612 C9.50915931,15.3105761 10.7358731,15.2607143 11.9620714,15.2607143 L11.214,15.268 L11.214,12.709 Z M16.1701051,12.7099237 L12.709,12.709 L12.7097477,15.2668961 C13.6862205,15.2830395 14.6624606,15.3307866 15.6353139,15.4099713 C15.9264582,14.546299 16.107021,13.6403678 16.1701051,12.7099237 Z M4.46127243,8.03727519 L4.38660219,8.18027171 C3.92150167,9.1081764 3.6219471,10.1328445 3.52692325,11.2152912 L6.25603868,11.215349 C6.31415097,10.23671 6.48620282,9.28163847 6.76492939,8.36407215 C5.99380911,8.27527262 5.22510372,8.16616848 4.46127243,8.03727519 Z M15.6363653,8.51215735 L15.4229286,8.53120571 C14.2721286,8.61934286 13.1166429,8.66357143 11.9615,8.66357143 L12.709,8.656 L12.709,11.215 L16.1701576,11.2155654 C16.1071116,10.2847076 15.9264837,9.37837964 15.6363653,8.51215735 Z M19.4625575,8.03502281 L18.8562429,8.13538857 C18.2926785,8.22248926 17.7267251,8.29886988 17.1589958,8.36449142 C17.4374797,9.28153208 17.6094453,10.2366129 17.6675361,11.2152163 L20.3966542,11.2152912 C20.2966629,10.0760516 19.9701552,9.00081255 19.4625575,8.03502281 Z M8.28861343,8.5143691 L8.22612434,8.7002672 C7.9716358,9.50928738 7.81191117,10.3518674 7.75341385,11.2155654 L11.214,11.215 L11.2148419,8.65740429 C10.2382467,8.64127657 9.26174802,8.59353356 8.28861343,8.5143691 Z M11.2141307,3.97934949 C10.2527433,4.88185983 9.47294231,5.92176659 8.89660871,7.05694889 C9.66841941,7.11314301 10.4414101,7.14661751 11.2148904,7.15973369 Z M12.7095471,3.9794493 L12.7090683,7.15975064 C13.4822015,7.14665769 14.2548282,7.11322411 15.0254024,7.05944988 C14.4506504,5.92180843 13.6708856,4.88193649 12.7095471,3.9794493 Z M9.16790245,3.96787475 L9.06063899,4.00635015 C7.59642636,4.54200382 6.32012758,5.47100374 5.36033938,6.66475317 C6.00621002,6.7652892 6.65557315,6.84949793 7.3071743,6.91902922 C7.78069965,5.85972715 8.40541065,4.86843049 9.16790245,3.96787475 Z M14.7580056,3.96852986 L14.80818,4.02864286 C15.5472477,4.91300664 16.1543638,5.88356736 16.6175259,6.91717239 C17.4894416,6.82600503 18.3582725,6.70653115 19.2207857,6.56071429 L18.5635136,6.66475317 C17.5808574,5.44240404 16.2663563,4.49764205 14.7580056,3.96852986 Z"}),IconLanguage=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 24 24",className:className},_ref2)};IconLanguage.displayName="IconLanguage",IconLanguage.__docgenInfo={description:"",methods:[],displayName:"IconLanguage",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconLanguage,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconLanguage.tsx"]={name:"IconLanguage",docgenInfo:IconLanguage.__docgenInfo,path:"src/icons/IconLanguage.tsx"})},369:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M11.9999824,16.9076194 C8.50979285,16.9076194 5.5196113,15.5733282 3.06349734,13.166267 C4.3163616,13.1247284 5.17030793,12.8429472 5.88450481,12.6050923 C6.44511777,12.4185724 6.88799709,12.271379 7.41627104,12.271379 C8.37527523,12.271379 8.86720731,12.5502108 9.43705496,12.8735306 C10.0663839,13.2303481 10.7788603,13.6350948 11.9988237,13.6350948 C13.2326568,13.6350948 13.94573,13.230945 14.5750239,12.8700895 C15.1385512,12.5484902 15.6252866,12.271379 16.5808146,12.271379 C17.1102824,12.271379 17.5542502,12.4191693 18.1160219,12.6068128 C18.829657,12.8441059 19.6818828,13.1264138 20.931306,13.1714988 C18.4722776,15.5744869 15.4866959,16.9076194 11.9999824,16.9076194 M5.45321276,9.03751377 C6.30772089,8.18360256 7.09003685,7.63394483 8.45554338,7.63394483 C10.0865738,7.63394483 10.3608409,8.45207598 12.0005794,8.45207598 C13.6402827,8.45207598 13.9151116,7.64374134 15.5461772,7.63394483 C16.909928,7.6275894 17.6916822,8.18300564 18.5485078,9.03751377 C19.3752767,9.86487961 19.3672007,9.84584841 21.1680022,11.5404333 C20.0588902,11.5265637 19.337741,11.2869531 18.6374137,11.0536979 C18.01904,10.847585 17.3793176,10.633958 16.5842908,10.633958 C15.1951532,10.633958 14.4036026,11.0854751 13.7678831,11.4480512 C13.2286539,11.7557457 12.8025234,11.9982707 12.0022999,11.9982707 C11.2147872,11.9982707 10.7898155,11.7563426 10.2488307,11.4497717 C9.60854649,11.0865987 8.81236092,10.633958 7.41974722,10.633958 C6.62584399,10.633958 5.98843907,10.8464263 5.37122408,11.0519423 C4.67145861,11.2829151 3.95090628,11.5236844 2.84179433,11.5346396 C4.63451981,9.84584841 4.62700564,9.86431781 5.45321276,9.03751377 M19.7061107,7.88279013 C18.6668734,6.84639705 17.4543539,6 15.8123682,6 C13.6356478,6 13.1991942,6.81813114 12.001703,6.81813114 C10.8042469,6.81813114 10.3643171,6 8.45554338,6 C6.54673457,6 5.33256475,6.84351779 4.29213368,7.88279013 C3.19165951,8.97978812 0,12.2707821 0,12.2707821 C2.18068818,15.2730776 5.9988325,18.546796 12.0011412,18.546796 C18.0034498,18.546796 21.8152387,15.2730776 24,12.2707821 C24,12.2707821 20.8071818,8.97978812 19.7061107,7.88279013"}),IconLips=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 24 24",className:className},_ref2)};IconLips.displayName="IconLips",IconLips.__docgenInfo={description:"",methods:[],displayName:"IconLips",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconLips,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconLips.tsx"]={name:"IconLips",docgenInfo:IconLips.__docgenInfo,path:"src/icons/IconLips.tsx"})},370:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M11.6911445,6.57252031e-13 C13.9380141,6.57252031e-13 16.1856662,0.848347826 17.8995793,2.54582609 C21.3274054,5.94 21.0957532,11.2296522 17.8995793,14.8382609 C14.618101,18.5446957 12.868188,20.8565217 11.6911445,23.1793043 C10.5203619,20.8565217 8.7657532,18.5446957 5.48505755,14.8382609 C2.28888364,11.2296522 2.05644886,5.94 5.48505755,2.54582609 C7.19897059,0.848347826 9.44584016,6.57252031e-13 11.6911445,6.57252031e-13 Z M11.6911445,1.73895652 C9.80818799,1.73895652 8.03792712,2.46443478 6.70827494,3.78078261 C5.39505755,5.08069565 4.71418799,6.74295652 4.73923146,8.58913043 C4.76349233,10.4126087 5.49053581,12.222 6.78653581,13.6862609 C9.03966625,16.2305217 10.568101,18.1166087 11.6927097,19.7773043 C12.8220141,18.111913 14.348101,16.2266087 16.598101,13.6862609 C17.894101,12.222 18.6211445,10.4126087 18.6454054,8.58913043 C18.6688836,6.74295652 17.9880141,5.08069565 16.6763619,3.78078261 C15.3451445,2.46443478 13.5756662,1.73895652 11.6911445,1.73895652 Z M11.6922402,5.21538261 C13.6127619,5.21538261 15.168588,6.7719913 15.168588,8.69251304 C15.168588,10.6122522 13.6127619,12.1688609 11.6922402,12.1688609 C9.77171842,12.1688609 8.21510973,10.6122522 8.21510973,8.69251304 C8.21510973,6.7719913 9.77171842,5.21538261 11.6922402,5.21538261 Z M11.6922402,6.95355652 C10.7327619,6.95355652 9.95328364,7.73381739 9.95328364,8.69251304 C9.95328364,9.65042609 10.7327619,10.430687 11.6922402,10.430687 C12.6509358,10.430687 13.4304141,9.65042609 13.4304141,8.69251304 C13.4304141,7.73381739 12.6509358,6.95355652 11.6922402,6.95355652 Z"}),IconLocation=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 23 23",className:className},_ref2)};IconLocation.displayName="IconLocation",IconLocation.__docgenInfo={description:"",methods:[],displayName:"IconLocation",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconLocation,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconLocation.tsx"]={name:"IconLocation",docgenInfo:IconLocation.__docgenInfo,path:"src/icons/IconLocation.tsx"})},371:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{fillRule:"nonzero",d:"M2.824 9.109V5.322C2.824 2.66 5.14.5 8 .5c2.859 0 5.176 2.161 5.176 4.822V9.11h1.05c.98 0 1.774.858 1.774 1.911v9.568c0 1.056-.793 1.912-1.773 1.912H1.773C.794 22.5 0 21.642 0 20.588V11.02C0 9.965.793 9.11 1.773 9.11h1.05zm-.942 1.913v9.565h12.236v-9.565H1.882zm9.412-1.913V5.322c0-1.566-1.44-2.909-3.294-2.909-1.855 0-3.294 1.341-3.294 2.91v3.786h6.588zM7.06 14.642c0-.529.418-.957.941-.957.52 0 .941.425.941.957v2.87a.947.947 0 0 1-.941.956.946.946 0 0 1-.941-.956v-2.87z"}),IconLock=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 16 23",className:className},_ref2)};IconLock.displayName="IconLock",IconLock.__docgenInfo={description:"",methods:[],displayName:"IconLock",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconLock,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconLock.tsx"]={name:"IconLock",docgenInfo:IconLock.__docgenInfo,path:"src/icons/IconLock.tsx"})},372:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M1.01301075,4.01419355 L22.9875806,4.01419355 L22.9875806,6.61634409 L1.01301075,6.61634409 L1.01301075,4.01419355 Z M1.01301075,17.7482258 L22.9875806,17.7482258 L22.9875806,20.3503763 L1.01301075,20.3503763 L1.01301075,17.7482258 Z M1.01301075,10.8815054 L22.9875806,10.8815054 L22.9875806,13.4836559 L1.01301075,13.4836559 L1.01301075,10.8815054 Z"}),IconMenu=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 24 24",className:className},_ref2)};IconMenu.displayName="IconMenu",IconMenu.__docgenInfo={description:"",methods:[],displayName:"IconMenu",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconMenu,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconMenu.tsx"]={name:"IconMenu",docgenInfo:IconMenu.__docgenInfo,path:"src/icons/IconMenu.tsx"})},373:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M16.7490333,12.5490233 C19.4818667,12.5490233 21.6979,14.7650567 21.6979,17.49789 L21.6979,17.49789 L21.6979,22.44739 L3,22.44739 L3,17.4985233 C3,14.7650567 5.21603333,12.5490233 7.9495,12.5490233 L7.9495,12.5490233 Z M16.7490333,14.1982233 L7.9495,14.1982233 C6.12993333,14.1982233 4.64983333,15.6783233 4.64983333,17.4985233 L4.64983333,17.4985233 L4.64983333,20.7975567 L20.0487,20.7975567 L20.0487,17.49789 C20.0487,15.6783233 18.5686,14.1982233 16.7490333,14.1982233 L16.7490333,14.1982233 Z M12.3490767,1 C15.1591767,1 17.43601,3.27683333 17.43601,6.0863 C17.43601,8.89576667 15.1591767,11.1738667 12.3490767,11.1738667 C9.53961,11.1738667 7.26214333,8.89576667 7.26214333,6.0863 C7.26214333,3.27683333 9.53961,1 12.3490767,1 Z M12.3490767,2.6492 C10.45351,2.6492 8.91197667,4.192 8.91197667,6.0863 C8.91197667,7.98186667 10.45351,9.5234 12.3490767,9.5234 C14.2446433,9.5234 15.7861767,7.98186667 15.7861767,6.0863 C15.7861767,4.192 14.2446433,2.6492 12.3490767,2.6492 Z"}),IconPerson=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 24 24",className:className},_ref2)};IconPerson.displayName="IconPerson",IconPerson.__docgenInfo={description:"",methods:[],displayName:"IconPerson",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconPerson,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconPerson.tsx"]={name:"IconPerson",docgenInfo:IconPerson.__docgenInfo,path:"src/icons/IconPerson.tsx"})},374:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M16.0534473,5.99010472 C15.9780639,5.99010472 15.9054984,5.99503635 15.832933,5.9971499 L15.832933,1 L12.5794665,1 C10.1474685,1 8.16918052,2.97969706 8.16918052,5.41169501 L8.16918052,5.99785442 C8.09450155,5.99574087 8.0240497,5.99010472 7.94725718,5.99010472 L1,5.99010472 L1,22.2017805 L7.94725718,22.2017805 C9.78393698,22.2017805 10.7470138,22.7844173 11.4705543,23.4297563 L11.9179236,23.8771256 L11.9284914,23.8658533 C11.952445,23.8898069 11.9763986,23.914465 11.9996477,23.9391232 C12.809844,23.1289269 13.7376949,22.2017805 16.0534473,22.2017805 L23,22.2017805 L23,5.99010472 L16.0534473,5.99010472 Z M10.0431998,5.41169501 C10.0431998,4.01252122 11.1809972,2.87401928 12.5794665,2.87401928 L13.9582092,2.87401928 L13.9582092,13.7376949 L12.578762,13.7376949 C11.6389343,13.7376949 10.7625132,14.0427515 10.0431998,14.5591635 L10.0431998,5.41169501 Z M10.0431998,18.1578442 C10.0579947,17.3335575 10.4588657,16.6015628 11.0626381,16.1351715 L11.0626381,20.3714414 L10.7843533,20.0938611 C10.3574151,19.6662183 10.0650399,18.9278829 10.0431998,18.2332277 L10.0431998,18.1578442 Z M2.87401928,20.3277612 L2.87401928,7.864124 L7.94725718,7.864124 C8.0240497,7.864124 8.09520607,7.86835111 8.16918052,7.87116918 L8.16777148,18.1500945 C8.16777148,18.913088 8.36080956,19.6880584 8.701092,20.3580555 C8.46226022,20.338329 8.21145163,20.3277612 7.94725718,20.3277612 L2.87401928,20.3277612 Z M21.1259807,20.3277612 L16.0534473,20.3277612 C14.7352932,20.3277612 13.7285362,20.5771608 12.9373619,20.9350562 L12.9373619,15.6117142 L15.832933,15.6117142 L15.832933,7.87046466 C15.9047939,7.86764659 15.9773593,7.864124 16.0534473,7.864124 L21.1259807,7.864124 L21.1259807,20.3277612 Z"}),IconRead=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 24 24",className:className},_ref2)};IconRead.displayName="IconRead",IconRead.__docgenInfo={description:"",methods:[],displayName:"IconRead",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconRead,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconRead.tsx"]={name:"IconRead",docgenInfo:IconRead.__docgenInfo,path:"src/icons/IconRead.tsx"})},375:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M15.3582734,0.0535251799 C12.0567815,0.0517959979 9.04784082,1.94662012 7.62269829,4.92467659 C6.19755575,7.90273306 6.6096026,11.4345925 8.68201439,14.0046043 L0.00920863309,22.676259 L1.30820144,23.9758273 L9.98273381,15.3035971 C12.9168981,17.6690044 17.0515408,17.841428 20.1724602,15.7285309 C23.2933795,13.6156338 24.6689728,9.71271903 23.5625765,6.10989254 C22.4561801,2.50706606 19.1271543,0.0488985453 15.3582734,0.0517959979 L15.3582734,0.0535251799 Z M15.3582734,15.3657554 C11.637384,15.3657554 8.62100719,12.3493786 8.62100719,8.62848921 C8.62100719,4.90759984 11.637384,1.89122302 15.3582734,1.89122302 C19.0791628,1.89122302 22.0955396,4.90759984 22.0955396,8.62848921 C22.0917339,12.3479875 19.0777709,15.3624653 15.3582734,15.3669065 L15.3582734,15.3657554 Z"}),IconSearch=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 24 24",className:className},_ref2)};IconSearch.displayName="IconSearch",IconSearch.__docgenInfo={description:"",methods:[],displayName:"IconSearch",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconSearch,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconSearch.tsx"]={name:"IconSearch",docgenInfo:IconSearch.__docgenInfo,path:"src/icons/IconSearch.tsx"})},376:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M17.7854267,14.5718468 C16.8756557,14.5718468 16.0551783,14.9502318 15.4703777,15.5569651 L9.3866954,12.5123201 C9.41377628,12.3454501 9.42841459,12.1749207 9.42841459,12 C9.42841459,11.8258112 9.41377628,11.6545499 9.3866954,11.486948 L15.4725735,8.44596243 C16.057374,9.05196389 16.8771195,9.42888509 17.7854267,9.42888509 C19.560322,9.42888509 21,7.98999756 21,6.21517443 C21,4.43888753 19.560322,3 17.7854267,3 C16.0105315,3 14.5701216,4.43888753 14.5701216,6.21517443 C14.5701216,6.38643572 14.5847599,6.55623323 14.6111089,6.72017565 L8.52157118,9.7640888 C7.93677063,9.16101488 7.11995283,8.78628934 6.21310942,8.78628934 C4.43894604,8.78628934 3,10.2251769 3,12 C3,13.775555 4.43894604,15.2144425 6.21310942,15.2144425 C7.11995283,15.2144425 7.93823446,14.8382532 8.52230309,14.2359112 L14.6103769,17.2834838 C14.5847599,17.4474262 14.5701216,17.6150281 14.5701216,17.7862893 C14.5701216,19.5603806 16.0105315,21 17.7854267,21 C19.560322,21 21,19.5603806 21,17.7862893 C21,16.0107343 19.560322,14.5718468 17.7854267,14.5718468 M17.7854267,4.92925104 C18.494653,4.92925104 19.0714024,5.50524518 19.0714024,6.21517443 C19.0714024,6.92363991 18.494653,7.50036594 17.7854267,7.50036594 C17.0762005,7.50036594 16.4994511,6.92363991 16.4994511,6.21517443 C16.4994511,5.50524518 17.0762005,4.92925104 17.7854267,4.92925104 M6.21310942,13.2859234 C5.50534705,13.2859234 4.92859757,12.7091974 4.92859757,12 C4.92859757,11.2915345 5.50534705,10.7140766 6.21310942,10.7140766 C6.92306754,10.7140766 7.49981702,11.2915345 7.49981702,12 C7.49981702,12.7091974 6.92306754,13.2859234 6.21310942,13.2859234 M17.7854267,19.070749 C17.0762005,19.070749 16.4994511,18.4940229 16.4994511,17.7862893 C16.4994511,17.077092 17.0762005,16.5003659 17.7854267,16.5003659 C18.494653,16.5003659 19.0714024,17.077092 19.0714024,17.7862893 C19.0714024,18.4940229 18.494653,19.070749 17.7854267,19.070749"}),IconShare=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 24 24",className:className},_ref2)};IconShare.displayName="IconShare",IconShare.__docgenInfo={description:"",methods:[],displayName:"IconShare",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconShare,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconShare.tsx"]={name:"IconShare",docgenInfo:IconShare.__docgenInfo,path:"src/icons/IconShare.tsx"})},377:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M12.013717,1.01899281 C18.0697842,1.02004796 22.9794245,5.92968825 22.9794245,11.9852278 C22.9794245,18.0407674 18.0682014,22.9504077 12.013717,22.9504077 C5.95923261,22.9504077 1.04853717,18.041295 1.04853717,11.9852278 C1.04853717,5.92916067 5.95923261,1.02004796 12.013717,1.01899281 L12.013717,1.01899281 Z M12.013717,2.84652278 C6.97534772,2.84652278 2.87764988,6.94685851 2.87764988,11.9852278 C2.87764988,17.0235971 6.97640288,21.1228777 12.0152998,21.1228777 C17.0541966,21.1228777 21.1534772,17.0235971 21.1534772,11.9852278 C21.1534772,6.94685851 17.0526139,2.84652278 12.013717,2.84652278 Z M16.3688729,14.1029257 L18.0117506,14.903789 C16.9025481,17.205879 14.5690751,18.6656081 12.013717,18.6559233 C9.45683429,18.6671944 7.12141723,17.2069429 6.01199041,14.9032614 L7.65486811,14.1029257 C8.46605189,15.7702798 10.157662,16.828478 12.0118705,16.828478 C13.866079,16.828478 15.5576891,15.7702798 16.3688729,14.1029257 Z M8.0542446,8.33016787 C8.89543918,8.33016787 9.57736211,9.0120908 9.57736211,9.85328537 C9.57736211,10.6944799 8.89543918,11.3764029 8.0542446,11.3764029 C7.21305003,11.3764029 6.5311271,10.6944799 6.5311271,9.85328537 C6.5311271,9.0120908 7.21305003,8.33016787 8.0542446,8.33016787 Z M15.973717,8.33016787 C16.8149116,8.33016787 17.4968345,9.0120908 17.4968345,9.85328537 C17.4968345,10.6944799 16.8149116,11.3764029 15.973717,11.3764029 C15.1325225,11.3764029 14.4505995,10.6944799 14.4505995,9.85328537 C14.4505995,9.0120908 15.1325225,8.33016787 15.973717,8.33016787 Z"}),IconSmile=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 24 24",className:className},_ref2)};IconSmile.displayName="IconSmile",IconSmile.__docgenInfo={description:"",methods:[],displayName:"IconSmile",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconSmile,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconSmile.tsx"]={name:"IconSmile",docgenInfo:IconSmile.__docgenInfo,path:"src/icons/IconSmile.tsx"})},378:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M11.6234783,1 L22.8502609,5.81173913 C22.8502609,8.43126087 21.7902174,10.9868696 20.0718696,12.7033913 L20.0718696,12.7033913 L16.0298261,16.7463478 C14.3133043,18.4637826 13.2514348,20.8349565 13.2514348,23.4544783 L13.2514348,23.4544783 L2,18.6418261 C2,16.0232174 3.08652174,13.4657826 4.80304348,11.7492609 L4.80304348,11.7492609 L8.84508696,7.70813043 C10.5616087,5.99069565 11.6234783,3.61952174 11.6234783,1 L11.6234783,1 Z M13.529,4.43395652 C13.339087,5.06486957 13.0962174,5.67752174 12.8040435,6.26734783 C12.9747826,6.32669565 13.1327391,6.42165217 13.2605652,6.55130435 C13.4851739,6.77408696 13.6148261,7.08452174 13.6148261,7.40134783 C13.6148261,7.71634783 13.4851739,8.02769565 13.2605652,8.25047826 C13.0368696,8.476 12.7264348,8.60473913 12.4105217,8.60473913 C12.0964348,8.60473913 11.786,8.476 11.5632174,8.25230435 C11.2518696,8.65678261 10.9131304,9.043 10.546087,9.40913043 L10.546087,9.40913043 L6.50495652,13.4511739 C5.53621739,14.418087 4.856,15.7264783 4.56565217,17.1225217 L4.56565217,17.1225217 L11.345913,20.0223478 C11.9046957,18.1624783 12.9172609,16.4578261 14.3288261,15.0453478 L14.3288261,15.0453478 L17.9070435,11.4680435 C17.8413043,11.4251304 17.7792174,11.374913 17.7244348,11.3201304 C17.5007391,11.0955217 17.372,10.786 17.372,10.4682609 C17.372,10.1514348 17.5007391,9.84282609 17.7244348,9.61730435 C17.9490435,9.39269565 18.2585652,9.26486957 18.5753913,9.26486957 C18.8894783,9.26486957 19.199913,9.39178261 19.4226957,9.6163913 C19.8262609,8.91791304 20.1248261,8.14182609 20.290087,7.33195652 L20.290087,7.33195652 Z M14.4174826,8.3962 C14.7151348,7.80272174 15.4382652,7.56167826 16.0317435,7.86024348 C16.6261348,8.15606957 16.8653522,8.8792 16.568613,9.4735913 C16.356787,9.89541739 15.9340478,10.1364609 15.4930478,10.1364609 C15.3113522,10.1364609 15.1269174,10.0972 14.9534391,10.0104609 C14.3608739,9.71189565 14.1198304,8.98876522 14.4174826,8.3962 Z"}),IconTicket=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 24 24",className:className},_ref2)};IconTicket.displayName="IconTicket",IconTicket.__docgenInfo={description:"",methods:[],displayName:"IconTicket",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconTicket,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconTicket.tsx"]={name:"IconTicket",docgenInfo:IconTicket.__docgenInfo,path:"src/icons/IconTicket.tsx"})},379:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{fillRule:"evenodd",d:"M9.363 9.421a.898.898 0 1 1-1.794 0 3.91 3.91 0 0 1 1.148-2.774 3.91 3.91 0 0 1 2.774-1.148 3.91 3.91 0 0 1 2.774 1.148 3.91 3.91 0 0 1 1.148 2.774 3.91 3.91 0 0 1-1.148 2.775 3.898 3.898 0 0 1-1.875 1.044v.388a.899.899 0 1 1-1.798 0v-1.184c0-.492.402-.894.899-.894.587 0 1.12-.24 1.505-.624a2.124 2.124 0 0 0 0-3.01 2.124 2.124 0 0 0-3.01 0 2.124 2.124 0 0 0-.623 1.505zm2.038 8.075a.895.895 0 0 1-.9-.894c0-.497.403-.9.9-.9h.198c.497 0 .9.403.9.9a.895.895 0 0 1-.9.894h-.198zm.099 3.706a9.656 9.656 0 0 0 6.86-2.843 9.656 9.656 0 0 0 2.842-6.859 9.675 9.675 0 0 0-2.843-6.864A9.675 9.675 0 0 0 11.5 1.794a9.694 9.694 0 0 0-6.864 2.842A9.694 9.694 0 0 0 1.794 11.5a9.675 9.675 0 0 0 2.842 6.86 9.675 9.675 0 0 0 6.864 2.842zm8.13-1.573A11.454 11.454 0 0 1 11.5 23c-3.177 0-6.05-1.288-8.134-3.37A11.468 11.468 0 0 1 0 11.5a11.48 11.48 0 0 1 3.366-8.134A11.48 11.48 0 0 1 11.5 0c3.172 0 6.05 1.288 8.13 3.366A11.464 11.464 0 0 1 23 11.5c0 3.172-1.288 6.05-3.37 8.13z"}),IconTooltip=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 23 23",className:className},_ref2)};IconTooltip.displayName="IconTooltip",IconTooltip.__docgenInfo={description:"",methods:[],displayName:"IconTooltip",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconTooltip,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconTooltip.tsx"]={name:"IconTooltip",docgenInfo:IconTooltip.__docgenInfo,path:"src/icons/IconTooltip.tsx"})},380:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M17.250564,11.2321141 C17.250564,10.8655334 17.497019,10.5435063 17.896874,10.0494683 C18.3886561,9.44432807 19,8.69086368 19,7.56461489 C19,5.62455688 17.3537705,4.8519175 16.469465,4.43627135 C16.2686916,4.3420883 16.0414115,4.23606188 15.9624557,4.17346117 C15.7690139,4.02288108 15.5626007,3.68111505 15.3437802,3.32017403 C14.7854496,2.39582662 13.940622,1 12,1 C10.0283597,1 9.21737029,2.40767 8.68159845,3.33765711 C8.4751853,3.69521431 8.2811795,4.03190461 8.09788914,4.1785369 C8.0206252,4.24057364 7.77247825,4.35505962 7.57339671,4.44755076 C6.673864,4.86263294 5,5.63640026 5,7.56461489 C5,8.69086368 5.61134386,9.44432807 6.10256204,10.0494683 C6.50354496,10.5435063 6.74887206,10.8655334 6.74887206,11.2321141 C6.74887206,11.5090235 6.66089268,11.6455044 6.44150822,11.9539961 C6.15162746,12.3640026 5.75402836,12.9240251 5.75402836,13.9662423 C5.75402836,15.6564615 7.1741057,16.7088302 8.54737351,17.7279246 C9.93699646,18.7577345 11.2493555,19.7305833 11.2493555,21.2645827 L11.2493555,21.2668385 L11.2493555,22.7540284 L12.7506445,22.7540284 L12.7506445,21.2645827 C12.7506445,19.7305833 14.0630035,18.7577345 15.4526265,17.7279246 C16.8253303,16.7088302 18.2459716,15.6564615 18.2459716,13.9662423 C18.2459716,12.9240251 17.8489365,12.3640026 17.5579278,11.9539961 C17.3391073,11.6455044 17.250564,11.5090235 17.250564,11.2321141 M16.3341121,12.8213825 C16.5726716,13.1586368 16.7452465,13.402272 16.7452465,13.9662423 C16.7452465,14.9013052 15.7323558,15.6519497 14.5592975,16.5227199 C13.9479536,16.9755881 13.3050274,17.4521431 12.7506445,18.0042701 L12.7506445,16.0771834 L15.0347245,13.7919755 L13.9738962,12.7311473 L12.7506445,13.9549629 L12.7506445,11.0764583 L15.5304544,8.29552046 L14.4696262,7.23412826 L12.7506445,8.95423783 L12.7506445,5.26417983 L11.2493555,5.26417983 L11.2493555,8.95423783 L9.53037383,7.23412826 L8.4695456,8.29552046 L11.2493555,11.0764583 L11.2493555,13.9549629 L10.0255398,12.7311473 L8.96527554,13.7919755 L11.2493555,16.0771834 L11.2493555,18.0042701 C10.6944086,17.4521431 10.0520464,16.9755881 9.44126652,16.5227199 C8.26764422,15.6519497 7.25418949,14.9013052 7.25418949,13.9662423 C7.25418949,13.402272 7.42676442,13.1586368 7.66532388,12.8213825 C7.92587818,12.4548018 8.24903319,11.9979858 8.24903319,11.2321141 C8.24903319,10.3139704 7.72792459,9.67160812 7.26772478,9.10481792 C6.85602643,8.59668063 6.50016113,8.15903964 6.50016113,7.56461489 C6.50016113,7.01530777 6.62592652,6.53818885 8.20278762,5.80897519 C8.53158234,5.65670319 8.8158234,5.52586207 9.03520786,5.34990332 C9.43901063,5.02674831 9.70182082,4.56993232 9.98042217,4.0871737 C10.5494683,3.09966162 10.9696262,2.5007251 12,2.5007251 C13.0213503,2.5007251 13.4595553,3.10304544 14.0601837,4.0967612 C14.3523203,4.57839188 14.6286658,5.03520786 15.0381083,5.35497905 C15.2507251,5.52135031 15.5203029,5.64824364 15.8316146,5.79431196 C16.8078472,6.25338382 17.4992749,6.64816307 17.4992749,7.56461489 C17.4992749,8.15903964 17.1439736,8.59668063 16.7317112,9.10481792 C16.2726394,9.67160812 15.7504028,10.3139704 15.7504028,11.2321141 C15.7504028,11.9979858 16.0741218,12.4548018 16.3341121,12.8213825"}),IconTree=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 24 24",className:className},_ref2)};IconTree.displayName="IconTree",IconTree.__docgenInfo={description:"",methods:[],displayName:"IconTree",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconTree,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconTree.tsx"]={name:"IconTree",docgenInfo:IconTree.__docgenInfo,path:"src/icons/IconTree.tsx"})},381:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M10.6882469,18.0720375 L12.5347156,18.5665375 L11.2388094,23.403725 L9.39234062,22.9085063 L10.6882469,18.0720375 Z M18.4041,1 C19.7395375,1 20.9951938,1.51965625 21.9396313,2.463375 C22.88335,3.40853125 23.403725,4.6641875 23.403725,5.999625 C23.403725,7.33434375 22.88335,8.59 21.9396313,9.53515625 L21.9396313,9.53515625 L17.6443813,13.8347187 L17.6443813,21.461375 L2.94235,6.75934375 L10.5733188,6.75934375 L14.8685688,2.463375 C15.8130063,1.51965625 17.0693813,1 18.4041,1 Z M7.8261125,15.2257156 L9.17808125,16.5776844 L5.35433125,20.4007156 L4.0023625,19.0487469 L7.8261125,15.2257156 Z M10.5733188,8.67121875 L7.5581625,8.67121875 L15.7325063,16.8455625 L15.7325063,13.8347187 L10.5733188,8.67121875 Z M5.83646875,11.8682187 L6.33096875,13.7139687 L1.4945,15.0113125 L1,13.164125 L5.83646875,11.8682187 Z M18.4041,2.91115625 C17.578975,2.91115625 16.8034438,3.2324375 16.2205375,3.8160625 L16.2205375,3.8160625 L12.3206,7.71528125 L16.6884438,12.0874375 L20.5869438,8.1831875 C21.7915688,6.9785625 21.7915688,5.01996875 20.5869438,3.8160625 C20.0047563,3.2324375 19.2285063,2.91115625 18.4041,2.91115625 Z"}),IconVolume=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 24 24",className:className},_ref2)};IconVolume.displayName="IconVolume",IconVolume.__docgenInfo={description:"",methods:[],displayName:"IconVolume",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconVolume,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconVolume.tsx"]={name:"IconVolume",docgenInfo:IconVolume.__docgenInfo,path:"src/icons/IconVolume.tsx"})},382:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("g",{fillRule:"evenodd"},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{fill:"none",stroke:"currentColor",strokeWidth:"2.5",d:"M16.457 2.108L28.033 20.35a1.8 1.8 0 0 1-1.52 2.765H3.362a1.8 1.8 0 0 1-1.52-2.765l11.576-18.24a1.8 1.8 0 0 1 3.04 0z"}),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M16.5 16.916v2.38H14v-2.38h2.5zM16.5 7v7.783H14V7.001L16.5 7z"})),IconWarning=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 30 25",className:className},_ref2)};IconWarning.displayName="IconWarning",IconWarning.__docgenInfo={description:"",methods:[],displayName:"IconWarning",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconWarning,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconWarning.tsx"]={name:"IconWarning",docgenInfo:IconWarning.__docgenInfo,path:"src/icons/IconWarning.tsx"})},383:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_ref2=react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path",{d:"M13.3822163,16.4386198 C16.5500995,16.047777 19,13.587923 19,10.6191108 C19,8.95023225 18.6290644,7.46914399 18.2707366,6.03715992 C17.9236894,4.64698076 17.5952223,3.33377571 17.5952223,1.88254811 L17.5952223,1 L7.40411413,1 L7.40411413,1.88254811 C7.40411413,3.33377571 7.07631055,4.64698076 6.72926344,6.03715992 C6.37093563,7.46914399 6,8.95023225 6,10.6191108 C6,13.587923 8.44923689,16.047777 11.6177837,16.4386198 L11.6177837,21.5938952 L6.88852024,21.5932316 L6.88852024,23.3583278 L18.1114798,23.3583278 L18.1114798,21.5932316 L13.3822163,21.5938952 L13.3822163,16.4386198 Z M9.13669542,2.76575979 L15.8633046,2.76575979 C15.9628401,4.08228268 16.2647644,5.28998009 16.5580624,6.46582614 C16.6881221,6.98473789 16.8155275,7.49369608 16.9236894,8.00199071 C16.6622429,8.07498341 16.4439283,8.16456536 16.2488388,8.2455209 C15.9124088,8.3848706 15.6675514,8.48706038 15.2368945,8.48706038 C14.8062376,8.48706038 14.5627074,8.3848706 14.2256138,8.2455209 C13.8155275,8.07564698 13.3059058,7.86396815 12.4996682,7.86396815 C11.6940942,7.86396815 11.1838089,8.07564698 10.7743862,8.2455209 C10.4372926,8.3848706 10.1930989,8.48706038 9.76244194,8.48706038 C9.331785,8.48706038 9.08759124,8.3848706 8.75116125,8.2455209 C8.55607167,8.16456536 8.33709356,8.07498341 8.07564698,8.00199071 C8.18380889,7.49369608 8.31121433,6.98473789 8.44193762,6.46582614 C8.734572,5.28998009 9.03649635,4.08228268 9.13669542,2.76575979 L9.13669542,2.76575979 Z M7.76509622,10.6191108 C7.76509622,10.3304579 7.77969476,10.0471135 7.80291971,9.7677505 C7.89051095,9.80026543 7.97876576,9.83676178 8.07431984,9.87591241 C8.4777704,10.0431321 8.9800929,10.2521566 9.76244194,10.2521566 C10.5454545,10.2521566 11.0464499,10.0431321 11.450564,9.87591241 C11.7956204,9.73324486 12.0451228,9.62906437 12.4996682,9.62906437 C12.9542137,9.62906437 13.203716,9.73324486 13.549436,9.87591241 C13.9528865,10.0431321 14.4545455,10.2521566 15.2368945,10.2521566 C16.0199071,10.2521566 16.521566,10.0431321 16.9256802,9.87591241 C17.0205707,9.83676178 17.1094891,9.80026543 17.1970803,9.7677505 C17.2203052,10.0471135 17.2342402,10.3304579 17.2342402,10.6191108 C17.2342402,12.885866 15.1101526,14.7292634 12.4996682,14.7292634 C9.88918381,14.7292634 7.76509622,12.885866 7.76509622,10.6191108 L7.76509622,10.6191108 Z"}),IconWine=function(_ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"100%",viewBox:"0 0 24 24",className:className},_ref2)};IconWine.displayName="IconWine",IconWine.__docgenInfo={description:"",methods:[],displayName:"IconWine",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the icon"}}},__webpack_exports__.default=IconWine,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icons/IconWine.tsx"]={name:"IconWine",docgenInfo:IconWine.__docgenInfo,path:"src/icons/IconWine.tsx"})},43:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__(349),__webpack_require__(350);var _IconAngleRight__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(351);__webpack_require__.d(__webpack_exports__,"a",(function(){return _IconAngleRight__WEBPACK_IMPORTED_MODULE_2__.default}));__webpack_require__(352),__webpack_require__(353),__webpack_require__(354);var _IconAttention__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(355);__webpack_require__.d(__webpack_exports__,"b",(function(){return _IconAttention__WEBPACK_IMPORTED_MODULE_6__.default}));__webpack_require__(356),__webpack_require__(357),__webpack_require__(358);var _IconCheck__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(359);__webpack_require__.d(__webpack_exports__,"c",(function(){return _IconCheck__WEBPACK_IMPORTED_MODULE_10__.default}));var _IconClose__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(360);__webpack_require__.d(__webpack_exports__,"d",(function(){return _IconClose__WEBPACK_IMPORTED_MODULE_11__.default}));__webpack_require__(361),__webpack_require__(362),__webpack_require__(363),__webpack_require__(364),__webpack_require__(365),__webpack_require__(366);var _IconInfo__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__(367);__webpack_require__.d(__webpack_exports__,"e",(function(){return _IconInfo__WEBPACK_IMPORTED_MODULE_18__.default}));__webpack_require__(368),__webpack_require__(369),__webpack_require__(370),__webpack_require__(371),__webpack_require__(372),__webpack_require__(373),__webpack_require__(374),__webpack_require__(375);var _IconShare__WEBPACK_IMPORTED_MODULE_27__=__webpack_require__(376);__webpack_require__.d(__webpack_exports__,"f",(function(){return _IconShare__WEBPACK_IMPORTED_MODULE_27__.default}));var _IconSmile__WEBPACK_IMPORTED_MODULE_28__=__webpack_require__(377);__webpack_require__.d(__webpack_exports__,"g",(function(){return _IconSmile__WEBPACK_IMPORTED_MODULE_28__.default}));__webpack_require__(378);var _IconTooltip__WEBPACK_IMPORTED_MODULE_30__=__webpack_require__(379);__webpack_require__.d(__webpack_exports__,"h",(function(){return _IconTooltip__WEBPACK_IMPORTED_MODULE_30__.default}));__webpack_require__(380),__webpack_require__(381);var _IconWarning__WEBPACK_IMPORTED_MODULE_33__=__webpack_require__(382);__webpack_require__.d(__webpack_exports__,"i",(function(){return _IconWarning__WEBPACK_IMPORTED_MODULE_33__.default}));__webpack_require__(383)},54:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__(3);var _home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(99),react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__),_Button_module_css__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(114),_Button_module_css__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_Button_module_css__WEBPACK_IMPORTED_MODULE_3__),_utils_classNames__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(31),Button=react__WEBPACK_IMPORTED_MODULE_2___default.a.forwardRef((function(_ref,ref){var children=_ref.children,className=_ref.className,_ref$disabled=_ref.disabled,disabled=void 0!==_ref$disabled&&_ref$disabled,fullWidth=_ref.fullWidth,_ref$size=_ref.size,size=void 0===_ref$size?"default":_ref$size,_ref$theme=_ref.theme,theme=void 0===_ref$theme?"default":_ref$theme,_ref$variant=_ref.variant,variant=void 0===_ref$variant?"primary":_ref$variant,iconLeft=_ref.iconLeft,iconRight=_ref.iconRight,rest=Object(_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__.a)(_ref,["children","className","disabled","fullWidth","size","theme","variant","iconLeft","iconRight"]),iconElementLeft=iconLeft?react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div",{className:_Button_module_css__WEBPACK_IMPORTED_MODULE_3___default.a.icon,"aria-hidden":"true"},iconLeft):null,iconElementRight=iconRight?react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div",{className:Object(_utils_classNames__WEBPACK_IMPORTED_MODULE_4__.a)(_Button_module_css__WEBPACK_IMPORTED_MODULE_3___default.a.icon),"aria-hidden":"true"},iconRight):null;return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("button",Object.assign({ref:ref,disabled:disabled,type:"button",className:Object(_utils_classNames__WEBPACK_IMPORTED_MODULE_4__.a)(_Button_module_css__WEBPACK_IMPORTED_MODULE_3___default.a.button,_Button_module_css__WEBPACK_IMPORTED_MODULE_3___default.a[variant],_Button_module_css__WEBPACK_IMPORTED_MODULE_3___default.a["theme-".concat(theme)],_Button_module_css__WEBPACK_IMPORTED_MODULE_3___default.a["size-".concat(size)],fullWidth?_Button_module_css__WEBPACK_IMPORTED_MODULE_3___default.a.fullWidth:"",className)},rest),iconElementLeft,react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("span",{className:_Button_module_css__WEBPACK_IMPORTED_MODULE_3___default.a.label},children),iconElementRight)}));Button.__docgenInfo={description:"",methods:[],displayName:"Button",props:{disabled:{defaultValue:{value:"false",computed:!1},required:!1,tsType:{name:"boolean"},description:"If `true`, the button will be disabled"},size:{defaultValue:{value:"'default'",computed:!1},required:!1,tsType:{name:"union",raw:"'default' | 'small'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'small'"}]},description:"The size of the button\n\nAvailable options: `'default' | 'small'`"},theme:{defaultValue:{value:"'default'",computed:!1},required:!1,tsType:{name:"union",raw:"'default' | 'coat' | 'black'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'coat'"},{name:"literal",value:"'black'"}]},description:"Defines the button theme\n\nAvailable options: `'default' | 'coat' | 'black'`"},variant:{defaultValue:{value:"'primary'",computed:!1},required:!1,tsType:{name:"union",raw:"'primary' | 'secondary' | 'supplementary' | 'success' | 'danger'",elements:[{name:"literal",value:"'primary'"},{name:"literal",value:"'secondary'"},{name:"literal",value:"'supplementary'"},{name:"literal",value:"'success'"},{name:"literal",value:"'danger'"}]},description:"Defines the button variant\n\nAvailable options: `'primary' | 'secondary' | 'supplementary' | 'success' | 'danger'`"},children:{required:!0,tsType:{name:"ReactNode"},description:"The content of the button"},className:{required:!1,tsType:{name:"string"},description:"Additional class names to apply to the button"},fullWidth:{required:!1,tsType:{name:"boolean"},description:"If `true`, the button will take up the full width of its container"},iconLeft:{required:!1,tsType:{name:"ReactElement"},description:"Element placed on the left side of the button label"},iconRight:{required:!1,tsType:{name:"ReactElement"},description:"Element placed on the right side of the button label"}}},__webpack_exports__.a=Button,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/button/Button.tsx"]={name:"Button",docgenInfo:Button.__docgenInfo,path:"src/components/button/Button.tsx"})},568:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/placeholder_2_1920x1080.d828e0e6.jpg"},569:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/placeholder_1400x1164.a73385e3.jpg"},570:function(module,exports,__webpack_require__){module.exports={columns:"Columns_columns__34aHN"}},572:function(module,exports,__webpack_require__){__webpack_require__(573),__webpack_require__(715),__webpack_require__(716),__webpack_require__(845),__webpack_require__(1466),__webpack_require__(1498),__webpack_require__(1505),__webpack_require__(1509),__webpack_require__(1524),__webpack_require__(1527),module.exports=__webpack_require__(1533)},635:function(module,exports){},67:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__(3);var _home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(99),react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__),_TextInput_module_css__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(84),_TextInput_module_css__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_TextInput_module_css__WEBPACK_IMPORTED_MODULE_3__),_internal_inputwrapper_InputWrapper__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(240),TextInput=Object(react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)((function(_ref,ref){var _ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className,_ref$disabled=_ref.disabled,disabled=void 0!==_ref$disabled&&_ref$disabled,defaultValue=_ref.defaultValue,helperText=_ref.helperText,hideLabel=_ref.hideLabel,invalid=_ref.invalid,id=_ref.id,labelText=_ref.labelText,_ref$onChange=_ref.onChange,onChange=void 0===_ref$onChange?function(){return null}:_ref$onChange,style=_ref.style,tooltipLabel=_ref.tooltipLabel,tooltipText=_ref.tooltipText,tooltipOpenButtonLabelText=_ref.tooltipOpenButtonLabelText,tooltipCloseButtonLabelText=_ref.tooltipCloseButtonLabelText,_ref$type=_ref.type,type=void 0===_ref$type?"text":_ref$type,rest=Object(_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__.a)(_ref,["className","disabled","defaultValue","helperText","hideLabel","invalid","id","labelText","onChange","style","tooltipLabel","tooltipText","tooltipOpenButtonLabelText","tooltipCloseButtonLabelText","type"]);return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_internal_inputwrapper_InputWrapper__WEBPACK_IMPORTED_MODULE_4__.a,Object.assign({id:id},{className:className,helperText:helperText,hideLabel:hideLabel,id:id,invalid:invalid,labelText:labelText,style:style,tooltipLabel:tooltipLabel,tooltipText:tooltipText,tooltipOpenButtonLabelText:tooltipOpenButtonLabelText,tooltipCloseButtonLabelText:tooltipCloseButtonLabelText}),react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("input",Object.assign({className:_TextInput_module_css__WEBPACK_IMPORTED_MODULE_3___default.a.input,defaultValue:defaultValue,disabled:disabled,id:id,onChange:onChange,ref:ref,type:type},rest)))}));TextInput.__docgenInfo={description:"",methods:[],displayName:"TextInput",props:{className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:"Additional class names to apply to the text input"},disabled:{defaultValue:{value:"false",computed:!1},required:!1,tsType:{name:"boolean"},description:"If `true`, the input will be disabled"},onChange:{defaultValue:{value:"() => null",computed:!1},required:!1,tsType:{name:"ChangeEventHandler",elements:[{name:"HTMLInputElement"}],raw:"ChangeEventHandler<HTMLInputElement>"},description:"Callback fired when the state is changed"},type:{defaultValue:{value:"'text'",computed:!1},required:!1,tsType:{name:"string"},description:"Type of the input element"},defaultValue:{required:!1,tsType:{name:"string"},description:"The default input element value. Use when the component is not controlled"},helperText:{required:!1,tsType:{name:"string"},description:"The helper text content that will be shown below the input"},hideLabel:{required:!1,tsType:{name:"boolean"},description:"Hides the label above the input"},id:{required:!0,tsType:{name:"string"},description:"The id of the input element"},invalid:{required:!1,tsType:{name:"boolean"},description:"If `true`, the input and `helperText` will be displayed in an invalid state."},labelText:{required:!1,tsType:{name:"string"},description:"The label for the input"},placeholder:{required:!1,tsType:{name:"string"},description:"Short hint displayed in the input before the user enters a value"},readOnly:{required:!1,tsType:{name:"boolean"},description:"If `true`, prevents the user from changing the value of the field (not from interacting with the field)"},style:{required:!1,tsType:{name:"CSSProperties"},description:"Override or extend the styles applied to the component. See text field [tokens](https://city-of-helsinki.github.io/helsinki-design-system/components/text-field#tokens) for available CSS variables"},tooltipLabel:{required:!1,tsType:{name:"string"},description:"The label of the tooltip"},tooltipText:{required:!1,tsType:{name:"string"},description:"The text content of the tooltip"},tooltipOpenButtonLabelText:{required:!1,tsType:{name:"string"},description:"The title for the tooltip open button"},tooltipCloseButtonLabelText:{required:!1,tsType:{name:"string"},description:"The title for the tooltip close button"},value:{required:!1,tsType:{name:"string"},description:"The value of the input element, required for a controlled component"},ref:{required:!1,tsType:{name:"RefObject",elements:[{name:"HTMLInputElement"}],raw:"RefObject<HTMLInputElement>"},description:"The `ref` is forwarded to the native input element."}}},__webpack_exports__.a=TextInput,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/textinput/TextInput.tsx"]={name:"TextInput",docgenInfo:TextInput.__docgenInfo,path:"src/components/textinput/TextInput.tsx"})},68:function(module,exports,__webpack_require__){module.exports={wrapper:"Tooltip_wrapper__3qKVz",iconTooltip:"Tooltip_iconTooltip__2-cdA",iconClose:"Tooltip_iconClose__2Kl23",buttonTooltip:"Tooltip_buttonTooltip__1NN9w",alternative:"Tooltip_alternative__hB9Dp",buttonClose:"Tooltip_buttonClose__c6pkn",tooltip:"Tooltip_tooltip__3gi6p",iconInfo:"Tooltip_iconInfo__2bBim",label:"Tooltip_label__2Ya_r",labelText:"Tooltip_labelText__1_TBB helpers_text-bold__cX4Yj",tooltipBody:"Tooltip_tooltipBody__OQv5I helpers_text-sm__2MKSA"}},716:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(148)},74:function(module,__webpack_exports__,__webpack_require__){"use strict";var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_utils_classNames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(31),_ImageWithCard_module_css__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(115),_ImageWithCard_module_css__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_ImageWithCard_module_css__WEBPACK_IMPORTED_MODULE_2__),ImageWithCard=function(_ref){var src=_ref.src,_ref$fullWidth=_ref.fullWidth,fullWidth=void 0!==_ref$fullWidth&&_ref$fullWidth,children=_ref.children,_ref$cardAlignment=_ref.cardAlignment,cardAlignment=void 0===_ref$cardAlignment?"left":_ref$cardAlignment,_ref$color=_ref.color,color=void 0===_ref$color?"plain":_ref$color,_ref$cardLayout=_ref.cardLayout,cardLayout=void 0===_ref$cardLayout?null:_ref$cardLayout,_ref$className=_ref.className,className=void 0===_ref$className?null:_ref$className;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{className:Object(_utils_classNames__WEBPACK_IMPORTED_MODULE_1__.a)(_ImageWithCard_module_css__WEBPACK_IMPORTED_MODULE_2___default.a.wrapper,_ImageWithCard_module_css__WEBPACK_IMPORTED_MODULE_2___default.a["".concat(cardAlignment,"Alignment")],cardLayout&&_ImageWithCard_module_css__WEBPACK_IMPORTED_MODULE_2___default.a["".concat(cardLayout,"Layout")],_ImageWithCard_module_css__WEBPACK_IMPORTED_MODULE_2___default.a[color],fullWidth&&_ImageWithCard_module_css__WEBPACK_IMPORTED_MODULE_2___default.a.fullWidth,className)},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{className:_ImageWithCard_module_css__WEBPACK_IMPORTED_MODULE_2___default.a.image,style:{backgroundImage:"url(".concat(src,")")}}),children&&react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{className:_ImageWithCard_module_css__WEBPACK_IMPORTED_MODULE_2___default.a.cardContainer},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{className:_ImageWithCard_module_css__WEBPACK_IMPORTED_MODULE_2___default.a.card},children)))};ImageWithCard.displayName="ImageWithCard",ImageWithCard.__docgenInfo={description:"",methods:[],displayName:"ImageWithCard",props:{fullWidth:{defaultValue:{value:"false",computed:!1},required:!1},cardAlignment:{defaultValue:{value:"'left'",computed:!1},required:!1},color:{defaultValue:{value:"'plain'",computed:!1},required:!1},cardLayout:{defaultValue:{value:"null",computed:!1},required:!1},className:{defaultValue:{value:"null",computed:!1},required:!1}}},__webpack_exports__.a=ImageWithCard,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/imagewithcard/ImageWithCard.tsx"]={name:"ImageWithCard",docgenInfo:ImageWithCard.__docgenInfo,path:"src/components/imagewithcard/ImageWithCard.tsx"})},75:function(module,__webpack_exports__,__webpack_require__){"use strict";var _home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(73),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__),lodash__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(567),_utils_classNames__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(31),_Koros_module_css__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(243),_Koros_module_css__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_Koros_module_css__WEBPACK_IMPORTED_MODULE_4__),getSVG=function(type,patternName){var patterns={basic:react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("path",{transform:"scale(5.3)",d:"M0,800h20V0c-4.9,0-5,2.6-9.9,2.6S5,0,0,0V800z"}),beat:react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("path",{transform:"scale(5.3)",d:"M20,800H0V0c2.8,0,3.5,2.3,3.5,2.3l2.8,8.4c0.6,1.5,1.9,2.5,3.6,2.5c2.8,0,3.6-2.5,3.6-2.5s2.8-8.1,2.8-8.2 C17,1,18.3,0,20,0V800z"}),pulse:react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("path",{transform:"scale(5.3)",d:"M0,800h20V0c-5.1,0-5.1,6.4-10,6.4S4.9,0,0,0V800z"}),storm:react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("path",{transform:"scale(5.3)",d:"M20,800V0c-2.3,5.5-8.7,8.1-14.3,5.7C3.1,4.7,1.2,2.6,0,0v800H20z"}),wave:react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("polygon",{transform:"scale(5.3)",points:"0,800 20,800 20,0 9.8,10.1 0,0 "})};return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"85"},react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("defs",null,react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("pattern",{id:"".concat(patternName),x:"0",y:"0",width:"106",height:"85",patternUnits:"userSpaceOnUse"},patterns[type])),react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("rect",{fill:"url(#".concat(patternName,")"),width:"100%",height:"85"}))};getSVG.displayName="getSVG";var Koros=function(_ref){var _ref$flipHorizontal=_ref.flipHorizontal,flipHorizontal=void 0!==_ref$flipHorizontal&&_ref$flipHorizontal,_ref$type=_ref.type,type=void 0===_ref$type?"basic":_ref$type,_ref$className=_ref.className,className=void 0===_ref$className?"":_ref$className,patternName="koros_".concat(type),_useState=Object(react__WEBPACK_IMPORTED_MODULE_1__.useState)(Object(lodash__WEBPACK_IMPORTED_MODULE_2__.uniqueId)("".concat(patternName,"-"))),id=Object(_home_runner_work_helsinki_design_system_helsinki_design_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__.a)(_useState,1)[0];return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div",{className:Object(_utils_classNames__WEBPACK_IMPORTED_MODULE_3__.a)(_Koros_module_css__WEBPACK_IMPORTED_MODULE_4___default.a.koros,_Koros_module_css__WEBPACK_IMPORTED_MODULE_4___default.a[type],className,flipHorizontal&&_Koros_module_css__WEBPACK_IMPORTED_MODULE_4___default.a.flipHorizontal)},getSVG(type,id))};Koros.displayName="Koros",Koros.__docgenInfo={description:"",methods:[],displayName:"Koros",props:{flipHorizontal:{defaultValue:{value:"false",computed:!1},required:!1,tsType:{name:"boolean"},description:""},type:{defaultValue:{value:"'basic'",computed:!1},required:!1,tsType:{name:"union",raw:"'basic' | 'beat' | 'pulse' | 'storm' | 'wave'",elements:[{name:"literal",value:"'basic'"},{name:"literal",value:"'beat'"},{name:"literal",value:"'pulse'"},{name:"literal",value:"'storm'"},{name:"literal",value:"'wave'"}]},description:""},className:{defaultValue:{value:"''",computed:!1},required:!1,tsType:{name:"string"},description:""}}},__webpack_exports__.a=Koros,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/koros/Koros.tsx"]={name:"Koros",docgenInfo:Koros.__docgenInfo,path:"src/components/koros/Koros.tsx"})},83:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/placeholder_1920x1080.4c706998.jpg"},84:function(module,exports,__webpack_require__){module.exports={root:"TextInput_root__5m0TS text-input_hds-text-input__2v6_h",label:"TextInput_label__13MAH text-input_hds-text-input__label__3X9fv",hiddenLabel:"TextInput_hiddenLabel__1GX9q helpers_hiddenFromScreen__eAutB",inputWrapper:"TextInput_inputWrapper__2R39j text-input_hds-text-input__input-wrapper__3Ett1",input:"TextInput_input__1Ded8 text-input_hds-text-input__input__cwEgB",helperText:"TextInput_helperText__1_D7n text-input_hds-text-input__helper-text__2oRjX",invalidText:"TextInput_invalidText__2YpkN text-input_hds-text-input__helper-text__2oRjX",invalid:"TextInput_invalid__2whyp text-input_hds-text-input--invalid__33nYw",readOnly:"TextInput_readOnly__23Swk undefined"}},85:function(module,exports,__webpack_require__){module.exports={notification:"Notification_notification__1QWUO notification_hds-notification__3pPBT",icon:"Notification_icon__62E5i notification_hds-icon__Ssw3R",iconInfo:"Notification_iconInfo__2nVEZ notification_hds-icon--info__2xOjA",iconWarning:"Notification_iconWarning__3eKRU notification_hds-icon--warning__8N-Ya",iconAttention:"Notification_iconAttention__11R7F notification_hds-icon--attention__38YAl",iconCheck:"Notification_iconCheck__3pbs2 notification_hds-icon--check__1EyvQ",label:"Notification_label__2C4QP notification_hds-notification__label__2TONJ",labelText:"Notification_labelText__11paX helpers_text-bold__cX4Yj helpers_text-md__9WoP9",bodyText:"Notification_bodyText__1BLL5 notification_hds-notification__body__3UMYA helpers_text-body__2wZWC",warning:"Notification_warning__1aobY notification_hds-notification--warning__2PD13",error:"Notification_error__3VSmR notification_hds-notification--error__3GNeO",success:"Notification_success__w77MB notification_hds-notification--success__1Rfhf"}},86:function(module,exports,__webpack_require__){module.exports={section:"Section_section__2aN0g",withKoros:"Section_withKoros__iMffh",content:"Section_content__1M2cM",plain:"Section_plain__1VFOq",primary:"Section_primary__1gBNt",secondary:"Section_secondary__2nrUi",tertiary:"Section_tertiary__1Qhbo",koros:"Section_koros__2nIn8",basic:"Section_basic__2RriX",topKoros:"Section_topKoros__3bNuu",beat:"Section_beat__3SUSl",pulse:"Section_pulse__6RrTk",storm:"Section_storm__2yare",wave:"Section_wave__2mLFc",bottomKoros:"Section_bottomKoros__3xQv1"}}},[[572,1,2]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,