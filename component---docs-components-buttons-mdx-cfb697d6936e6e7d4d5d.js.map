{"version":3,"sources":["webpack:///../docs/components/buttons.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Button","IconShare","IconAngleRight","color","size","iconLeft","iconRight","isMDXComponent"],"mappings":"ggBAQO,IAAMA,EAAe,Q,6MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,WADR,WAGA,uBACA,gNACA,iBAAQ,CACN,GAAM,UADR,UAGA,iBAAQ,CACN,GAAM,0BADR,0BAGA,4UACA,mMACA,qFACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,2KAAkLC,QAAS,CAC5NJ,QACAH,kBACAQ,eACAC,WACAC,cACAC,oBACCP,QAAQ,cACb,YAAC,IAAD,CAAQA,QAAQ,UAAhB,WACA,YAAC,IAAD,CAAQQ,MAAM,YAAYR,QAAQ,UAAlC,aACA,YAAC,IAAD,CAAQQ,MAAM,WAAWR,QAAQ,UAAjC,YACA,YAAC,IAAD,CAAQQ,MAAM,gBAAgBR,QAAQ,UAAtC,kBAEE,iBAAQ,CACN,GAAM,WADR,WAGA,sTACA,iBAAQ,CACN,GAAM,aADR,aAGA,6NACA,iBAAQ,CACN,GAAM,YADR,YAGA,oEACA,iBAAQ,CACN,GAAM,iBADR,iBAGA,0JACA,iBAAQ,CACN,GAAM,SADR,SAGA,wHACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,iPAAgQC,QAAS,CAC1SJ,QACAH,kBACAQ,eACAC,WACAC,cACAC,oBACCP,QAAQ,cACb,YAAC,IAAD,CAAQS,KAAK,QAAQT,QAAQ,UAA7B,WACA,YAAC,IAAD,CAAQS,KAAK,QAAQD,MAAM,YAAYR,QAAQ,UAA/C,aAGA,YAAC,IAAD,CAAQS,KAAK,QAAQD,MAAM,WAAWR,QAAQ,UAA9C,YAGA,YAAC,IAAD,CAAQS,KAAK,QAAQD,MAAM,gBAAgBR,QAAQ,UAAnD,kBAIE,iBAAQ,CACN,GAAM,SADR,SAGA,sJACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,sPAA2PC,QAAS,CACrSJ,QACAH,kBACAQ,eACAC,WACAC,cACAC,oBACCP,QAAQ,cACb,YAAC,IAAD,CAAQU,SAAU,YAAC,IAAD,CAAWV,QAAQ,cAAgBA,QAAQ,UAA7D,SACA,YAAC,IAAD,CAAQW,UAAW,YAAC,IAAD,CAAgBX,QAAQ,mBAAqBQ,MAAM,YAAYR,QAAQ,UAA1F,YACA,YAAC,IAAD,CAAQU,SAAU,YAAC,IAAD,CAAWV,QAAQ,cAAgBW,UAAW,YAAC,IAAD,CAAgBX,QAAQ,mBAAqBQ,MAAM,WAAWR,QAAQ,UAAtI,UAIE,iBAAQ,CACN,GAAM,YADR,YAGA,iBAAQ,CACN,GAAM,uBADR,uBAGA,iKACA,iBAAQ,CACN,GAAM,yBADR,yBAGA,2HACA,iBAAQ,CACN,GAAM,kBADR,kBAGA,0GACA,iBAAQ,CACN,GAAM,kBADR,kBAGA,qP,oMAKJH,EAAWe,gBAAiB","file":"component---docs-components-buttons-mdx-cfb697d6936e6e7d4d5d.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/helsinki-design-system/helsinki-design-system/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport { Button, IconShare, IconAngleRight } from \"hds-react\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"buttons\"\n    }}>{`Buttons`}</h1>\n    <hr></hr>\n    <p>{`Buttons allow an application to communicate action and direct user intent. Clear labeling and icons (where needed) are used to communicate the actions the buttons perform to the user.`}</p>\n    <h2 {...{\n      \"id\": \"styles\"\n    }}>{`Styles`}</h2>\n    <h3 {...{\n      \"id\": \"using-color-in-buttons\"\n    }}>{`Using color in buttons`}</h3>\n    <p>{`Choose the primary button color by determining your main user interface colors from the brand colors. Use the primary button color also as secondary button color (border and text color). In supplementary button, the text color (and icon if used) is the same as the one used in primary and secondary buttons.`}</p>\n    <p>{`When using strong brand colors in the user interface, you can use the button color based on the background color, since not all of the colors make the content accessible.`}</p>\n    <p>{`There are different kinds of buttons in the buttons library:`}</p>\n    <Playground __position={0} __code={'<Button>Primary</Button>\\n<Button color=\\\"secondary\\\">Secondary</Button>\\n<Button color=\\\"tertiary\\\">Tertiary</Button>\\n<Button color=\\\"supplementary\\\">Supplementary</Button>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Button,\n      IconShare,\n      IconAngleRight\n    }} mdxType=\"Playground\">\n  <Button mdxType=\"Button\">Primary</Button>\n  <Button color=\"secondary\" mdxType=\"Button\">Secondary</Button>\n  <Button color=\"tertiary\" mdxType=\"Button\">Tertiary</Button>\n  <Button color=\"supplementary\" mdxType=\"Button\">Supplementary</Button>\n    </Playground>\n    <h3 {...{\n      \"id\": \"primary\"\n    }}>{`Primary`}</h3>\n    <p>{`Directs the user’s attention to the primary action the application is suggesting that the user take. The solid background color as a visual style is used to highlight the most important actions. To avoid confusing users, don’t use more than one primary button within a section or view.`}</p>\n    <h3 {...{\n      \"id\": \"secondary\"\n    }}>{`Secondary`}</h3>\n    <p>{`Provides a lighter weight button style. Used to indicate a secondary action that compliments a primary action or to reduce visual noise when there are many actions of equal importance on the page.`}</p>\n    <h3 {...{\n      \"id\": \"tertiary\"\n    }}>{`Tertiary`}</h3>\n    <p>{`Provides an alternative color button style.`}</p>\n    <h3 {...{\n      \"id\": \"supplementary\"\n    }}>{`Supplementary`}</h3>\n    <p>{`Is used in multiple scenarios. Used as supplementary buttons. They can be used for example inside components, like cards or such.`}</p>\n    <h2 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h2>\n    <p>{`The buttons come in two sizes; default and small. They can be also used with icons inside them.`}</p>\n    <Playground __position={1} __code={'<Button size=\\\"small\\\">Primary</Button>\\n<Button size=\\\"small\\\" color=\\\"secondary\\\">\\n  Secondary\\n</Button>\\n<Button size=\\\"small\\\" color=\\\"tertiary\\\">\\n  Tertiary\\n</Button>\\n<Button size=\\\"small\\\" color=\\\"supplementary\\\">\\n  Supplementary\\n</Button>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Button,\n      IconShare,\n      IconAngleRight\n    }} mdxType=\"Playground\">\n  <Button size=\"small\" mdxType=\"Button\">Primary</Button>\n  <Button size=\"small\" color=\"secondary\" mdxType=\"Button\">\n    Secondary\n  </Button>\n  <Button size=\"small\" color=\"tertiary\" mdxType=\"Button\">\n    Tertiary\n  </Button>\n  <Button size=\"small\" color=\"supplementary\" mdxType=\"Button\">\n    Supplementary\n  </Button>\n    </Playground>\n    <h2 {...{\n      \"id\": \"icons\"\n    }}>{`Icons`}</h2>\n    <p>{`The buttons can have icons attached before and after the label text. For some cases, both slots can be used at the same time.`}</p>\n    <Playground __position={2} __code={'<Button iconLeft={<IconShare />}>Share</Button>\\n<Button iconRight={<IconAngleRight />} color=\\\"secondary\\\">\\n  Continue\\n</Button>\\n<Button\\n  iconLeft={<IconShare />}\\n  iconRight={<IconAngleRight />}\\n  color=\\\"tertiary\\\"\\n>\\n  Share\\n</Button>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Button,\n      IconShare,\n      IconAngleRight\n    }} mdxType=\"Playground\">\n  <Button iconLeft={<IconShare mdxType=\"IconShare\" />} mdxType=\"Button\">Share</Button>\n  <Button iconRight={<IconAngleRight mdxType=\"IconAngleRight\" />} color=\"secondary\" mdxType=\"Button\">Continue</Button>\n  <Button iconLeft={<IconShare mdxType=\"IconShare\" />} iconRight={<IconAngleRight mdxType=\"IconAngleRight\" />} color=\"tertiary\" mdxType=\"Button\">\n    Share\n  </Button>\n    </Playground>\n    <h2 {...{\n      \"id\": \"grouping\"\n    }}>{`Grouping`}</h2>\n    <h3 {...{\n      \"id\": \"constrained-content\"\n    }}>{`Constrained content`}</h3>\n    <p>{`A modal, card element or such and buttons are aligned to right, but horizontally next to each other: primary on right, secondary on left`}</p>\n    <h3 {...{\n      \"id\": \"unconstrained-content\"\n    }}>{`Unconstrained content`}</h3>\n    <p>{`Buttons aligned to left, but horizontally next to each other: primary on left, secondary on right.`}</p>\n    <h3 {...{\n      \"id\": \"narrow-content\"\n    }}>{`Narrow content`}</h3>\n    <p>{`Buttons aligned vertically on top of each other: primary on top, secondary below.`}</p>\n    <h3 {...{\n      \"id\": \"call-to-action\"\n    }}>{`Call to action`}</h3>\n    <p>{`Do not use generic language that is not related to the action and not relating to the intent of the user. Use clear call to actions that also describes what can be found, or will happen after the user clicks the button.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}