(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{ljdQ:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return i})),a.d(t,"default",(function(){return d}));var s=a("cxan"),l=a("+wNj"),n=(a("ERkP"),a("ZVZ0")),r=a("9Rvw"),o=a("qbsg"),b=a("gW3n"),c=a("vD+s"),u=a("fSvc"),i=(a("l1C2"),{});void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/components/status_label.mdx"}});var p={_frontmatter:i},m=r.a;function d(e){var t,a=e.components,d=Object(l.a)(e,["components"]);return Object(n.b)(m,Object(s.a)({},p,d,{components:a,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"status-label"},"Status label"),Object(n.b)(b.a,{type:"info",mdxType:"StatusLabel"},"Stable"),Object(n.b)(b.a,{type:"success",style:{marginLeft:"var(--spacing-xs)"},mdxType:"StatusLabel"},"Accessible"),Object(n.b)(c.a,{mdxType:"LargeParagraph"},"Status labels can be used to highlight different statuses or items to the user. Status labels cannot be interacted with and they are only meant to convey relevant information."),Object(n.b)("h2",{id:"principles"},"Principles"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"A label text should always be provided with a status label.")," Do not use status labels without text or with icons."),Object(n.b)("li",{parentName:"ul"},"Keep labels short and concise. Use 1-2 words at maximum and do not use labels expanding to two rows."),Object(n.b)("li",{parentName:"ul"},"Use status colours consistently. You can find guidelines on when to use each status colour in the ",Object(n.b)("a",Object(s.a)({parentName:"li"},{href:"/design-tokens/colour#ui-colours",title:"UI colours"}),"colour guidelines"),"."),Object(n.b)("li",{parentName:"ul"},"Status labels are often related to some other element on the page (e.g. table row). Aim to keep status label and their related elements close to each other so the user can easily interpret the relation.")),Object(n.b)("h2",{id:"accessibility"},"Accessibility"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"It is advisable to use colour combinations provided by the implementation.")," These combinations are ensured to comply with WCAG AA requirements. When customising colours, refer to ",Object(n.b)("a",Object(s.a)({parentName:"li"},{href:"/design-tokens/colour",title:"Colour"}),"colour guidelines")," to ensure accessibility."),Object(n.b)("li",{parentName:"ul"},"Remember that colour should never be the only way of conveying information. Make sure the meaning of the status label is clearly described by the label text. Refer to ",Object(n.b)(u.a,{href:"https://www.w3.org/WAI/WCAG21/Understanding/use-of-color.html",external:!0,mdxType:"Link"},"WCAG 2.1 Use of Color guideline")," for more information.")),Object(n.b)("h2",{id:"usage"},"Usage"),Object(n.b)(o.c,{__position:2,__code:"<StatusLabel>Neutral (default)</StatusLabel>\n<StatusLabel type=\"info\" style={{ marginLeft: 'var(--spacing-s)' }}>\n  Info\n</StatusLabel>\n<StatusLabel type=\"success\" style={{ marginLeft: 'var(--spacing-s)' }}>\n  Success\n</StatusLabel>\n<StatusLabel type=\"alert\" style={{ marginLeft: 'var(--spacing-s)' }}>\n  Alert\n</StatusLabel>\n<StatusLabel type=\"error\" style={{ marginLeft: 'var(--spacing-s)' }}>\n  Error\n</StatusLabel>",__scope:(t={props:d,DefaultLayout:r.a,Playground:o.c,StatusLabel:b.a,LargeParagraph:c.a,Link:u.a},t.DefaultLayout=r.a,t._frontmatter=i,t),mdxType:"Playground"},Object(n.b)(b.a,{mdxType:"StatusLabel"},"Neutral (default)"),Object(n.b)(b.a,{type:"info",style:{marginLeft:"var(--spacing-s)"},mdxType:"StatusLabel"},"Info"),Object(n.b)(b.a,{type:"success",style:{marginLeft:"var(--spacing-s)"},mdxType:"StatusLabel"},"Success"),Object(n.b)(b.a,{type:"alert",style:{marginLeft:"var(--spacing-s)"},mdxType:"StatusLabel"},"Alert"),Object(n.b)(b.a,{type:"error",style:{marginLeft:"var(--spacing-s)"},mdxType:"StatusLabel"},"Error")),Object(n.b)("h4",{id:"core-code-example"},"Core code example:"),Object(n.b)("pre",null,Object(n.b)("code",Object(s.a)({parentName:"pre"},{className:"language-html"}),'<span class="hds-status-label">\n  Default\n</span>\n<span class="hds-status-label hds-status-label--info">\n  Info\n</span>\n<span class="hds-status-label hds-status-label--success">\n  Success\n</span>\n<span class="hds-status-label hds-status-label--alert">\n  Alert\n</span>\n<span class="hds-status-label hds-status-label--error">\n  Error\n</span>\n')),Object(n.b)("h4",{id:"react-code-example"},"React code example:"),Object(n.b)("pre",null,Object(n.b)("code",Object(s.a)({parentName:"pre"},{className:"language-tsx"}),'<StatusLabel>Neutral</StatusLabel>\n<StatusLabel type="info">Info</StatusLabel>\n<StatusLabel type="success">Success</StatusLabel>\n<StatusLabel type="alert">Alert</StatusLabel>\n<StatusLabel type="error">Error</StatusLabel>\n')),Object(n.b)("h2",{id:"demos--api"},"Demos & API"),Object(n.b)("h3",{id:"core"},"Core"),Object(n.b)("p",null,Object(n.b)("a",Object(s.a)({parentName:"p"},{href:"/storybook/core/?path=/story/components-status-label--default"}),"Status labels in hds-core")),Object(n.b)("h3",{id:"react"},"React"),Object(n.b)("p",null,Object(n.b)("a",Object(s.a)({parentName:"p"},{href:"/storybook/react/?path=/story/components-status-label--neutral"}),"Status labels in hds-react")),Object(n.b)("p",null,Object(n.b)("a",Object(s.a)({parentName:"p"},{href:"/storybook/react/?path=/docs/components-status-label--neutral"}),"StatusLabel API")))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/components/status_label.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-components-status-label-mdx-e59a03c8c92d52f85f82.js.map