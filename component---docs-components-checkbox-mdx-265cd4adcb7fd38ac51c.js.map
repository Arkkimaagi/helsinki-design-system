{"version":3,"sources":["webpack:///../docs/components/checkbox.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","type","style","marginLeft","parentName","__position","__code","__scope","Playground","Checkbox","StatusLabel","SelectionGroup","ColorBox","LargeParagraph","Text","React","checkedItems","setCheckedItems","onChange","event","target","id","checked","label","disabled","name","isMDXComponent"],"mappings":"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","file":"component---docs-components-checkbox-mdx-265cd4adcb7fd38ac51c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/helsinki-design-system/helsinki-design-system/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport { Checkbox, StatusLabel, SelectionGroup } from \"hds-react\";\nimport ColorBox from \"../../src/components/ColorBox\";\nimport LargeParagraph from \"../../src/components/LargeParagraph\";\nimport Text from \"../../src/components/Text\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"checkboxes\"\n    }}>{`Checkboxes`}</h1>\n    <StatusLabel type=\"info\" mdxType=\"StatusLabel\">Stable</StatusLabel>\n    <StatusLabel type=\"success\" style={{\n      marginLeft: 'var(--spacing-xs)'\n    }} mdxType=\"StatusLabel\">Accessible</StatusLabel>\n    <LargeParagraph mdxType=\"LargeParagraph\">\n  Checkboxes are used to pick an option when one or more options can be chosen. \n    </LargeParagraph>\n    <h2 {...{\n      \"id\": \"principles\"\n    }}>{`Principles`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`If the user can only select one option from a list, use `}<a parentName=\"li\" {...{\n          \"href\": \"/components/radio-button\"\n        }}>{`radio buttons`}</a>{` instead.`}</li>\n      <li parentName=\"ul\">{`Checkbox label should always clearly describe what will happen if the specific option is chosen. A good practice is to keep labels a maximum of three words long.`}</li>\n      <li parentName=\"ul\">{`Checkboxes work independently from each other. This means that checking one option should never affect other checkboxes.`}</li>\n      <li parentName=\"ul\">{`If Checkboxes are related to each other, use `}<a parentName=\"li\" {...{\n          \"href\": \"/components/selection-group\"\n        }}>{`HDS Selection group`}</a>{` to achieve that. `}</li>\n      <li parentName=\"ul\">{`Checkboxes should not have any immediate effects. The checkbox selection takes effect when the user presses a submit button (e.g. in a form). If you need the selection to have an immediate effect, use `}<a parentName=\"li\" {...{\n          \"href\": \"/components/toggle\"\n        }}>{`HDS Toggle button component`}</a>{` instead. Also see `}<a parentName=\"li\" {...{\n          \"href\": \"/guidelines/checkboxes-radiobuttons-toggles\"\n        }}>{`guidelines for choosing between radio buttons, checkboxes, and toggles.`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"accessibility\"\n    }}>{`Accessibility`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`It is advisable to use colour combinations provided by the implementation.`}</strong>{` These combinations are ensured to comply with WCAG AA requirements. When customising colors, refer to `}<a parentName=\"li\" {...{\n          \"href\": \"/design-tokens/colour\",\n          \"title\": \"Colour\"\n        }}>{`colour guidelines`}</a>{` to ensure accessibility.`}</li>\n      <li parentName=\"ul\">{`When multiple Checkboxes are related to each other, group them together using `}<a parentName=\"li\" {...{\n          \"href\": \"/components/selection-group\"\n        }}>{`HDS Selection group`}</a>{`. Selection group also includes a title for the group.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"checkbox-with-label\"\n    }}>{`Checkbox with label`}</h3>\n    <Playground __position={2} __code={'() => {\\n  const [checkedItems, setCheckedItems] = React.useState({\\n    \\'checkbox-checked\\': true,\\n    \\'checkbox-checked-disabled\\': true,\\n  })\\n  const onChange = event => {\\n    setCheckedItems({\\n      ...checkedItems,\\n      [event.target.id]: event.target.checked,\\n    })\\n  }\\n  return (\\n    <>\\n      <Checkbox\\n        label=\\\"Label\\\"\\n        id=\\\"checkbox\\\"\\n        checked={checkedItems[\\'checkbox\\']}\\n        onChange={onChange}\\n      />\\n      <Checkbox\\n        label=\\\"Label\\\"\\n        id=\\\"checkbox-checked\\\"\\n        checked={checkedItems[\\'checkbox-checked\\']}\\n        onChange={onChange}\\n      />\\n      <Checkbox\\n        label=\\\"Label\\\"\\n        id=\\\"checkbox-disabled\\\"\\n        checked={checkedItems[\\'checkbox-disabled\\']}\\n        onChange={onChange}\\n        disabled\\n      />\\n      <Checkbox\\n        label=\\\"Label\\\"\\n        id=\\\"checkbox-checked-disabled\\\"\\n        checked={checkedItems[\\'checkbox-checked-disabled\\']}\\n        onChange={onChange}\\n        disabled\\n      />\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Checkbox,\n      StatusLabel,\n      SelectionGroup,\n      ColorBox,\n      LargeParagraph,\n      Text,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [checkedItems, setCheckedItems] = React.useState({\n          \"checkbox-checked\": true,\n          \"checkbox-checked-disabled\": true\n        });\n\n        const onChange = event => {\n          setCheckedItems({ ...checkedItems,\n            [event.target.id]: event.target.checked\n          });\n        };\n\n        return <>\n      <Checkbox label=\"Label\" id=\"checkbox\" checked={checkedItems[\"checkbox\"]} onChange={onChange} mdxType=\"Checkbox\" />\n      <Checkbox label=\"Label\" id=\"checkbox-checked\" checked={checkedItems[\"checkbox-checked\"]} onChange={onChange} mdxType=\"Checkbox\" />\n      <Checkbox label=\"Label\" id=\"checkbox-disabled\" checked={checkedItems[\"checkbox-disabled\"]} onChange={onChange} disabled mdxType=\"Checkbox\" />\n      <Checkbox label=\"Label\" id=\"checkbox-checked-disabled\" checked={checkedItems[\"checkbox-checked-disabled\"]} onChange={onChange} disabled mdxType=\"Checkbox\" />\n    </>;\n      }}\n    </Playground>\n    <h4 {...{\n      \"id\": \"core-code-example\"\n    }}>{`Core code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!-- Enabled -->\n<div class=\"hds-checkbox\">\n  <input type=\"checkbox\" id=\"checkbox\" class=\"hds-checkbox__input\" />\n  <label for=\"checkbox\"  class=\"hds-checkbox__label\">Label</label>\n</div>\n\n<!-- Enabled & selected -->\n<div class=\"hds-checkbox\">\n  <input type=\"checkbox\" id=\"checkbox-checked\" class=\"hds-checkbox__input\" checked />\n  <label for=\"checkbox\"  class=\"hds-checkbox__label\">Label</label>\n</div>\n\n<!-- Disabled -->\n<div class=\"hds-checkbox\">\n  <input type=\"checkbox\" id=\"checkbox-disabled\" class=\"hds-checkbox__input\" disabled />\n  <label for=\"checkbox\"  class=\"hds-checkbox__label\">Label</label>\n</div>\n\n<!-- Disabled & selected -->\n<div class=\"hds-checkbox\">\n  <input type=\"checkbox\" id=\"checkbox-checked-disabled\" class=\"hds-checkbox__input\" checked disabled />\n  <label for=\"checkbox\"  class=\"hds-checkbox__label\">Label</label>\n</div>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"react-code-example\"\n    }}>{`React code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`  {() => {\n    const [checkedItems, setCheckedItems] = React.useState({ \"checkbox-checked\": true, \"checkbox-checked-disabled\": true });\n    const onChange = (event) => {\n      setCheckedItems({ ...checkedItems, [event.target.id]: event.target.checked });\n    };\n    return <>\n      <Checkbox label=\"Label\" id=\"checkbox\" checked={checkedItems[\"checkbox\"]} onChange={onChange} />\n      <Checkbox label=\"Label\" id=\"checkbox-checked\" checked={checkedItems[\"checkbox-checked\"]} onChange={onChange} />\n      <Checkbox label=\"Label\" id=\"checkbox-disabled\" checked={checkedItems[\"checkbox-disabled\"]} onChange={onChange} disabled />\n      <Checkbox label=\"Label\" id=\"checkbox-checked-disabled\" checked={checkedItems[\"checkbox-checked-disabled\"]} onChange={onChange} disabled />\n    </>\n  }}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"checkbox-group\"\n    }}>{`Checkbox group`}</h3>\n    <p>{`Related checkboxes can be grouped together with the Selection group component. See `}<a parentName=\"p\" {...{\n        \"href\": \"/components/selection-group\"\n      }}>{`HDS Selection group page`}</a>{` for full documentation.`}</p>\n    <Playground __position={3} __code={'() => {\\n  const [checkedItems, setCheckedItems] = React.useState({\\n    \\'v-checkbox1\\': true,\\n    \\'v-checkbox2\\': true,\\n  })\\n  const onChange = event => {\\n    setCheckedItems({\\n      ...checkedItems,\\n      [event.target.name]: event.target.checked,\\n    })\\n  }\\n  return (\\n    <SelectionGroup label=\\\"Checkbox group\\\">\\n      <Checkbox\\n        id=\\\"v-checkbox1\\\"\\n        name=\\\"v-checkbox1\\\"\\n        label=\\\"Option\\\"\\n        checked={checkedItems[\\'v-checkbox1\\']}\\n        onChange={onChange}\\n      />\\n      <Checkbox\\n        id=\\\"v-checkbox2\\\"\\n        name=\\\"v-checkbox2\\\"\\n        label=\\\"Option\\\"\\n        checked={checkedItems[\\'v-checkbox2\\']}\\n        onChange={onChange}\\n      />\\n      <Checkbox\\n        id=\\\"v-checkbox3\\\"\\n        name=\\\"v-checkbox3\\\"\\n        label=\\\"Option\\\"\\n        checked={checkedItems[\\'v-checkbox3\\']}\\n        onChange={onChange}\\n      />\\n      <Checkbox\\n        id=\\\"v-checkbox4\\\"\\n        name=\\\"v-checkbox4\\\"\\n        label=\\\"Option\\\"\\n        checked={checkedItems[\\'v-checkbox4\\']}\\n        onChange={onChange}\\n      />\\n    </SelectionGroup>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Checkbox,\n      StatusLabel,\n      SelectionGroup,\n      ColorBox,\n      LargeParagraph,\n      Text,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [checkedItems, setCheckedItems] = React.useState({\n          \"v-checkbox1\": true,\n          \"v-checkbox2\": true\n        });\n\n        const onChange = event => {\n          setCheckedItems({ ...checkedItems,\n            [event.target.name]: event.target.checked\n          });\n        };\n\n        return <SelectionGroup label=\"Checkbox group\" mdxType=\"SelectionGroup\">\n        <Checkbox id=\"v-checkbox1\" name=\"v-checkbox1\" label=\"Option\" checked={checkedItems[\"v-checkbox1\"]} onChange={onChange} mdxType=\"Checkbox\" />\n        <Checkbox id=\"v-checkbox2\" name=\"v-checkbox2\" label=\"Option\" checked={checkedItems[\"v-checkbox2\"]} onChange={onChange} mdxType=\"Checkbox\" />\n        <Checkbox id=\"v-checkbox3\" name=\"v-checkbox3\" label=\"Option\" checked={checkedItems[\"v-checkbox3\"]} onChange={onChange} mdxType=\"Checkbox\" />\n        <Checkbox id=\"v-checkbox4\" name=\"v-checkbox4\" label=\"Option\" checked={checkedItems[\"v-checkbox4\"]} onChange={onChange} mdxType=\"Checkbox\" />\n      </SelectionGroup>;\n      }}\n    </Playground>\n    <h4 {...{\n      \"id\": \"core-code-example-1\"\n    }}>{`Core code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<fieldset class=\"hds-selection-group\">\n  <legend class=\"hds-selection-group__legend\">Checkbox group</legend>\n  <div class=\"hds-selection-group__items\">\n    <div class=\"hds-selection-group__item\">\n      <div class=\"hds-checkbox\">\n        <input type=\"checkbox\" id=\"v-checkbox1\" name=\"v-checkbox1\" class=\"hds-checkbox__input\" value=\"foo\" checked />\n        <label for=\"v-checkbox1\" class=\"hds-checkbox__label\">Option</label>\n      </div>\n    </div>\n    <div class=\"hds-selection-group__item\">\n      <div class=\"hds-checkbox\">\n        <input type=\"checkbox\" id=\"v-checkbox2\" name=\"v-checkbox2\" class=\"hds-checkbox__input\" value=\"bar\" checked/>\n        <label for=\"v-checkbox2\" class=\"hds-checkbox__label\">Option</label>\n      </div>\n    </div>\n    <div class=\"hds-selection-group__item\">\n      <div class=\"hds-checkbox\">\n        <input type=\"checkbox\" id=\"v-checkbox3\" name=\"v-checkbox3\" class=\"hds-checkbox__input\" value=\"baz\" />\n        <label for=\"v-checkbox3\" class=\"hds-checkbox__label\">Option</label>\n      </div>\n    </div>\n    <div class=\"hds-selection-group__item\">\n      <div class=\"hds-checkbox\">\n        <input type=\"checkbox\" id=\"v-checkbox4\" name=\"v-checkbox4\" class=\"hds-checkbox__input\" value=\"qux\" />\n        <label for=\"v-checkbox4\" class=\"hds-checkbox__label\">Option</label>\n      </div>\n    </div>\n  </div>\n</fieldset>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"react-code-example-1\"\n    }}>{`React code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<SelectionGroup label=\"Checkbox group\">\n  <Checkbox id=\"v-checkbox1\" name=\"v-checkbox1\" label=\"Option\" checked />\n  <Checkbox id=\"v-checkbox2\" name=\"v-checkbox2\" label=\"Option\" checked />\n  <Checkbox id=\"v-checkbox3\" name=\"v-checkbox3\" label=\"Option\" />\n  <Checkbox id=\"v-checkbox4\" name=\"v-checkbox4\" label=\"Option\" />\n</SelectionGroup>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"demos--api\"\n    }}>{`Demos & API`}</h2>\n    <h3 {...{\n      \"id\": \"core\"\n    }}>{`Core`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/storybook/core/?path=/story/components-checkbox--default\"\n      }}>{`Checkboxes in hds-core`}</a></p>\n    <h3 {...{\n      \"id\": \"react\"\n    }}>{`React`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/storybook/react/?path=/story/components-checkbox--default\"\n      }}>{`Checkboxes in hds-react`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/storybook/react/?path=/docs/components-checkbox--default\"\n      }}>{`Checkbox API`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}