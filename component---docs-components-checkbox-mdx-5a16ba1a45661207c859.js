(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{kNAa:function(e,c,a){"use strict";a.r(c),a.d(c,"_frontmatter",(function(){return h})),a.d(c,"default",(function(){return x}));a("gs/B"),a("uydD"),a("Cwzy"),a("odAc"),a("OksV"),a("ho3K");var o=a("ZVZ0"),t=a("9Rvw"),b=a("qbsg"),l=a("RO3K"),n=a("sQ7B"),s=a("vD+s"),i=a("x0e6");a("l1C2");function r(){return(r=Object.assign||function(e){for(var c=1;c<arguments.length;c++){var a=arguments[c];for(var o in a)Object.prototype.hasOwnProperty.call(a,o)&&(e[o]=a[o])}return e}).apply(this,arguments)}var h={};void 0!==h&&h&&h===Object(h)&&Object.isExtensible(h)&&!h.hasOwnProperty("__filemeta")&&Object.defineProperty(h,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/components/checkbox.mdx"}});var d={_frontmatter:h},p=t.a;function x(e){var c,a=e.components,x=function(e,c){if(null==e)return{};var a,o,t={},b=Object.keys(e);for(o=0;o<b.length;o++)a=b[o],c.indexOf(a)>=0||(t[a]=e[a]);return t}(e,["components"]);return Object(o.b)(p,r({},d,x,{components:a,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"checkboxes"},"Checkboxes"),Object(o.b)(s.a,{mdxType:"LargeParagraph"},"Checkboxes are used to pick an option when one or more options can be chosen."),Object(o.b)("h2",{id:"principles"},"Principles"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"If the user can only select one option from a list, use ",Object(o.b)("a",r({parentName:"li"},{href:"/components/radio-button"}),"radio buttons")," instead."),Object(o.b)("li",{parentName:"ul"},"Checkbox label should always describe clearly what will happen if the specific option is chosen. A good practice is to keep labels at maximum of three words long."),Object(o.b)("li",{parentName:"ul"},"Checkboxes work independently from each other. This means that checking one option should never affect other checkboxes."),Object(o.b)("li",{parentName:"ul"},"If possible, align checkbox groups vertically rather than horizontally. Vertical checkbox groups are easier to read.")),Object(o.b)("h2",{id:"accessibility"},"Accessibility"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"It is advisable to use colour combinations provided by the implementation.")," These combinations are ensured to comply with WCAG AA requirements. When customising colors, refer to ",Object(o.b)("a",r({parentName:"li"},{href:"/design-tokens/colour",title:"Colour"}),"colour guidelines")," to ensure accessibility."),Object(o.b)("li",{parentName:"ul"},"It is recommended to include heading for a checkbox group. This makes it easier for the user to understand context of the selection.")),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)(b.c,{__position:1,__code:'<Checkbox label="Label" />\n<Checkbox label="Label" checked />\n<Checkbox label="Label" disabled />\n<Checkbox label="Label" checked disabled />',__scope:(c={props:x,DefaultLayout:t.a,Playground:b.c,Checkbox:l.a,ColorBox:n.a,LargeParagraph:s.a,Text:i.a},c.DefaultLayout=t.a,c._frontmatter=h,c),mdxType:"Playground"},Object(o.b)(l.a,{label:"Label",mdxType:"Checkbox"}),Object(o.b)(l.a,{label:"Label",checked:!0,mdxType:"Checkbox"}),Object(o.b)(l.a,{label:"Label",disabled:!0,mdxType:"Checkbox"}),Object(o.b)(l.a,{label:"Label",checked:!0,disabled:!0,mdxType:"Checkbox"})),Object(o.b)("h5",{id:"core"},"Core:"),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{className:"language-html"}),'\x3c!-- Enabled --\x3e\n<div class="hds-checkbox">\n  <input type="checkbox" id="checkbox" class="hds-checkbox__input" />\n  <label for="checkbox"  class="hds-checkbox__label">Label</label>\n</div>\n\n\x3c!-- Enabled & selected --\x3e\n<div class="hds-checkbox">\n  <input type="checkbox" id="checkbox" class="hds-checkbox__input" checked />\n  <label for="checkbox"  class="hds-checkbox__label">Label</label>\n</div>\n\n\x3c!-- Disabled --\x3e\n<div class="hds-checkbox">\n  <input type="checkbox" id="checkbox" class="hds-checkbox__input" disabled />\n  <label for="checkbox"  class="hds-checkbox__label">Label</label>\n</div>\n\n\x3c!-- Disabled & selected --\x3e\n<div class="hds-checkbox">\n  <input type="checkbox" id="checkbox" class="hds-checkbox__input" checked disabled />\n  <label for="checkbox"  class="hds-checkbox__label">Label</label>\n</div>\n')),Object(o.b)("h5",{id:"react"},"React:"),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{className:"language-tsx"}),'<Checkbox id="checkbox1" label="Label" />\n<Checkbox id="checkbox2" label="Label" checked />\n<Checkbox id="checkbox3" label="Label" disabled />\n<Checkbox id="checkbox4" label="Label" checked disabled />\n')),Object(o.b)("h2",{id:"demos--api"},"Demos & API"),Object(o.b)("h3",{id:"core-1"},"Core"),Object(o.b)("p",null,Object(o.b)("a",r({parentName:"p"},{href:"/storybook/core/?path=/story/checkbox--default"}),"Checkboxes in hds-core")),Object(o.b)("h3",{id:"react-1"},"React"),Object(o.b)("p",null,Object(o.b)("a",r({parentName:"p"},{href:"/storybook/react/?path=/story/components-checkbox--default"}),"Checkboxes in hds-react")),Object(o.b)("p",null,Object(o.b)("a",r({parentName:"p"},{href:"/storybook/react/?path=/docs/components-checkbox--default"}),"Checkbox API")))}void 0!==x&&x&&x===Object(x)&&Object.isExtensible(x)&&!x.hasOwnProperty("__filemeta")&&Object.defineProperty(x,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/components/checkbox.mdx"}}),x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-components-checkbox-mdx-5a16ba1a45661207c859.js.map