(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{kNAa:function(e,c,o){"use strict";o.r(c),o.d(c,"_frontmatter",(function(){return h})),o.d(c,"default",(function(){return x}));o("gs/B"),o("uydD"),o("Cwzy"),o("odAc"),o("OksV"),o("ho3K");var b=o("ZVZ0"),a=o("9Rvw"),t=o("qbsg"),l=o("OBWD"),n=o("sQ7B"),s=o("vD+s"),i=o("x0e6");o("l1C2");function r(){return(r=Object.assign||function(e){for(var c=1;c<arguments.length;c++){var o=arguments[c];for(var b in o)Object.prototype.hasOwnProperty.call(o,b)&&(e[b]=o[b])}return e}).apply(this,arguments)}var h={};void 0!==h&&h&&h===Object(h)&&Object.isExtensible(h)&&!h.hasOwnProperty("__filemeta")&&Object.defineProperty(h,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/components/checkbox.mdx"}});var d={_frontmatter:h},p=a.a;function x(e){var c,o=e.components,x=function(e,c){if(null==e)return{};var o,b,a={},t=Object.keys(e);for(b=0;b<t.length;b++)o=t[b],c.indexOf(o)>=0||(a[o]=e[o]);return a}(e,["components"]);return Object(b.b)(p,r({},d,x,{components:o,mdxType:"MDXLayout"}),Object(b.b)("h1",{id:"checkboxes"},"Checkboxes"),Object(b.b)(s.a,{mdxType:"LargeParagraph"},"Checkboxes are used to pick an option when one or more options can be chosen."),Object(b.b)("h2",{id:"principles"},"Principles"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"If the user can only select one option from a list, use ",Object(b.b)("a",r({parentName:"li"},{href:"/components/radio-button"}),"radio buttons")," instead."),Object(b.b)("li",{parentName:"ul"},"Checkbox label should always describe clearly what will happen if the specific option is chosen. A good practice is to keep labels at maximum of three words long."),Object(b.b)("li",{parentName:"ul"},"Checkboxes work independently from each other. This means that checking one option should never affect other checkboxes."),Object(b.b)("li",{parentName:"ul"},"If possible, align checkbox groups vertically rather than horizontally. Vertical checkbox groups are easier to read.")),Object(b.b)("h2",{id:"accessibility"},"Accessibility"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"It is advisable to use colour combinations provided by the implementation.")," These combinations are ensured to comply with WCAG AA requirements. When customising colors, refer to ",Object(b.b)("a",r({parentName:"li"},{href:"/design-tokens/colour",title:"Colour"}),"colour guidelines")," to ensure accessibility."),Object(b.b)("li",{parentName:"ul"},"It is recommended to include heading for a checkbox group. This makes it easier for the user to understand context of the selection.")),Object(b.b)("h2",{id:"usage"},"Usage"),Object(b.b)(t.c,{__position:1,__code:'<Checkbox label="Label" />\n<Checkbox label="Label" checked />\n<Checkbox label="Label" disabled />\n<Checkbox label="Label" checked disabled />',__scope:(c={props:x,DefaultLayout:a.a,Playground:t.c,Checkbox:l.Checkbox,ColorBox:n.a,LargeParagraph:s.a,Text:i.a},c.DefaultLayout=a.a,c._frontmatter=h,c),mdxType:"Playground"},Object(b.b)(l.Checkbox,{label:"Label",mdxType:"Checkbox"}),Object(b.b)(l.Checkbox,{label:"Label",checked:!0,mdxType:"Checkbox"}),Object(b.b)(l.Checkbox,{label:"Label",disabled:!0,mdxType:"Checkbox"}),Object(b.b)(l.Checkbox,{label:"Label",checked:!0,disabled:!0,mdxType:"Checkbox"})),Object(b.b)("h5",{id:"core"},"Core:"),Object(b.b)("pre",null,Object(b.b)("code",r({parentName:"pre"},{className:"language-html"}),'\x3c!-- Enabled --\x3e\n<div class="hds-checkbox">\n  <input type="checkbox" id="checkbox" class="hds-checkbox__input" />\n  <label for="checkbox"  class="hds-checkbox__label">Label</label>\n</div>\n\n\x3c!-- Enabled & selected --\x3e\n<div class="hds-checkbox">\n  <input type="checkbox" id="checkbox" class="hds-checkbox__input" checked />\n  <label for="checkbox"  class="hds-checkbox__label">Label</label>\n</div>\n\n\x3c!-- Disabled --\x3e\n<div class="hds-checkbox">\n  <input type="checkbox" id="checkbox" class="hds-checkbox__input" disabled />\n  <label for="checkbox"  class="hds-checkbox__label">Label</label>\n</div>\n\n\x3c!-- Disabled & selected --\x3e\n<div class="hds-checkbox">\n  <input type="checkbox" id="checkbox" class="hds-checkbox__input" checked disabled />\n  <label for="checkbox"  class="hds-checkbox__label">Label</label>\n</div>\n')),Object(b.b)("h5",{id:"react"},"React:"),Object(b.b)("pre",null,Object(b.b)("code",r({parentName:"pre"},{className:"language-tsx"}),'<Checkbox id="checkbox1" label="Label" />\n<Checkbox id="checkbox2" label="Label" checked />\n<Checkbox id="checkbox3" label="Label" disabled />\n<Checkbox id="checkbox4" label="Label" checked disabled />\n')),Object(b.b)("h2",{id:"demos--api"},"Demos & API"),Object(b.b)("h3",{id:"core-1"},"Core"),Object(b.b)("p",null,Object(b.b)("a",r({parentName:"p"},{href:"/storybook/core/?path=/story/checkbox--default"}),"Checkboxes in hds-core")),Object(b.b)("h3",{id:"react-1"},"React"),Object(b.b)("p",null,Object(b.b)("a",r({parentName:"p"},{href:"/storybook/react/?path=/story/components-checkbox--default"}),"Checkboxes in hds-react")),Object(b.b)("p",null,Object(b.b)("a",r({parentName:"p"},{href:"/storybook/react/?path=/docs/components-checkbox--default"}),"Checkbox API")))}void 0!==x&&x&&x===Object(x)&&Object.isExtensible(x)&&!x.hasOwnProperty("__filemeta")&&Object.defineProperty(x,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/components/checkbox.mdx"}}),x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-components-checkbox-mdx-9ea6640adc9ee5c7bf9e.js.map