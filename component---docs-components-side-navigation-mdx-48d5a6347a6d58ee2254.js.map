{"version":3,"sources":["webpack:///../docs/components/side_navigation.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","type","style","marginLeft","parentName","__position","__code","__scope","Playground","StatusLabel","SideNavigation","IconHome","IconCogwheel","IconMap","LargeParagraph","Link","React","active","setActive","setActivePage","e","preventDefault","target","getAttribute","backgroundColor","display","height","maxWidth","defaultOpenMainLevels","id","toggleButtonLabel","MainLevel","label","SubLevel","href","onClick","external","openInNewTab","openInNewTabAriaLabel","openInExternalDomainAriaLabel","withDivider","icon","aria-hidden","isMDXComponent"],"mappings":"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","file":"component---docs-components-side-navigation-mdx-48d5a6347a6d58ee2254.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/helsinki-design-system/helsinki-design-system/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport { StatusLabel, SideNavigation } from \"hds-react\";\nimport { IconHome, IconCogwheel, IconMap } from \"hds-react\";\nimport LargeParagraph from \"../../src/components/LargeParagraph\";\nimport Link from \"../../src/components/Link\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"side-navigation\"\n    }}>{`Side navigation`}</h1>\n    <StatusLabel type=\"alert\" mdxType=\"StatusLabel\">Draft</StatusLabel>\n    <StatusLabel type=\"success\" style={{\n      marginLeft: 'var(--spacing-xs)'\n    }} mdxType=\"StatusLabel\">Accessible</StatusLabel>\n    <LargeParagraph mdxType=\"LargeParagraph\">\n  A side navigation is an additional navigation element that is located at the left-hand side of the viewport. It provides an extra level of navigation and also can be helpful in situations where the traditional top navigation feels too clumsy.\n    </LargeParagraph>\n    <h2 {...{\n      \"id\": \"principles\"\n    }}>{`Principles`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`It is strongly recommended to always include the `}<a parentName=\"strong\" {...{\n            \"href\": \"/components/navigation\"\n          }}>{`main (top) navigation component`}</a>{` in your service.`}</strong>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`It is allowed to use the side navigation without the top navigation. However, please note that the top navigation includes important features such as language selection and login. If you rely on the side navigation only, you need to provide these functionalities somewhere else in the user interface.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`If you use both main (top) and side navigation, do not repeat the same navigation items in both of them.`}</li>\n      <li parentName=\"ul\">{`Always position the side navigation to the left-hand side of the page. Keep the navigation in place so the user can always easily locate it.`}</li>\n      <li parentName=\"ul\">{`Keep navigation menu link labels clear and concise. Prefer max 1-2 word long labels. Avoid starting multiple menu link labels with the same word.`}</li>\n      <li parentName=\"ul\">{`The side navigation allows the use of icons for the first-level links.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`If icons are used, all first-level links should have an icon.`}</li>\n          <li parentName=\"ul\">{`Pay attention to the icon choices. The icons should be easily recognisable and not used for decorative purposes only.`}</li>\n          <li parentName=\"ul\">{`The second-level links and external links must not include an icon.`}</li>\n          <li parentName=\"ul\">{`Labels are always required even if icons are used. Do not create icon-only navigations.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`When including external links in the side navigation, follow guidelines of the `}<a parentName=\"li\" {...{\n          \"href\": \"\"\n        }}>{`HDS Link component documentation`}</a>{`.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"when-to-use-a-side-navigation\"\n    }}>{`When to use a side navigation?`}</h3>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do use the Side navigation when`}</strong>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`the service has more than three (3) levels in its navigation hierarchy`}</li>\n          <li parentName=\"ul\">{`the user needs to be able to easily scan through and navigate between pages of a specific level (e.g. admin interfaces or documentation sites)`}</li>\n          <li parentName=\"ul\">{`you are uncertain of the number of the navigation items and you need room for growth and changes`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Don't use the Side navigation when`}</strong>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`you need space for your content (the side navigation uses a large portion of the content area)`}</li>\n          <li parentName=\"ul\">{`your service has a low amount of navigation items and only one level deep navigation hierarchy`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"accessibility\"\n    }}>{`Accessibility`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`When designing a menu link hierarchy, always think about keyboard and screen reader users.`}</strong>{` First, make sure top-level menu labels are clear, and submenu items contextually fit under the top-level. Next, make sure the menu option order is logical and reasonable. Remember that keyboard users need to manually navigate to each element and thus placing a commonly used menu option last is not optimal.`}</li>\n      <li parentName=\"ul\">{`If you are using both the main (top) and the side navigation, it is a good practice to include an anchor link to the side navigation at the beginning of the main (top) navigation. This way assistive technologies can easily access the side navigation after a page load.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"usage-and-variations\"\n    }}>{`Usage and variations`}</h2>\n    <h3 {...{\n      \"id\": \"default\"\n    }}>{`Default`}</h3>\n    <p>{`The default side navigation has support for two (2) levels of navigation, icons, external links, and a divider to create logical groups for the navigation items.`}</p>\n    <Playground __position={2} __code={'() => {\\n  const [active, setActive] = React.useState(\\'/archive\\')\\n  const setActivePage = e => {\\n    e.preventDefault()\\n    setActive(e.target.getAttribute(\\'href\\'))\\n  }\\n  return (\\n    <div\\n      style={{\\n        backgroundColor: \\'#f5f5f5\\',\\n        display: \\'grid\\',\\n      }}\\n    >\\n      <div\\n        style={{\\n          height: \\'100%\\',\\n          maxWidth: \\'400px\\',\\n        }}\\n      >\\n        <SideNavigation\\n          defaultOpenMainLevels={[]}\\n          id=\\\"side-navigation\\\"\\n          toggleButtonLabel=\\\"Navigate to page\\\"\\n        >\\n          <SideNavigation.MainLevel id=\\\"#main-level-1\\\" label=\\\"Events\\\">\\n            <SideNavigation.SubLevel\\n              href=\\\"/events\\\"\\n              active={active === \\'/events\\'}\\n              id=\\\"sub-level-1\\\"\\n              label=\\\"All events\\\"\\n              onClick={setActivePage}\\n            />\\n            <SideNavigation.SubLevel\\n              href=\\\"/archive\\\"\\n              active={active === \\'/archive\\'}\\n              id=\\\"sub-level-2\\\"\\n              label=\\\"Archive\\\"\\n              onClick={setActivePage}\\n            />\\n            <SideNavigation.SubLevel\\n              href=\\\"/new-event\\\"\\n              active={active === \\'/new-event\\'}\\n              id=\\\"sub-level-3\\\"\\n              label=\\\"Create a new event\\\"\\n              onClick={setActivePage}\\n            />\\n          </SideNavigation.MainLevel>\\n          <SideNavigation.MainLevel id=\\\"main-level-2\\\" label=\\\"Events on map\\\">\\n            <SideNavigation.SubLevel\\n              href=\\\"/map\\\"\\n              active={active === \\'/map\\'}\\n              id=\\\"sub-level-4\\\"\\n              label=\\\"Map\\\"\\n              onClick={setActivePage}\\n            />\\n            <SideNavigation.SubLevel\\n              href=\\\"/edit-event-locations\\\"\\n              active={active === \\'/edit-event-locations\\'}\\n              id=\\\"sub-level-5\\\"\\n              label=\\\"Edit event locations\\\"\\n              onClick={setActivePage}\\n            />\\n            <SideNavigation.SubLevel\\n              href=\\\"/new-location\\\"\\n              active={active === \\'/new-location\\'}\\n              id=\\\"sub-level-6\\\"\\n              label=\\\"Create a new location\\\"\\n              onClick={setActivePage}\\n            />\\n          </SideNavigation.MainLevel>\\n          <SideNavigation.MainLevel\\n            href=\\\"/settings\\\"\\n            active={active === \\'/settings\\'}\\n            id=\\\"main-level-3\\\"\\n            label=\\\"Settings\\\"\\n            onClick={setActivePage}\\n          />\\n          <SideNavigation.MainLevel\\n            external\\n            href=\\\"https://tapahtumat.hel.fi/\\\"\\n            openInNewTab\\n            openInNewTabAriaLabel=\\\"Opens in a new tab.\\\"\\n            openInExternalDomainAriaLabel=\\\"Opens a different website.\\\"\\n            id=\\\"main-level-4\\\"\\n            label=\\\"Tapahtumat.hel.fi\\\"\\n            openInExternalDomainAriaLabel=\\\"Opens a different website\\\"\\n            withDivider\\n          />\\n        </SideNavigation>\\n      </div>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      StatusLabel,\n      SideNavigation,\n      IconHome,\n      IconCogwheel,\n      IconMap,\n      LargeParagraph,\n      Link,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const [active, setActive] = React.useState('/archive');\n\n        const setActivePage = e => {\n          e.preventDefault();\n          setActive(e.target.getAttribute('href'));\n        };\n\n        return <div style={{\n          backgroundColor: '#f5f5f5',\n          display: 'grid'\n        }}>\n    <div style={{\n            height: '100%',\n            maxWidth: '400px'\n          }}>\n      <SideNavigation defaultOpenMainLevels={[]} id=\"side-navigation\" toggleButtonLabel=\"Navigate to page\" mdxType=\"SideNavigation\">\n        <SideNavigation.MainLevel id=\"#main-level-1\" label=\"Events\">\n          <SideNavigation.SubLevel href=\"/events\" active={active === '/events'} id=\"sub-level-1\" label=\"All events\" onClick={setActivePage} />\n          <SideNavigation.SubLevel href=\"/archive\" active={active === '/archive'} id=\"sub-level-2\" label=\"Archive\" onClick={setActivePage} />\n          <SideNavigation.SubLevel href=\"/new-event\" active={active === '/new-event'} id=\"sub-level-3\" label=\"Create a new event\" onClick={setActivePage} />\n        </SideNavigation.MainLevel>\n        <SideNavigation.MainLevel id=\"main-level-2\" label=\"Events on map\">\n          <SideNavigation.SubLevel href=\"/map\" active={active === '/map'} id=\"sub-level-4\" label=\"Map\" onClick={setActivePage} />\n          <SideNavigation.SubLevel href=\"/edit-event-locations\" active={active === '/edit-event-locations'} id=\"sub-level-5\" label=\"Edit event locations\" onClick={setActivePage} />\n          <SideNavigation.SubLevel href=\"/new-location\" active={active === '/new-location'} id=\"sub-level-6\" label=\"Create a new location\" onClick={setActivePage} />\n        </SideNavigation.MainLevel>\n        <SideNavigation.MainLevel href=\"/settings\" active={active === '/settings'} id=\"main-level-3\" label=\"Settings\" onClick={setActivePage} />\n        <SideNavigation.MainLevel external href=\"https://tapahtumat.hel.fi/\" openInNewTab openInNewTabAriaLabel=\"Opens in a new tab.\" openInExternalDomainAriaLabel=\"Opens a different website.\" id=\"main-level-4\" label=\"Tapahtumat.hel.fi\" openInExternalDomainAriaLabel=\"Opens a different website\" withDivider />\n      </SideNavigation>\n    </div>\n  </div>;\n      }}\n    </Playground>\n    <h4 {...{\n      \"id\": \"react-code-example\"\n    }}>{`React code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`{() => {\n  const [active, setActive] = React.useState('/archive');\n  const setActivePage = (e) => {\n    e.preventDefault();\n    setActive(e.target.getAttribute('href'));\n  }\n  return (<div\n    style={{\n      backgroundColor: '#f5f5f5',\n      display: 'grid',\n    }}\n  >\n    <div\n      style={{\n        height: '100%',\n        maxWidth: '400px'\n      }}\n    >\n      <SideNavigation\n        defaultOpenMainLevels={[]}\n        id=\"side-navigation\"\n        toggleButtonLabel=\"Navigate to page\"\n      >\n        <SideNavigation.MainLevel\n          id=\"#main-level-1\"\n          label=\"Events\"\n        >\n          <SideNavigation.SubLevel\n            href=\"/events\"\n            active={active === '/events'}\n            id=\"sub-level-1\"\n            label=\"All events\"\n            onClick={setActivePage}\n          />\n          <SideNavigation.SubLevel\n            href=\"/archive\"\n            active={active === '/archive'}\n            id=\"sub-level-2\"\n            label=\"Archive\"\n            onClick={setActivePage}\n          />\n          <SideNavigation.SubLevel\n            href=\"/new-event\"\n            active={active === '/new-event'}\n            id=\"sub-level-3\"\n            label=\"Create a new event\"\n            onClick={setActivePage}\n          />\n        </SideNavigation.MainLevel>\n        <SideNavigation.MainLevel\n          id=\"main-level-2\"\n          label=\"Events on map\"\n        >\n          <SideNavigation.SubLevel\n            href=\"/map\"\n            active={active === '/map'}\n            id=\"sub-level-4\"\n            label=\"Map\"\n            onClick={setActivePage}\n          />\n          <SideNavigation.SubLevel\n            href=\"/edit-event-locations\"\n            active={active === '/edit-event-locations'}\n            id=\"sub-level-5\"\n            label=\"Edit event locations\"\n            onClick={setActivePage}\n          />\n          <SideNavigation.SubLevel\n            href=\"/new-location\"\n            active={active === '/new-location'}\n            id=\"sub-level-6\"\n            label=\"Create a new location\"\n            onClick={setActivePage}\n          />\n        </SideNavigation.MainLevel>\n        <SideNavigation.MainLevel\n          href=\"/settings\"\n          active={active === '/settings'}\n          id=\"main-level-3\"\n          label=\"Settings\"\n          onClick={setActivePage}\n        />\n        <SideNavigation.MainLevel\n          external\n          href=\"https://tapahtumat.hel.fi/\"\n          openInNewTab\n          openInNewTabAriaLabel=\"Opens in a new tab.\"\n          openInExternalDomainAriaLabel=\"Opens a different website.\"\n          id=\"main-level-4\"\n          label=\"Tapahtumat.hel.fi\"\n          withDivider\n        />\n      </SideNavigation>\n    </div>\n  </div>)\n}}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"with-icons\"\n    }}>{`With icons`}</h3>\n    <p>{`Icons are allowed to be used with the main level navigation items and accordions. The second-level navigation items do not have icon support. Also, icons are not visible in the mobile side navigation variant.`}</p>\n    <Playground __position={3} __code={'() => {\\n  const [active, setActive] = React.useState(\\'/archive\\')\\n  const setActivePage = e => {\\n    e.preventDefault()\\n    setActive(e.target.getAttribute(\\'href\\'))\\n  }\\n  return (\\n    <div\\n      style={{\\n        backgroundColor: \\'#f5f5f5\\',\\n        display: \\'grid\\',\\n      }}\\n    >\\n      <div\\n        style={{\\n          height: \\'100%\\',\\n          maxWidth: \\'400px\\',\\n        }}\\n      >\\n        <SideNavigation\\n          defaultOpenMainLevels={[]}\\n          id=\\\"side-navigation-icons\\\"\\n          toggleButtonLabel=\\\"Navigate to page\\\"\\n        >\\n          <SideNavigation.MainLevel\\n            icon={<IconHome aria-hidden />}\\n            id=\\\"main-level-icons-1\\\"\\n            label=\\\"Events\\\"\\n          >\\n            <SideNavigation.SubLevel\\n              href=\\\"/events\\\"\\n              id=\\\"sub-level-icons-1\\\"\\n              active={active === \\'/all-events\\'}\\n              label=\\\"All events\\\"\\n              onClick={setActivePage}\\n            />\\n            <SideNavigation.SubLevel\\n              href=\\\"/archive\\\"\\n              id=\\\"sub-level-icons-2\\\"\\n              active={active === \\'/archive\\'}\\n              label=\\\"Archive\\\"\\n              onClick={setActivePage}\\n            />\\n            <SideNavigation.SubLevel\\n              href=\\\"/new-event\\\"\\n              id=\\\"sub-level-icons-3\\\"\\n              active={active === \\'/new-event\\'}\\n              label=\\\"Create a new event\\\"\\n              onClick={setActivePage}\\n            />\\n          </SideNavigation.MainLevel>\\n          <SideNavigation.MainLevel\\n            icon={<IconMap aria-hidden />}\\n            id=\\\"main-level-icons-2\\\"\\n            label=\\\"Events on map\\\"\\n          >\\n            <SideNavigation.SubLevel\\n              href=\\\"/map\\\"\\n              id=\\\"sub-level-icons-4\\\"\\n              active={active === \\'/map\\'}\\n              label=\\\"Map\\\"\\n              onClick={setActivePage}\\n            />\\n            <SideNavigation.SubLevel\\n              href=\\\"/edit-event-locations\\\"\\n              id=\\\"sub-level-icons-5\\\"\\n              active={active === \\'/edit-event-locations\\'}\\n              label=\\\"Edit event locations\\\"\\n              onClick={setActivePage}\\n            />\\n            <SideNavigation.SubLevel\\n              href=\\\"/new-location\\\"\\n              id=\\\"sub-level-6\\\"\\n              active={active === \\'/new-location\\'}\\n              label=\\\"Create a new location\\\"\\n              onClick={setActivePage}\\n            />\\n          </SideNavigation.MainLevel>\\n          <SideNavigation.MainLevel\\n            href=\\\"/settings\\\"\\n            icon={<IconCogwheel aria-hidden />}\\n            id=\\\"main-level-icons-3\\\"\\n            active={active === \\'/settings\\'}\\n            label=\\\"Settings\\\"\\n            onClick={setActivePage}\\n          />\\n          <SideNavigation.MainLevel\\n            external\\n            href=\\\"https://tapahtumat.hel.fi/\\\"\\n            openInNewTab\\n            openInNewTabAriaLabel=\\\"Opens in a new tab.\\\"\\n            openInExternalDomainAriaLabel=\\\"Opens a different website.\\\"\\n            id=\\\"main-level-icons-4\\\"\\n            label=\\\"Tapahtumat.hel.fi\\\"\\n            openInExternalDomainAriaLabel=\\\"Opens a different website\\\"\\n            withDivider\\n          />\\n        </SideNavigation>\\n      </div>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      StatusLabel,\n      SideNavigation,\n      IconHome,\n      IconCogwheel,\n      IconMap,\n      LargeParagraph,\n      Link,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const [active, setActive] = React.useState('/archive');\n\n        const setActivePage = e => {\n          e.preventDefault();\n          setActive(e.target.getAttribute('href'));\n        };\n\n        return <div style={{\n          backgroundColor: '#f5f5f5',\n          display: 'grid'\n        }}>\n    <div style={{\n            height: '100%',\n            maxWidth: '400px'\n          }}>\n      <SideNavigation defaultOpenMainLevels={[]} id=\"side-navigation-icons\" toggleButtonLabel=\"Navigate to page\" mdxType=\"SideNavigation\">\n        <SideNavigation.MainLevel icon={<IconHome aria-hidden mdxType=\"IconHome\" />} id=\"main-level-icons-1\" label=\"Events\">\n          <SideNavigation.SubLevel href=\"/events\" id=\"sub-level-icons-1\" active={active === '/all-events'} label=\"All events\" onClick={setActivePage} />\n          <SideNavigation.SubLevel href=\"/archive\" id=\"sub-level-icons-2\" active={active === '/archive'} label=\"Archive\" onClick={setActivePage} />\n          <SideNavigation.SubLevel href=\"/new-event\" id=\"sub-level-icons-3\" active={active === '/new-event'} label=\"Create a new event\" onClick={setActivePage} />\n        </SideNavigation.MainLevel>\n        <SideNavigation.MainLevel icon={<IconMap aria-hidden mdxType=\"IconMap\" />} id=\"main-level-icons-2\" label=\"Events on map\">\n          <SideNavigation.SubLevel href=\"/map\" id=\"sub-level-icons-4\" active={active === '/map'} label=\"Map\" onClick={setActivePage} />\n          <SideNavigation.SubLevel href=\"/edit-event-locations\" id=\"sub-level-icons-5\" active={active === '/edit-event-locations'} label=\"Edit event locations\" onClick={setActivePage} />\n          <SideNavigation.SubLevel href=\"/new-location\" id=\"sub-level-6\" active={active === '/new-location'} label=\"Create a new location\" onClick={setActivePage} />\n        </SideNavigation.MainLevel>\n        <SideNavigation.MainLevel href=\"/settings\" icon={<IconCogwheel aria-hidden mdxType=\"IconCogwheel\" />} id=\"main-level-icons-3\" active={active === '/settings'} label=\"Settings\" onClick={setActivePage} />\n        <SideNavigation.MainLevel external href=\"https://tapahtumat.hel.fi/\" openInNewTab openInNewTabAriaLabel=\"Opens in a new tab.\" openInExternalDomainAriaLabel=\"Opens a different website.\" id=\"main-level-icons-4\" label=\"Tapahtumat.hel.fi\" openInExternalDomainAriaLabel=\"Opens a different website\" withDivider />\n      </SideNavigation>\n    </div>\n  </div>;\n      }}\n    </Playground>\n    <h4 {...{\n      \"id\": \"react-code-example-1\"\n    }}>{`React code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`{() =>  {\n  const [active, setActive] = React.useState('/archive');\n  const setActivePage = (e) => {\n    e.preventDefault();\n    setActive(e.target.getAttribute('href'));\n  }\n  return (<div\n    style={{\n      backgroundColor: '#f5f5f5',\n      display: 'grid',\n    }}\n  >\n    <div\n      style={{\n        height: '100%',\n        maxWidth: '400px'\n      }}\n    >\n      <SideNavigation\n        defaultOpenMainLevels={[]}\n        id=\"side-navigation-icons\"\n        toggleButtonLabel=\"Navigate to page\"\n      >\n        <SideNavigation.MainLevel\n          icon={<IconHome aria-hidden />}\n          id=\"main-level-icons-1\"\n          label=\"Events\"\n        >\n          <SideNavigation.SubLevel\n            href=\"/all-events\"\n            id=\"sub-level-icons-1\"\n            active={active === '/all-events'}\n            label=\"All events\"\n            onClick={setActivePage}\n          />\n          <SideNavigation.SubLevel\n            href=\"/archive\"\n            id=\"sub-level-icons-2\"\n            active={active === '/archive'}\n            label=\"Archive\"\n            onClick={setActivePage}\n          />\n          <SideNavigation.SubLevel\n            href=\"/new-event\"\n            id=\"sub-level-icons-3\"\n            active={active === '/new-event'}\n            label=\"Create a new event\"\n            onClick={setActivePage}\n          />\n        </SideNavigation.MainLevel>\n        <SideNavigation.MainLevel\n          icon={<IconMap aria-hidden />}\n          id=\"main-level-icons-2\"\n          label=\"Events on map\"\n        >\n          <SideNavigation.SubLevel\n            href=\"/map\"\n            id=\"sub-level-icons-4\"\n            active={active === '/map'}\n            label=\"Map\"\n            onClick={setActivePage}\n          />\n          <SideNavigation.SubLevel\n            href=\"/edit-event-locations\"\n            id=\"sub-level-icons-5\"\n            active={active === '/edit-event-locations'}\n            label=\"Edit event locations\"\n            onClick={setActivePage}\n          />\n          <SideNavigation.SubLevel\n            href=\"/new-location\"\n            id=\"sub-level-6\"\n            active={active === '/new-location'}\n            label=\"Create a new location\"\n            onClick={setActivePage}\n          />\n        </SideNavigation.MainLevel>\n        <SideNavigation.MainLevel\n          href=\"/settings\"\n          icon={<IconCogwheel aria-hidden />}\n          id=\"main-level-icons-3\"\n          active={active === '/settings'}\n          label=\"Settings\"\n          onClick={setActivePage}\n        />\n        <SideNavigation.MainLevel\n          external\n          href=\"https://tapahtumat.hel.fi/\"\n          openInNewTab\n          openInNewTabAriaLabel=\"Opens in a new tab.\"\n          openInExternalDomainAriaLabel=\"Opens a different website.\"\n          id=\"main-level-icons-4\"\n          label=\"Tapahtumat.hel.fi\"\n          withDivider\n        />\n      </SideNavigation>\n    </div>\n  </div>)\n}}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"demos--api\"\n    }}>{`Demos & API`}</h2>\n    <h3 {...{\n      \"id\": \"core\"\n    }}>{`Core`}</h3>\n    <p><em parentName=\"p\">{`Not included in hds-core!`}</em></p>\n    <h3 {...{\n      \"id\": \"react\"\n    }}>{`React`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/storybook/react/?path=/story/components-sidenavigation--default\"\n      }}>{`Side navigation in hds-react`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/storybook/react/?path=/docs/components-sidenavigation--default\"\n      }}>{`Side navigation API`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}