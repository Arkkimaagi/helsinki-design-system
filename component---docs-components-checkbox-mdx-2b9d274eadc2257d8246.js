(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{kNAa:function(e,c,a){"use strict";a.r(c),a.d(c,"_frontmatter",(function(){return p})),a.d(c,"default",(function(){return u}));var b=a("cxan"),t=a("+wNj"),o=a("ZVZ0"),l=a("9Rvw"),n=a("qbsg"),s=a("l1mD"),i=a("zi+I"),h=a("sQ7B"),r=a("vD+s"),d=a("x0e6"),p=(a("l1C2"),{});void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/components/checkbox.mdx"}});var x={_frontmatter:p},k=l.a;function u(e){var c,a=e.components,u=Object(t.a)(e,["components"]);return Object(o.b)(k,Object(b.a)({},x,u,{components:a,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"checkboxes"},"Checkboxes"),Object(o.b)(s.a,{type:"info",mdxType:"StatusLabel"},"Stable"),Object(o.b)(r.a,{mdxType:"LargeParagraph"},"Checkboxes are used to pick an option when one or more options can be chosen."),Object(o.b)("h2",{id:"principles"},"Principles"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"If the user can only select one option from a list, use ",Object(o.b)("a",Object(b.a)({parentName:"li"},{href:"/components/radio-button"}),"radio buttons")," instead."),Object(o.b)("li",{parentName:"ul"},"Checkbox label should always describe clearly what will happen if the specific option is chosen. A good practice is to keep labels at maximum of three words long."),Object(o.b)("li",{parentName:"ul"},"Checkboxes work independently from each other. This means that checking one option should never affect other checkboxes."),Object(o.b)("li",{parentName:"ul"},"If possible, align checkbox groups vertically rather than horizontally. Vertical checkbox groups are easier to read.")),Object(o.b)("h2",{id:"accessibility"},"Accessibility"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"It is advisable to use colour combinations provided by the implementation.")," These combinations are ensured to comply with WCAG AA requirements. When customising colors, refer to ",Object(o.b)("a",Object(b.a)({parentName:"li"},{href:"/design-tokens/colour",title:"Colour"}),"colour guidelines")," to ensure accessibility."),Object(o.b)("li",{parentName:"ul"},"It is recommended to include heading for a checkbox group. This makes it easier for the user to understand context of the selection.")),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("h3",{id:"checkbox-with-label"},"Checkbox with label"),Object(o.b)(n.c,{__position:2,__code:'<Checkbox label="Label" />\n<Checkbox label="Label" checked />\n<Checkbox label="Label" disabled />\n<Checkbox label="Label" checked disabled />',__scope:(c={props:u,DefaultLayout:l.a,Playground:n.c,Checkbox:i.a,StatusLabel:s.a,ColorBox:h.a,LargeParagraph:r.a,Text:d.a},c.DefaultLayout=l.a,c._frontmatter=p,c),mdxType:"Playground"},Object(o.b)(i.a,{label:"Label",mdxType:"Checkbox"}),Object(o.b)(i.a,{label:"Label",checked:!0,mdxType:"Checkbox"}),Object(o.b)(i.a,{label:"Label",disabled:!0,mdxType:"Checkbox"}),Object(o.b)(i.a,{label:"Label",checked:!0,disabled:!0,mdxType:"Checkbox"})),Object(o.b)("h4",{id:"core-code-example"},"Core code example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(b.a)({parentName:"pre"},{className:"language-html"}),'\x3c!-- Enabled --\x3e\n<div class="hds-checkbox">\n  <input type="checkbox" id="checkbox" class="hds-checkbox__input" />\n  <label for="checkbox"  class="hds-checkbox__label">Label</label>\n</div>\n\n\x3c!-- Enabled & selected --\x3e\n<div class="hds-checkbox">\n  <input type="checkbox" id="checkbox" class="hds-checkbox__input" checked />\n  <label for="checkbox"  class="hds-checkbox__label">Label</label>\n</div>\n\n\x3c!-- Disabled --\x3e\n<div class="hds-checkbox">\n  <input type="checkbox" id="checkbox" class="hds-checkbox__input" disabled />\n  <label for="checkbox"  class="hds-checkbox__label">Label</label>\n</div>\n\n\x3c!-- Disabled & selected --\x3e\n<div class="hds-checkbox">\n  <input type="checkbox" id="checkbox" class="hds-checkbox__input" checked disabled />\n  <label for="checkbox"  class="hds-checkbox__label">Label</label>\n</div>\n')),Object(o.b)("h4",{id:"react-code-example"},"React code example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(b.a)({parentName:"pre"},{className:"language-tsx"}),'<Checkbox id="checkbox1" label="Label" />\n<Checkbox id="checkbox2" label="Label" checked />\n<Checkbox id="checkbox3" label="Label" disabled />\n<Checkbox id="checkbox4" label="Label" checked disabled />\n')),Object(o.b)("h2",{id:"demos--api"},"Demos & API"),Object(o.b)("h3",{id:"core"},"Core"),Object(o.b)("p",null,Object(o.b)("a",Object(b.a)({parentName:"p"},{href:"/storybook/core/?path=/story/components-checkbox--default"}),"Checkboxes in hds-core")),Object(o.b)("h3",{id:"react"},"React"),Object(o.b)("p",null,Object(o.b)("a",Object(b.a)({parentName:"p"},{href:"/storybook/react/?path=/story/components-checkbox--default"}),"Checkboxes in hds-react")),Object(o.b)("p",null,Object(o.b)("a",Object(b.a)({parentName:"p"},{href:"/storybook/react/?path=/docs/components-checkbox--default"}),"Checkbox API")))}void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/components/checkbox.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-components-checkbox-mdx-2b9d274eadc2257d8246.js.map