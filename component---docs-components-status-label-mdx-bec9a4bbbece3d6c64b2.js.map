{"version":3,"sources":["webpack:///../docs/components/status_label.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","type","style","marginLeft","parentName","href","external","__position","__code","__scope","Playground","StatusLabel","LargeParagraph","Link","isMDXComponent"],"mappings":"wSAUaA,G,UAAe,S,kNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,iBAAQ,CACN,GAAM,gBADR,gBAGA,YAAC,IAAD,CAAaC,KAAK,OAAOD,QAAQ,eAAjC,UACA,YAAC,IAAD,CAAaC,KAAK,UAAUC,MAAO,CACjCC,WAAY,qBACXH,QAAQ,eAFX,cAGA,YAAC,IAAD,CAAgBA,QAAQ,kBAAxB,mLAGA,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAII,WAAW,MAAK,sBAAQA,WAAW,MAAnB,+DAApB,yDACA,kBAAIA,WAAW,MAAf,wGACA,kBAAIA,WAAW,MAAf,qGAA0H,6BAAGA,WAAW,MAAS,CAC7I,KAAQ,mCACR,MAAS,eAF6G,qBAA1H,KAIA,kBAAIA,WAAW,MAAf,+MAEF,iBAAQ,CACN,GAAM,iBADR,iBAGA,sBACE,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,8EAApB,2GAA+O,6BAAGA,WAAW,MAAS,CAClQ,KAAQ,wBACR,MAAS,WAFkO,qBAA/O,6BAIA,kBAAIA,WAAW,MAAf,0KAA+L,YAAC,IAAD,CAAMC,KAAK,gEAAgEC,UAAQ,EAACN,QAAQ,QAA5F,mCAA/L,2BAEF,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAYO,WAAY,EAAGC,OAAQ,ybAAkcC,SAAO,GAC1eV,QACAH,kBACAc,eACAC,gBACAC,mBACAC,UAN0e,gBAO1ejB,IAP0e,EAQ1eH,eAR0e,GASzeO,QAAQ,cACX,YAAC,IAAD,CAAaA,QAAQ,eAArB,qBACA,YAAC,IAAD,CAAaC,KAAK,OAAOC,MAAO,CAC5BC,WAAY,oBACXH,QAAQ,eAFb,QAGA,YAAC,IAAD,CAAaC,KAAK,UAAUC,MAAO,CAC/BC,WAAY,oBACXH,QAAQ,eAFb,WAGA,YAAC,IAAD,CAAaC,KAAK,QAAQC,MAAO,CAC7BC,WAAY,oBACXH,QAAQ,eAFb,SAGA,YAAC,IAAD,CAAaC,KAAK,QAAQC,MAAO,CAC7BC,WAAY,oBACXH,QAAQ,eAFb,UAIA,iBAAQ,CACN,GAAM,qBADR,sBAGA,uBAAK,gCAAMI,WAAW,OAAU,CAC5B,UAAa,kBADZ,wWAkBL,iBAAQ,CACN,GAAM,sBADR,uBAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,uOAQL,iBAAQ,CACN,GAAM,cADR,eAGA,iBAAQ,CACN,GAAM,QADR,QAGA,qBAAG,6BAAGA,WAAW,KAAQ,CACrB,KAAQ,kEADT,8BAGH,iBAAQ,CACN,GAAM,SADR,SAGA,qBAAG,6BAAGA,WAAW,KAAQ,CACrB,KAAQ,mEADT,+BAGH,qBAAG,6BAAGA,WAAW,KAAQ,CACrB,KAAQ,kEADT,0B,gNAOPP,EAAWiB,gBAAiB","file":"component---docs-components-status-label-mdx-bec9a4bbbece3d6c64b2.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/helsinki-design-system/helsinki-design-system/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport { StatusLabel } from \"hds-react\";\nimport LargeParagraph from \"../../src/components/LargeParagraph\";\nimport Link from \"../../src/components/Link\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"status-label\"\n    }}>{`Status label`}</h1>\n    <StatusLabel type=\"info\" mdxType=\"StatusLabel\">Stable</StatusLabel>\n    <StatusLabel type=\"success\" style={{\n      marginLeft: 'var(--spacing-xs)'\n    }} mdxType=\"StatusLabel\">Accessible</StatusLabel>\n    <LargeParagraph mdxType=\"LargeParagraph\">\n  Status labels can be used to highlight different statuses or items to the user. Status labels cannot be interacted with and they are only meant to convey relevant information.\n    </LargeParagraph>\n    <h2 {...{\n      \"id\": \"principles\"\n    }}>{`Principles`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`A label text should always be provided with a status label.`}</strong>{` Do not use status labels without text or with icons.`}</li>\n      <li parentName=\"ul\">{`Keep labels short and concise. Use 1-2 words at maximum and do not use labels expanding to two rows.`}</li>\n      <li parentName=\"ul\">{`Use status colours consistently. You can find guidelines on when to use each status colour in the `}<a parentName=\"li\" {...{\n          \"href\": \"/design-tokens/colour#ui-colours\",\n          \"title\": \"UI colours\"\n        }}>{`colour guidelines`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`Status labels are often related to some other element on the page (e.g. table row). Aim to keep status label and their related elements close to each other so the user can easily interpret the relation.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"accessibility\"\n    }}>{`Accessibility`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`It is advisable to use colour combinations provided by the implementation.`}</strong>{` These combinations are ensured to comply with WCAG AA requirements. When customising colours, refer to `}<a parentName=\"li\" {...{\n          \"href\": \"/design-tokens/colour\",\n          \"title\": \"Colour\"\n        }}>{`colour guidelines`}</a>{` to ensure accessibility.`}</li>\n      <li parentName=\"ul\">{`Remember that colour should never be the only way of conveying information. Make sure the meaning of the status label is clearly described by the label text. Refer to `}<Link href=\"https://www.w3.org/WAI/WCAG21/Understanding/use-of-color.html\" external mdxType=\"Link\">{`WCAG 2.1 Use of Color guideline`}</Link>{` for more information.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={2} __code={'<StatusLabel>Neutral (default)</StatusLabel>\\n<StatusLabel type=\\\"info\\\" style={{ marginLeft: \\'var(--spacing-s)\\' }}>\\n  Info\\n</StatusLabel>\\n<StatusLabel type=\\\"success\\\" style={{ marginLeft: \\'var(--spacing-s)\\' }}>\\n  Success\\n</StatusLabel>\\n<StatusLabel type=\\\"alert\\\" style={{ marginLeft: \\'var(--spacing-s)\\' }}>\\n  Alert\\n</StatusLabel>\\n<StatusLabel type=\\\"error\\\" style={{ marginLeft: \\'var(--spacing-s)\\' }}>\\n  Error\\n</StatusLabel>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      StatusLabel,\n      LargeParagraph,\n      Link,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <StatusLabel mdxType=\"StatusLabel\">Neutral (default)</StatusLabel>\n    <StatusLabel type=\"info\" style={{\n        marginLeft: 'var(--spacing-s)'\n      }} mdxType=\"StatusLabel\">Info</StatusLabel>\n    <StatusLabel type=\"success\" style={{\n        marginLeft: 'var(--spacing-s)'\n      }} mdxType=\"StatusLabel\">Success</StatusLabel>\n    <StatusLabel type=\"alert\" style={{\n        marginLeft: 'var(--spacing-s)'\n      }} mdxType=\"StatusLabel\">Alert</StatusLabel>\n    <StatusLabel type=\"error\" style={{\n        marginLeft: 'var(--spacing-s)'\n      }} mdxType=\"StatusLabel\">Error</StatusLabel>\n    </Playground>\n    <h4 {...{\n      \"id\": \"core-code-example\"\n    }}>{`Core code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<span class=\"hds-status-label\">\n  Default\n</span>\n<span class=\"hds-status-label hds-status-label--info\">\n  Info\n</span>\n<span class=\"hds-status-label hds-status-label--success\">\n  Success\n</span>\n<span class=\"hds-status-label hds-status-label--alert\">\n  Alert\n</span>\n<span class=\"hds-status-label hds-status-label--error\">\n  Error\n</span>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"react-code-example\"\n    }}>{`React code example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<StatusLabel>Neutral</StatusLabel>\n<StatusLabel type=\"info\">Info</StatusLabel>\n<StatusLabel type=\"success\">Success</StatusLabel>\n<StatusLabel type=\"alert\">Alert</StatusLabel>\n<StatusLabel type=\"error\">Error</StatusLabel>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"demos--api\"\n    }}>{`Demos & API`}</h2>\n    <h3 {...{\n      \"id\": \"core\"\n    }}>{`Core`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/storybook/core/?path=/story/components-status-label--default\"\n      }}>{`Status labels in hds-core`}</a></p>\n    <h3 {...{\n      \"id\": \"react\"\n    }}>{`React`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/storybook/react/?path=/story/components-status-label--neutral\"\n      }}>{`Status labels in hds-react`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/storybook/react/?path=/docs/components-status-label--neutral\"\n      }}>{`StatusLabel API`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}